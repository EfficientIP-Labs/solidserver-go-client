/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// AppPoolEditInput struct for AppPoolEditInput
type AppPoolEditInput struct {
	// The Fully Qualified Domain Name (FQDN) of the application the object belongs to.
	ApplicationFqdn *string `json:"application_fqdn,omitempty"`
	// The database identifier (ID) of the application the object belongs to.
	ApplicationId *int32 `json:"application_id,omitempty"`
	// The name of the application the object belongs to.
	ApplicationName *string `json:"application_name,omitempty"`
	// The database identifier (ID) of the pool, a unique numeric key value automatically incremented when you add a pool. Use the ID to specify the pool of your choice.
	PoolId *int32 `json:"pool_id,omitempty"`
	// The load-balancing mode of the pool.
	PoolLbMode *string `json:"pool_lb_mode,omitempty"`
	// The name of the pool.
	PoolName *string `json:"pool_name,omitempty"`
	// The type of the pool.
	PoolType *string `json:"pool_type,omitempty"`
	// The session duration, in seconds. You only need to set it if the parameter <b>affinity_state</b> is set to <b>1</b>.
	PoolAffinitySessionTime *int32 `json:"pool_affinity_session_time,omitempty"`
	// The session affinity activation status.
	PoolAffinityState *int32 `json:"pool_affinity_state,omitempty"`
	// The database identifier (ID) of the GSLB server associated with the application, a unique identifier automatically incremented when you add the server. Use it to identify the GSLB server of your choice.
	GslbserverId *int32 `json:"gslbserver_id,omitempty"`
	// The maximum number of active nodes with the lowest latency that must answer the queries made to the application FQDN. You only need to set it if you set the <b>lb_mode</b> to <b>latency</b>.
	PoolBestActiveNodes *int32 `json:"pool_best_active_nodes,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewAppPoolEditInput instantiates a new AppPoolEditInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPoolEditInput() *AppPoolEditInput {
	this := AppPoolEditInput{}
	return &this
}

// NewAppPoolEditInputWithDefaults instantiates a new AppPoolEditInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPoolEditInputWithDefaults() *AppPoolEditInput {
	this := AppPoolEditInput{}
	return &this
}

// GetApplicationFqdn returns the ApplicationFqdn field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetApplicationFqdn() string {
	if o == nil || o.ApplicationFqdn == nil {
		var ret string
		return ret
	}
	return *o.ApplicationFqdn
}

// GetApplicationFqdnOk returns a tuple with the ApplicationFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetApplicationFqdnOk() (*string, bool) {
	if o == nil || o.ApplicationFqdn == nil {
		return nil, false
	}
	return o.ApplicationFqdn, true
}

// HasApplicationFqdn returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasApplicationFqdn() bool {
	if o != nil && o.ApplicationFqdn != nil {
		return true
	}

	return false
}

// SetApplicationFqdn gets a reference to the given string and assigns it to the ApplicationFqdn field.
func (o *AppPoolEditInput) SetApplicationFqdn(v string) {
	o.ApplicationFqdn = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetApplicationId() int32 {
	if o == nil || o.ApplicationId == nil {
		var ret int32
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetApplicationIdOk() (*int32, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given int32 and assigns it to the ApplicationId field.
func (o *AppPoolEditInput) SetApplicationId(v int32) {
	o.ApplicationId = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *AppPoolEditInput) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolId() int32 {
	if o == nil || o.PoolId == nil {
		var ret int32
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolIdOk() (*int32, bool) {
	if o == nil || o.PoolId == nil {
		return nil, false
	}
	return o.PoolId, true
}

// HasPoolId returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolId() bool {
	if o != nil && o.PoolId != nil {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given int32 and assigns it to the PoolId field.
func (o *AppPoolEditInput) SetPoolId(v int32) {
	o.PoolId = &v
}

// GetPoolLbMode returns the PoolLbMode field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolLbMode() string {
	if o == nil || o.PoolLbMode == nil {
		var ret string
		return ret
	}
	return *o.PoolLbMode
}

// GetPoolLbModeOk returns a tuple with the PoolLbMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolLbModeOk() (*string, bool) {
	if o == nil || o.PoolLbMode == nil {
		return nil, false
	}
	return o.PoolLbMode, true
}

// HasPoolLbMode returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolLbMode() bool {
	if o != nil && o.PoolLbMode != nil {
		return true
	}

	return false
}

// SetPoolLbMode gets a reference to the given string and assigns it to the PoolLbMode field.
func (o *AppPoolEditInput) SetPoolLbMode(v string) {
	o.PoolLbMode = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolName() string {
	if o == nil || o.PoolName == nil {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolNameOk() (*string, bool) {
	if o == nil || o.PoolName == nil {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolName() bool {
	if o != nil && o.PoolName != nil {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *AppPoolEditInput) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPoolType returns the PoolType field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolType() string {
	if o == nil || o.PoolType == nil {
		var ret string
		return ret
	}
	return *o.PoolType
}

// GetPoolTypeOk returns a tuple with the PoolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolTypeOk() (*string, bool) {
	if o == nil || o.PoolType == nil {
		return nil, false
	}
	return o.PoolType, true
}

// HasPoolType returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolType() bool {
	if o != nil && o.PoolType != nil {
		return true
	}

	return false
}

// SetPoolType gets a reference to the given string and assigns it to the PoolType field.
func (o *AppPoolEditInput) SetPoolType(v string) {
	o.PoolType = &v
}

// GetPoolAffinitySessionTime returns the PoolAffinitySessionTime field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolAffinitySessionTime() int32 {
	if o == nil || o.PoolAffinitySessionTime == nil {
		var ret int32
		return ret
	}
	return *o.PoolAffinitySessionTime
}

// GetPoolAffinitySessionTimeOk returns a tuple with the PoolAffinitySessionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolAffinitySessionTimeOk() (*int32, bool) {
	if o == nil || o.PoolAffinitySessionTime == nil {
		return nil, false
	}
	return o.PoolAffinitySessionTime, true
}

// HasPoolAffinitySessionTime returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolAffinitySessionTime() bool {
	if o != nil && o.PoolAffinitySessionTime != nil {
		return true
	}

	return false
}

// SetPoolAffinitySessionTime gets a reference to the given int32 and assigns it to the PoolAffinitySessionTime field.
func (o *AppPoolEditInput) SetPoolAffinitySessionTime(v int32) {
	o.PoolAffinitySessionTime = &v
}

// GetPoolAffinityState returns the PoolAffinityState field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolAffinityState() int32 {
	if o == nil || o.PoolAffinityState == nil {
		var ret int32
		return ret
	}
	return *o.PoolAffinityState
}

// GetPoolAffinityStateOk returns a tuple with the PoolAffinityState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolAffinityStateOk() (*int32, bool) {
	if o == nil || o.PoolAffinityState == nil {
		return nil, false
	}
	return o.PoolAffinityState, true
}

// HasPoolAffinityState returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolAffinityState() bool {
	if o != nil && o.PoolAffinityState != nil {
		return true
	}

	return false
}

// SetPoolAffinityState gets a reference to the given int32 and assigns it to the PoolAffinityState field.
func (o *AppPoolEditInput) SetPoolAffinityState(v int32) {
	o.PoolAffinityState = &v
}

// GetGslbserverId returns the GslbserverId field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetGslbserverId() int32 {
	if o == nil || o.GslbserverId == nil {
		var ret int32
		return ret
	}
	return *o.GslbserverId
}

// GetGslbserverIdOk returns a tuple with the GslbserverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetGslbserverIdOk() (*int32, bool) {
	if o == nil || o.GslbserverId == nil {
		return nil, false
	}
	return o.GslbserverId, true
}

// HasGslbserverId returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasGslbserverId() bool {
	if o != nil && o.GslbserverId != nil {
		return true
	}

	return false
}

// SetGslbserverId gets a reference to the given int32 and assigns it to the GslbserverId field.
func (o *AppPoolEditInput) SetGslbserverId(v int32) {
	o.GslbserverId = &v
}

// GetPoolBestActiveNodes returns the PoolBestActiveNodes field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetPoolBestActiveNodes() int32 {
	if o == nil || o.PoolBestActiveNodes == nil {
		var ret int32
		return ret
	}
	return *o.PoolBestActiveNodes
}

// GetPoolBestActiveNodesOk returns a tuple with the PoolBestActiveNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetPoolBestActiveNodesOk() (*int32, bool) {
	if o == nil || o.PoolBestActiveNodes == nil {
		return nil, false
	}
	return o.PoolBestActiveNodes, true
}

// HasPoolBestActiveNodes returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasPoolBestActiveNodes() bool {
	if o != nil && o.PoolBestActiveNodes != nil {
		return true
	}

	return false
}

// SetPoolBestActiveNodes gets a reference to the given int32 and assigns it to the PoolBestActiveNodes field.
func (o *AppPoolEditInput) SetPoolBestActiveNodes(v int32) {
	o.PoolBestActiveNodes = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AppPoolEditInput) GetWarnings() string {
	if o == nil || o.Warnings == nil {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolEditInput) GetWarningsOk() (*string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AppPoolEditInput) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *AppPoolEditInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o AppPoolEditInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationFqdn != nil {
		toSerialize["application_fqdn"] = o.ApplicationFqdn
	}
	if o.ApplicationId != nil {
		toSerialize["application_id"] = o.ApplicationId
	}
	if o.ApplicationName != nil {
		toSerialize["application_name"] = o.ApplicationName
	}
	if o.PoolId != nil {
		toSerialize["pool_id"] = o.PoolId
	}
	if o.PoolLbMode != nil {
		toSerialize["pool_lb_mode"] = o.PoolLbMode
	}
	if o.PoolName != nil {
		toSerialize["pool_name"] = o.PoolName
	}
	if o.PoolType != nil {
		toSerialize["pool_type"] = o.PoolType
	}
	if o.PoolAffinitySessionTime != nil {
		toSerialize["pool_affinity_session_time"] = o.PoolAffinitySessionTime
	}
	if o.PoolAffinityState != nil {
		toSerialize["pool_affinity_state"] = o.PoolAffinityState
	}
	if o.GslbserverId != nil {
		toSerialize["gslbserver_id"] = o.GslbserverId
	}
	if o.PoolBestActiveNodes != nil {
		toSerialize["pool_best_active_nodes"] = o.PoolBestActiveNodes
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableAppPoolEditInput struct {
	value *AppPoolEditInput
	isSet bool
}

func (v NullableAppPoolEditInput) Get() *AppPoolEditInput {
	return v.value
}

func (v *NullableAppPoolEditInput) Set(val *AppPoolEditInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPoolEditInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPoolEditInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPoolEditInput(val *AppPoolEditInput) *NullableAppPoolEditInput {
	return &NullableAppPoolEditInput{value: val, isSet: true}
}

func (v NullableAppPoolEditInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPoolEditInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


