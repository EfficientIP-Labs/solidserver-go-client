/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerIpamPoolData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerIpamPoolData{}

// DataInnerIpamPoolData struct for DataInnerIpamPoolData
type DataInnerIpamPoolData struct {
	// The human readable version of the parameter <b>pool_end_ip_addr</b>.
	PoolEndHostaddr *string `json:"pool_end_hostaddr,omitempty"`
	// The last IP address of the IPv4 pool, in hexadecimal format.
	PoolEndIpAddr *string `json:"pool_end_ip_addr,omitempty"`
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	PoolMultistatus *string `json:"pool_multistatus,omitempty"`
	// The name of the class applied to the parent of the IPv4 network the object belongs to, it can be preceded by the class directory.
	ParentNetworkClassName *string `json:"parent_network_class_name,omitempty"`
	// The database identifier (ID) of the parent IPv4 network. It identifies the parent of the IPv4 network the object belongs to. <b>0</b> indicates that the network the object belongs to has no parent network.
	ParentNetworkId *string `json:"parent_network_id,omitempty"`
	// The name of the parent IPv4 network:<ul class=dashed ><li> <b>#</b> indicates that the network the object belongs to has no parent network.<br/></li><li> <b>Default</b> indicates that the network the object belongs to is in an orphan network.<br/></li></ul>
	ParentNetworkName *string `json:"parent_network_name,omitempty"`
	// The number of IP addresses of the parent of the network the object belongs to.
	ParentNetworkSize *string `json:"parent_network_size,omitempty"`
	// The name of the class applied to the IPv4 pool, it can be preceded by the class directory.
	PoolClassName *string `json:"pool_class_name,omitempty"`
	// The class parameters applied to the IPv4 pool.
	PoolClassParameters []ApiClassParameterOutputEntry `json:"pool_class_parameters,omitempty"`
	// The last IP address of the IPv4 pool, in hexadecimal format.
	PoolEndAddressAddr *string `json:"pool_end_address_addr,omitempty"`
	// The database identifier (ID) of the IPv4 pool.
	PoolId *string `json:"pool_id,omitempty"`
	// The name of the IPv4 pool.
	PoolName *string `json:"pool_name,omitempty"`
	// The reservation status of the IPv4 pool. If set <b>1</b>, the IP addresses it contains cannot be assigned.
	PoolReadOnly *string `json:"pool_read_only,omitempty"`
	// The number of IP addresses the IPv4 pool contains.
	PoolSize *string `json:"pool_size,omitempty"`
	// The first IP address of the IPv4 pool, in hexadecimal format.
	PoolStartAddressAddr *string `json:"pool_start_address_addr,omitempty"`
	// The name of the class applied to the space the object belongs to, it can be preceded by the class directory.
	SpaceClassName *string `json:"space_class_name,omitempty"`
	// The class parameters applied to the space the object belongs to.
	SpaceClassParameters []ApiClassParameterOutputEntry `json:"space_class_parameters,omitempty"`
	// The description of the space the object belongs to.
	SpaceDescription *string `json:"space_description,omitempty"`
	// The database identifier (ID) of the space the object belongs to, a unique numeric key value automatically incremented when you add a space.
	SpaceId *string `json:"space_id,omitempty"`
	// The template status of the space the object belongs to. If the space is used as template (1), all the IPv4 networks, pools and IP addresses it contains are also used as template.
	SpaceIsTemplate *string `json:"space_is_template,omitempty"`
	// The name of the space the object belongs to.
	SpaceName *string `json:"space_name,omitempty"`
	// The human readable version of the parameter <b>pool_start_ip_addr</b>.
	PoolStartHostaddr *string `json:"pool_start_hostaddr,omitempty"`
	// The first IP address of the IPv4 pool, in hexadecimal format.
	PoolStartIpAddr *string `json:"pool_start_ip_addr,omitempty"`
	// The name of the class applied to the IPv4 network the object belongs to, it can be preceded by the class directory.
	NetworkClassName *string `json:"network_class_name,omitempty"`
	// The class parameters applied to the IPv4 network the object belongs to.
	NetworkClassParameters []ApiClassParameterOutputEntry `json:"network_class_parameters,omitempty"`
	// The last IP address of the IPv4 network the object belongs to.
	NetworkEndAddressAddr *string `json:"network_end_address_addr,omitempty"`
	// The database identifier (ID) of the IPv4 network the object belongs to.
	NetworkId *string `json:"network_id,omitempty"`
	// The name of the IPv4 network the object belongs to. <b>Default</b> indicates that the network the object belongs to is an orphan network.
	NetworkName *string `json:"network_name,omitempty"`
	// The number of IP addresses the network the object belongs to contains.
	NetworkSize *string `json:"network_size,omitempty"`
	// The first IP address of the IPv4 network the object belongs to.
	NetworkStartAddressAddr *string `json:"network_start_address_addr,omitempty"`
	// The creation date of the IPv4 pool, in decimal UNIX date format.
	PoolOperationDetailsAddedOn *string `json:"pool_operation_details_added_on,omitempty"`
	// The call stack of the IPv4 pool operation details, as follows: <b>&lt;service1&gt;&amp;&lt;service2&gt;&amp;&lt;service3&gt;</b>... .
	PoolOperationDetailsCallStack *string `json:"pool_operation_details_call_stack,omitempty"`
	// The name of the module where the IPv4 pool addition originated.
	PoolOperationDetailsOriginModule *string `json:"pool_operation_details_origin_module,omitempty"`
	// The login of the user who requested the IPv4 pool.
	PoolOperationDetailsRequestedBy *string `json:"pool_operation_details_requested_by,omitempty"`
	// The login of the user who added the IPv4 pool.
	PoolOperationDetailsAddedBy *string `json:"pool_operation_details_added_by,omitempty"`
	// The last time the IPv4 pool was updated, in decimal UNIX date format.
	PoolOperationDetailsLastUpdatedOn *string `json:"pool_operation_details_last_updated_on,omitempty"`
	// The database identifier (ID) of the IPv4 VLSM block-type network duplicated, in a VLSM child space, from the network the pool belongs to. <b>0</b> indicates that the parent of the network the pool belongs to is not duplicated as a VLSM block-type network in a child space.
	VlsmBlockId *string `json:"vlsm_block_id,omitempty"`
	// The database identifier (ID) of the IPv4 subnet-type network, located in the VLSM parent space, from which the parent of the network the pool belongs to was duplicated. <b>0</b> indicates that the parent of the network the pool belongs to is not a VLSM block-type network duplicated from a parent space.
	VlsmNetworkId *string `json:"vlsm_network_id,omitempty"`
}

// NewDataInnerIpamPoolData instantiates a new DataInnerIpamPoolData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerIpamPoolData() *DataInnerIpamPoolData {
	this := DataInnerIpamPoolData{}
	return &this
}

// NewDataInnerIpamPoolDataWithDefaults instantiates a new DataInnerIpamPoolData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerIpamPoolDataWithDefaults() *DataInnerIpamPoolData {
	this := DataInnerIpamPoolData{}
	return &this
}

// GetPoolEndHostaddr returns the PoolEndHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolEndHostaddr() string {
	if o == nil || IsNil(o.PoolEndHostaddr) {
		var ret string
		return ret
	}
	return *o.PoolEndHostaddr
}

// GetPoolEndHostaddrOk returns a tuple with the PoolEndHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolEndHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolEndHostaddr) {
		return nil, false
	}
	return o.PoolEndHostaddr, true
}

// HasPoolEndHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolEndHostaddr() bool {
	if o != nil && !IsNil(o.PoolEndHostaddr) {
		return true
	}

	return false
}

// SetPoolEndHostaddr gets a reference to the given string and assigns it to the PoolEndHostaddr field.
func (o *DataInnerIpamPoolData) SetPoolEndHostaddr(v string) {
	o.PoolEndHostaddr = &v
}

// GetPoolEndIpAddr returns the PoolEndIpAddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolEndIpAddr() string {
	if o == nil || IsNil(o.PoolEndIpAddr) {
		var ret string
		return ret
	}
	return *o.PoolEndIpAddr
}

// GetPoolEndIpAddrOk returns a tuple with the PoolEndIpAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolEndIpAddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolEndIpAddr) {
		return nil, false
	}
	return o.PoolEndIpAddr, true
}

// HasPoolEndIpAddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolEndIpAddr() bool {
	if o != nil && !IsNil(o.PoolEndIpAddr) {
		return true
	}

	return false
}

// SetPoolEndIpAddr gets a reference to the given string and assigns it to the PoolEndIpAddr field.
func (o *DataInnerIpamPoolData) SetPoolEndIpAddr(v string) {
	o.PoolEndIpAddr = &v
}

// GetPoolMultistatus returns the PoolMultistatus field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolMultistatus() string {
	if o == nil || IsNil(o.PoolMultistatus) {
		var ret string
		return ret
	}
	return *o.PoolMultistatus
}

// GetPoolMultistatusOk returns a tuple with the PoolMultistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolMultistatusOk() (*string, bool) {
	if o == nil || IsNil(o.PoolMultistatus) {
		return nil, false
	}
	return o.PoolMultistatus, true
}

// HasPoolMultistatus returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolMultistatus() bool {
	if o != nil && !IsNil(o.PoolMultistatus) {
		return true
	}

	return false
}

// SetPoolMultistatus gets a reference to the given string and assigns it to the PoolMultistatus field.
func (o *DataInnerIpamPoolData) SetPoolMultistatus(v string) {
	o.PoolMultistatus = &v
}

// GetParentNetworkClassName returns the ParentNetworkClassName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetParentNetworkClassName() string {
	if o == nil || IsNil(o.ParentNetworkClassName) {
		var ret string
		return ret
	}
	return *o.ParentNetworkClassName
}

// GetParentNetworkClassNameOk returns a tuple with the ParentNetworkClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetParentNetworkClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkClassName) {
		return nil, false
	}
	return o.ParentNetworkClassName, true
}

// HasParentNetworkClassName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasParentNetworkClassName() bool {
	if o != nil && !IsNil(o.ParentNetworkClassName) {
		return true
	}

	return false
}

// SetParentNetworkClassName gets a reference to the given string and assigns it to the ParentNetworkClassName field.
func (o *DataInnerIpamPoolData) SetParentNetworkClassName(v string) {
	o.ParentNetworkClassName = &v
}

// GetParentNetworkId returns the ParentNetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetParentNetworkId() string {
	if o == nil || IsNil(o.ParentNetworkId) {
		var ret string
		return ret
	}
	return *o.ParentNetworkId
}

// GetParentNetworkIdOk returns a tuple with the ParentNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetParentNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkId) {
		return nil, false
	}
	return o.ParentNetworkId, true
}

// HasParentNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasParentNetworkId() bool {
	if o != nil && !IsNil(o.ParentNetworkId) {
		return true
	}

	return false
}

// SetParentNetworkId gets a reference to the given string and assigns it to the ParentNetworkId field.
func (o *DataInnerIpamPoolData) SetParentNetworkId(v string) {
	o.ParentNetworkId = &v
}

// GetParentNetworkName returns the ParentNetworkName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetParentNetworkName() string {
	if o == nil || IsNil(o.ParentNetworkName) {
		var ret string
		return ret
	}
	return *o.ParentNetworkName
}

// GetParentNetworkNameOk returns a tuple with the ParentNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetParentNetworkNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkName) {
		return nil, false
	}
	return o.ParentNetworkName, true
}

// HasParentNetworkName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasParentNetworkName() bool {
	if o != nil && !IsNil(o.ParentNetworkName) {
		return true
	}

	return false
}

// SetParentNetworkName gets a reference to the given string and assigns it to the ParentNetworkName field.
func (o *DataInnerIpamPoolData) SetParentNetworkName(v string) {
	o.ParentNetworkName = &v
}

// GetParentNetworkSize returns the ParentNetworkSize field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetParentNetworkSize() string {
	if o == nil || IsNil(o.ParentNetworkSize) {
		var ret string
		return ret
	}
	return *o.ParentNetworkSize
}

// GetParentNetworkSizeOk returns a tuple with the ParentNetworkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetParentNetworkSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkSize) {
		return nil, false
	}
	return o.ParentNetworkSize, true
}

// HasParentNetworkSize returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasParentNetworkSize() bool {
	if o != nil && !IsNil(o.ParentNetworkSize) {
		return true
	}

	return false
}

// SetParentNetworkSize gets a reference to the given string and assigns it to the ParentNetworkSize field.
func (o *DataInnerIpamPoolData) SetParentNetworkSize(v string) {
	o.ParentNetworkSize = &v
}

// GetPoolClassName returns the PoolClassName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolClassName() string {
	if o == nil || IsNil(o.PoolClassName) {
		var ret string
		return ret
	}
	return *o.PoolClassName
}

// GetPoolClassNameOk returns a tuple with the PoolClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolClassName) {
		return nil, false
	}
	return o.PoolClassName, true
}

// HasPoolClassName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolClassName() bool {
	if o != nil && !IsNil(o.PoolClassName) {
		return true
	}

	return false
}

// SetPoolClassName gets a reference to the given string and assigns it to the PoolClassName field.
func (o *DataInnerIpamPoolData) SetPoolClassName(v string) {
	o.PoolClassName = &v
}

// GetPoolClassParameters returns the PoolClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.PoolClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.PoolClassParameters
}

// GetPoolClassParametersOk returns a tuple with the PoolClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.PoolClassParameters) {
		return nil, false
	}
	return o.PoolClassParameters, true
}

// HasPoolClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolClassParameters() bool {
	if o != nil && !IsNil(o.PoolClassParameters) {
		return true
	}

	return false
}

// SetPoolClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the PoolClassParameters field.
func (o *DataInnerIpamPoolData) SetPoolClassParameters(v []ApiClassParameterOutputEntry) {
	o.PoolClassParameters = v
}

// GetPoolEndAddressAddr returns the PoolEndAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolEndAddressAddr() string {
	if o == nil || IsNil(o.PoolEndAddressAddr) {
		var ret string
		return ret
	}
	return *o.PoolEndAddressAddr
}

// GetPoolEndAddressAddrOk returns a tuple with the PoolEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolEndAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolEndAddressAddr) {
		return nil, false
	}
	return o.PoolEndAddressAddr, true
}

// HasPoolEndAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolEndAddressAddr() bool {
	if o != nil && !IsNil(o.PoolEndAddressAddr) {
		return true
	}

	return false
}

// SetPoolEndAddressAddr gets a reference to the given string and assigns it to the PoolEndAddressAddr field.
func (o *DataInnerIpamPoolData) SetPoolEndAddressAddr(v string) {
	o.PoolEndAddressAddr = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolId() string {
	if o == nil || IsNil(o.PoolId) {
		var ret string
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.PoolId) {
		return nil, false
	}
	return o.PoolId, true
}

// HasPoolId returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolId() bool {
	if o != nil && !IsNil(o.PoolId) {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given string and assigns it to the PoolId field.
func (o *DataInnerIpamPoolData) SetPoolId(v string) {
	o.PoolId = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolName() string {
	if o == nil || IsNil(o.PoolName) {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolName) {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolName() bool {
	if o != nil && !IsNil(o.PoolName) {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *DataInnerIpamPoolData) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPoolReadOnly returns the PoolReadOnly field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolReadOnly() string {
	if o == nil || IsNil(o.PoolReadOnly) {
		var ret string
		return ret
	}
	return *o.PoolReadOnly
}

// GetPoolReadOnlyOk returns a tuple with the PoolReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolReadOnlyOk() (*string, bool) {
	if o == nil || IsNil(o.PoolReadOnly) {
		return nil, false
	}
	return o.PoolReadOnly, true
}

// HasPoolReadOnly returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolReadOnly() bool {
	if o != nil && !IsNil(o.PoolReadOnly) {
		return true
	}

	return false
}

// SetPoolReadOnly gets a reference to the given string and assigns it to the PoolReadOnly field.
func (o *DataInnerIpamPoolData) SetPoolReadOnly(v string) {
	o.PoolReadOnly = &v
}

// GetPoolSize returns the PoolSize field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolSize() string {
	if o == nil || IsNil(o.PoolSize) {
		var ret string
		return ret
	}
	return *o.PoolSize
}

// GetPoolSizeOk returns a tuple with the PoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolSize) {
		return nil, false
	}
	return o.PoolSize, true
}

// HasPoolSize returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolSize() bool {
	if o != nil && !IsNil(o.PoolSize) {
		return true
	}

	return false
}

// SetPoolSize gets a reference to the given string and assigns it to the PoolSize field.
func (o *DataInnerIpamPoolData) SetPoolSize(v string) {
	o.PoolSize = &v
}

// GetPoolStartAddressAddr returns the PoolStartAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolStartAddressAddr() string {
	if o == nil || IsNil(o.PoolStartAddressAddr) {
		var ret string
		return ret
	}
	return *o.PoolStartAddressAddr
}

// GetPoolStartAddressAddrOk returns a tuple with the PoolStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolStartAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolStartAddressAddr) {
		return nil, false
	}
	return o.PoolStartAddressAddr, true
}

// HasPoolStartAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolStartAddressAddr() bool {
	if o != nil && !IsNil(o.PoolStartAddressAddr) {
		return true
	}

	return false
}

// SetPoolStartAddressAddr gets a reference to the given string and assigns it to the PoolStartAddressAddr field.
func (o *DataInnerIpamPoolData) SetPoolStartAddressAddr(v string) {
	o.PoolStartAddressAddr = &v
}

// GetSpaceClassName returns the SpaceClassName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetSpaceClassName() string {
	if o == nil || IsNil(o.SpaceClassName) {
		var ret string
		return ret
	}
	return *o.SpaceClassName
}

// GetSpaceClassNameOk returns a tuple with the SpaceClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetSpaceClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceClassName) {
		return nil, false
	}
	return o.SpaceClassName, true
}

// HasSpaceClassName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasSpaceClassName() bool {
	if o != nil && !IsNil(o.SpaceClassName) {
		return true
	}

	return false
}

// SetSpaceClassName gets a reference to the given string and assigns it to the SpaceClassName field.
func (o *DataInnerIpamPoolData) SetSpaceClassName(v string) {
	o.SpaceClassName = &v
}

// GetSpaceClassParameters returns the SpaceClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetSpaceClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.SpaceClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.SpaceClassParameters
}

// GetSpaceClassParametersOk returns a tuple with the SpaceClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetSpaceClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.SpaceClassParameters) {
		return nil, false
	}
	return o.SpaceClassParameters, true
}

// HasSpaceClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasSpaceClassParameters() bool {
	if o != nil && !IsNil(o.SpaceClassParameters) {
		return true
	}

	return false
}

// SetSpaceClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the SpaceClassParameters field.
func (o *DataInnerIpamPoolData) SetSpaceClassParameters(v []ApiClassParameterOutputEntry) {
	o.SpaceClassParameters = v
}

// GetSpaceDescription returns the SpaceDescription field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetSpaceDescription() string {
	if o == nil || IsNil(o.SpaceDescription) {
		var ret string
		return ret
	}
	return *o.SpaceDescription
}

// GetSpaceDescriptionOk returns a tuple with the SpaceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetSpaceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceDescription) {
		return nil, false
	}
	return o.SpaceDescription, true
}

// HasSpaceDescription returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasSpaceDescription() bool {
	if o != nil && !IsNil(o.SpaceDescription) {
		return true
	}

	return false
}

// SetSpaceDescription gets a reference to the given string and assigns it to the SpaceDescription field.
func (o *DataInnerIpamPoolData) SetSpaceDescription(v string) {
	o.SpaceDescription = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetSpaceId() string {
	if o == nil || IsNil(o.SpaceId) {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *DataInnerIpamPoolData) SetSpaceId(v string) {
	o.SpaceId = &v
}

// GetSpaceIsTemplate returns the SpaceIsTemplate field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetSpaceIsTemplate() string {
	if o == nil || IsNil(o.SpaceIsTemplate) {
		var ret string
		return ret
	}
	return *o.SpaceIsTemplate
}

// GetSpaceIsTemplateOk returns a tuple with the SpaceIsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetSpaceIsTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceIsTemplate) {
		return nil, false
	}
	return o.SpaceIsTemplate, true
}

// HasSpaceIsTemplate returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasSpaceIsTemplate() bool {
	if o != nil && !IsNil(o.SpaceIsTemplate) {
		return true
	}

	return false
}

// SetSpaceIsTemplate gets a reference to the given string and assigns it to the SpaceIsTemplate field.
func (o *DataInnerIpamPoolData) SetSpaceIsTemplate(v string) {
	o.SpaceIsTemplate = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetSpaceName() string {
	if o == nil || IsNil(o.SpaceName) {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceName) {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasSpaceName() bool {
	if o != nil && !IsNil(o.SpaceName) {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *DataInnerIpamPoolData) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetPoolStartHostaddr returns the PoolStartHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolStartHostaddr() string {
	if o == nil || IsNil(o.PoolStartHostaddr) {
		var ret string
		return ret
	}
	return *o.PoolStartHostaddr
}

// GetPoolStartHostaddrOk returns a tuple with the PoolStartHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolStartHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolStartHostaddr) {
		return nil, false
	}
	return o.PoolStartHostaddr, true
}

// HasPoolStartHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolStartHostaddr() bool {
	if o != nil && !IsNil(o.PoolStartHostaddr) {
		return true
	}

	return false
}

// SetPoolStartHostaddr gets a reference to the given string and assigns it to the PoolStartHostaddr field.
func (o *DataInnerIpamPoolData) SetPoolStartHostaddr(v string) {
	o.PoolStartHostaddr = &v
}

// GetPoolStartIpAddr returns the PoolStartIpAddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolStartIpAddr() string {
	if o == nil || IsNil(o.PoolStartIpAddr) {
		var ret string
		return ret
	}
	return *o.PoolStartIpAddr
}

// GetPoolStartIpAddrOk returns a tuple with the PoolStartIpAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolStartIpAddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolStartIpAddr) {
		return nil, false
	}
	return o.PoolStartIpAddr, true
}

// HasPoolStartIpAddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolStartIpAddr() bool {
	if o != nil && !IsNil(o.PoolStartIpAddr) {
		return true
	}

	return false
}

// SetPoolStartIpAddr gets a reference to the given string and assigns it to the PoolStartIpAddr field.
func (o *DataInnerIpamPoolData) SetPoolStartIpAddr(v string) {
	o.PoolStartIpAddr = &v
}

// GetNetworkClassName returns the NetworkClassName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkClassName() string {
	if o == nil || IsNil(o.NetworkClassName) {
		var ret string
		return ret
	}
	return *o.NetworkClassName
}

// GetNetworkClassNameOk returns a tuple with the NetworkClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkClassName) {
		return nil, false
	}
	return o.NetworkClassName, true
}

// HasNetworkClassName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkClassName() bool {
	if o != nil && !IsNil(o.NetworkClassName) {
		return true
	}

	return false
}

// SetNetworkClassName gets a reference to the given string and assigns it to the NetworkClassName field.
func (o *DataInnerIpamPoolData) SetNetworkClassName(v string) {
	o.NetworkClassName = &v
}

// GetNetworkClassParameters returns the NetworkClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.NetworkClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.NetworkClassParameters
}

// GetNetworkClassParametersOk returns a tuple with the NetworkClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.NetworkClassParameters) {
		return nil, false
	}
	return o.NetworkClassParameters, true
}

// HasNetworkClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkClassParameters() bool {
	if o != nil && !IsNil(o.NetworkClassParameters) {
		return true
	}

	return false
}

// SetNetworkClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the NetworkClassParameters field.
func (o *DataInnerIpamPoolData) SetNetworkClassParameters(v []ApiClassParameterOutputEntry) {
	o.NetworkClassParameters = v
}

// GetNetworkEndAddressAddr returns the NetworkEndAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkEndAddressAddr() string {
	if o == nil || IsNil(o.NetworkEndAddressAddr) {
		var ret string
		return ret
	}
	return *o.NetworkEndAddressAddr
}

// GetNetworkEndAddressAddrOk returns a tuple with the NetworkEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkEndAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkEndAddressAddr) {
		return nil, false
	}
	return o.NetworkEndAddressAddr, true
}

// HasNetworkEndAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkEndAddressAddr() bool {
	if o != nil && !IsNil(o.NetworkEndAddressAddr) {
		return true
	}

	return false
}

// SetNetworkEndAddressAddr gets a reference to the given string and assigns it to the NetworkEndAddressAddr field.
func (o *DataInnerIpamPoolData) SetNetworkEndAddressAddr(v string) {
	o.NetworkEndAddressAddr = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *DataInnerIpamPoolData) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkName() string {
	if o == nil || IsNil(o.NetworkName) {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkName) {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkName() bool {
	if o != nil && !IsNil(o.NetworkName) {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *DataInnerIpamPoolData) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetNetworkSize returns the NetworkSize field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkSize() string {
	if o == nil || IsNil(o.NetworkSize) {
		var ret string
		return ret
	}
	return *o.NetworkSize
}

// GetNetworkSizeOk returns a tuple with the NetworkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkSizeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkSize) {
		return nil, false
	}
	return o.NetworkSize, true
}

// HasNetworkSize returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkSize() bool {
	if o != nil && !IsNil(o.NetworkSize) {
		return true
	}

	return false
}

// SetNetworkSize gets a reference to the given string and assigns it to the NetworkSize field.
func (o *DataInnerIpamPoolData) SetNetworkSize(v string) {
	o.NetworkSize = &v
}

// GetNetworkStartAddressAddr returns the NetworkStartAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetNetworkStartAddressAddr() string {
	if o == nil || IsNil(o.NetworkStartAddressAddr) {
		var ret string
		return ret
	}
	return *o.NetworkStartAddressAddr
}

// GetNetworkStartAddressAddrOk returns a tuple with the NetworkStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetNetworkStartAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkStartAddressAddr) {
		return nil, false
	}
	return o.NetworkStartAddressAddr, true
}

// HasNetworkStartAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasNetworkStartAddressAddr() bool {
	if o != nil && !IsNil(o.NetworkStartAddressAddr) {
		return true
	}

	return false
}

// SetNetworkStartAddressAddr gets a reference to the given string and assigns it to the NetworkStartAddressAddr field.
func (o *DataInnerIpamPoolData) SetNetworkStartAddressAddr(v string) {
	o.NetworkStartAddressAddr = &v
}

// GetPoolOperationDetailsAddedOn returns the PoolOperationDetailsAddedOn field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsAddedOn() string {
	if o == nil || IsNil(o.PoolOperationDetailsAddedOn) {
		var ret string
		return ret
	}
	return *o.PoolOperationDetailsAddedOn
}

// GetPoolOperationDetailsAddedOnOk returns a tuple with the PoolOperationDetailsAddedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsAddedOnOk() (*string, bool) {
	if o == nil || IsNil(o.PoolOperationDetailsAddedOn) {
		return nil, false
	}
	return o.PoolOperationDetailsAddedOn, true
}

// HasPoolOperationDetailsAddedOn returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolOperationDetailsAddedOn() bool {
	if o != nil && !IsNil(o.PoolOperationDetailsAddedOn) {
		return true
	}

	return false
}

// SetPoolOperationDetailsAddedOn gets a reference to the given string and assigns it to the PoolOperationDetailsAddedOn field.
func (o *DataInnerIpamPoolData) SetPoolOperationDetailsAddedOn(v string) {
	o.PoolOperationDetailsAddedOn = &v
}

// GetPoolOperationDetailsCallStack returns the PoolOperationDetailsCallStack field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsCallStack() string {
	if o == nil || IsNil(o.PoolOperationDetailsCallStack) {
		var ret string
		return ret
	}
	return *o.PoolOperationDetailsCallStack
}

// GetPoolOperationDetailsCallStackOk returns a tuple with the PoolOperationDetailsCallStack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsCallStackOk() (*string, bool) {
	if o == nil || IsNil(o.PoolOperationDetailsCallStack) {
		return nil, false
	}
	return o.PoolOperationDetailsCallStack, true
}

// HasPoolOperationDetailsCallStack returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolOperationDetailsCallStack() bool {
	if o != nil && !IsNil(o.PoolOperationDetailsCallStack) {
		return true
	}

	return false
}

// SetPoolOperationDetailsCallStack gets a reference to the given string and assigns it to the PoolOperationDetailsCallStack field.
func (o *DataInnerIpamPoolData) SetPoolOperationDetailsCallStack(v string) {
	o.PoolOperationDetailsCallStack = &v
}

// GetPoolOperationDetailsOriginModule returns the PoolOperationDetailsOriginModule field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsOriginModule() string {
	if o == nil || IsNil(o.PoolOperationDetailsOriginModule) {
		var ret string
		return ret
	}
	return *o.PoolOperationDetailsOriginModule
}

// GetPoolOperationDetailsOriginModuleOk returns a tuple with the PoolOperationDetailsOriginModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsOriginModuleOk() (*string, bool) {
	if o == nil || IsNil(o.PoolOperationDetailsOriginModule) {
		return nil, false
	}
	return o.PoolOperationDetailsOriginModule, true
}

// HasPoolOperationDetailsOriginModule returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolOperationDetailsOriginModule() bool {
	if o != nil && !IsNil(o.PoolOperationDetailsOriginModule) {
		return true
	}

	return false
}

// SetPoolOperationDetailsOriginModule gets a reference to the given string and assigns it to the PoolOperationDetailsOriginModule field.
func (o *DataInnerIpamPoolData) SetPoolOperationDetailsOriginModule(v string) {
	o.PoolOperationDetailsOriginModule = &v
}

// GetPoolOperationDetailsRequestedBy returns the PoolOperationDetailsRequestedBy field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsRequestedBy() string {
	if o == nil || IsNil(o.PoolOperationDetailsRequestedBy) {
		var ret string
		return ret
	}
	return *o.PoolOperationDetailsRequestedBy
}

// GetPoolOperationDetailsRequestedByOk returns a tuple with the PoolOperationDetailsRequestedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsRequestedByOk() (*string, bool) {
	if o == nil || IsNil(o.PoolOperationDetailsRequestedBy) {
		return nil, false
	}
	return o.PoolOperationDetailsRequestedBy, true
}

// HasPoolOperationDetailsRequestedBy returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolOperationDetailsRequestedBy() bool {
	if o != nil && !IsNil(o.PoolOperationDetailsRequestedBy) {
		return true
	}

	return false
}

// SetPoolOperationDetailsRequestedBy gets a reference to the given string and assigns it to the PoolOperationDetailsRequestedBy field.
func (o *DataInnerIpamPoolData) SetPoolOperationDetailsRequestedBy(v string) {
	o.PoolOperationDetailsRequestedBy = &v
}

// GetPoolOperationDetailsAddedBy returns the PoolOperationDetailsAddedBy field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsAddedBy() string {
	if o == nil || IsNil(o.PoolOperationDetailsAddedBy) {
		var ret string
		return ret
	}
	return *o.PoolOperationDetailsAddedBy
}

// GetPoolOperationDetailsAddedByOk returns a tuple with the PoolOperationDetailsAddedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsAddedByOk() (*string, bool) {
	if o == nil || IsNil(o.PoolOperationDetailsAddedBy) {
		return nil, false
	}
	return o.PoolOperationDetailsAddedBy, true
}

// HasPoolOperationDetailsAddedBy returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolOperationDetailsAddedBy() bool {
	if o != nil && !IsNil(o.PoolOperationDetailsAddedBy) {
		return true
	}

	return false
}

// SetPoolOperationDetailsAddedBy gets a reference to the given string and assigns it to the PoolOperationDetailsAddedBy field.
func (o *DataInnerIpamPoolData) SetPoolOperationDetailsAddedBy(v string) {
	o.PoolOperationDetailsAddedBy = &v
}

// GetPoolOperationDetailsLastUpdatedOn returns the PoolOperationDetailsLastUpdatedOn field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsLastUpdatedOn() string {
	if o == nil || IsNil(o.PoolOperationDetailsLastUpdatedOn) {
		var ret string
		return ret
	}
	return *o.PoolOperationDetailsLastUpdatedOn
}

// GetPoolOperationDetailsLastUpdatedOnOk returns a tuple with the PoolOperationDetailsLastUpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetPoolOperationDetailsLastUpdatedOnOk() (*string, bool) {
	if o == nil || IsNil(o.PoolOperationDetailsLastUpdatedOn) {
		return nil, false
	}
	return o.PoolOperationDetailsLastUpdatedOn, true
}

// HasPoolOperationDetailsLastUpdatedOn returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasPoolOperationDetailsLastUpdatedOn() bool {
	if o != nil && !IsNil(o.PoolOperationDetailsLastUpdatedOn) {
		return true
	}

	return false
}

// SetPoolOperationDetailsLastUpdatedOn gets a reference to the given string and assigns it to the PoolOperationDetailsLastUpdatedOn field.
func (o *DataInnerIpamPoolData) SetPoolOperationDetailsLastUpdatedOn(v string) {
	o.PoolOperationDetailsLastUpdatedOn = &v
}

// GetVlsmBlockId returns the VlsmBlockId field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetVlsmBlockId() string {
	if o == nil || IsNil(o.VlsmBlockId) {
		var ret string
		return ret
	}
	return *o.VlsmBlockId
}

// GetVlsmBlockIdOk returns a tuple with the VlsmBlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetVlsmBlockIdOk() (*string, bool) {
	if o == nil || IsNil(o.VlsmBlockId) {
		return nil, false
	}
	return o.VlsmBlockId, true
}

// HasVlsmBlockId returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasVlsmBlockId() bool {
	if o != nil && !IsNil(o.VlsmBlockId) {
		return true
	}

	return false
}

// SetVlsmBlockId gets a reference to the given string and assigns it to the VlsmBlockId field.
func (o *DataInnerIpamPoolData) SetVlsmBlockId(v string) {
	o.VlsmBlockId = &v
}

// GetVlsmNetworkId returns the VlsmNetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamPoolData) GetVlsmNetworkId() string {
	if o == nil || IsNil(o.VlsmNetworkId) {
		var ret string
		return ret
	}
	return *o.VlsmNetworkId
}

// GetVlsmNetworkIdOk returns a tuple with the VlsmNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamPoolData) GetVlsmNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.VlsmNetworkId) {
		return nil, false
	}
	return o.VlsmNetworkId, true
}

// HasVlsmNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamPoolData) HasVlsmNetworkId() bool {
	if o != nil && !IsNil(o.VlsmNetworkId) {
		return true
	}

	return false
}

// SetVlsmNetworkId gets a reference to the given string and assigns it to the VlsmNetworkId field.
func (o *DataInnerIpamPoolData) SetVlsmNetworkId(v string) {
	o.VlsmNetworkId = &v
}

func (o DataInnerIpamPoolData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerIpamPoolData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PoolEndHostaddr) {
		toSerialize["pool_end_hostaddr"] = o.PoolEndHostaddr
	}
	if !IsNil(o.PoolEndIpAddr) {
		toSerialize["pool_end_ip_addr"] = o.PoolEndIpAddr
	}
	if !IsNil(o.PoolMultistatus) {
		toSerialize["pool_multistatus"] = o.PoolMultistatus
	}
	if !IsNil(o.ParentNetworkClassName) {
		toSerialize["parent_network_class_name"] = o.ParentNetworkClassName
	}
	if !IsNil(o.ParentNetworkId) {
		toSerialize["parent_network_id"] = o.ParentNetworkId
	}
	if !IsNil(o.ParentNetworkName) {
		toSerialize["parent_network_name"] = o.ParentNetworkName
	}
	if !IsNil(o.ParentNetworkSize) {
		toSerialize["parent_network_size"] = o.ParentNetworkSize
	}
	if !IsNil(o.PoolClassName) {
		toSerialize["pool_class_name"] = o.PoolClassName
	}
	if !IsNil(o.PoolClassParameters) {
		toSerialize["pool_class_parameters"] = o.PoolClassParameters
	}
	if !IsNil(o.PoolEndAddressAddr) {
		toSerialize["pool_end_address_addr"] = o.PoolEndAddressAddr
	}
	if !IsNil(o.PoolId) {
		toSerialize["pool_id"] = o.PoolId
	}
	if !IsNil(o.PoolName) {
		toSerialize["pool_name"] = o.PoolName
	}
	if !IsNil(o.PoolReadOnly) {
		toSerialize["pool_read_only"] = o.PoolReadOnly
	}
	if !IsNil(o.PoolSize) {
		toSerialize["pool_size"] = o.PoolSize
	}
	if !IsNil(o.PoolStartAddressAddr) {
		toSerialize["pool_start_address_addr"] = o.PoolStartAddressAddr
	}
	if !IsNil(o.SpaceClassName) {
		toSerialize["space_class_name"] = o.SpaceClassName
	}
	if !IsNil(o.SpaceClassParameters) {
		toSerialize["space_class_parameters"] = o.SpaceClassParameters
	}
	if !IsNil(o.SpaceDescription) {
		toSerialize["space_description"] = o.SpaceDescription
	}
	if !IsNil(o.SpaceId) {
		toSerialize["space_id"] = o.SpaceId
	}
	if !IsNil(o.SpaceIsTemplate) {
		toSerialize["space_is_template"] = o.SpaceIsTemplate
	}
	if !IsNil(o.SpaceName) {
		toSerialize["space_name"] = o.SpaceName
	}
	if !IsNil(o.PoolStartHostaddr) {
		toSerialize["pool_start_hostaddr"] = o.PoolStartHostaddr
	}
	if !IsNil(o.PoolStartIpAddr) {
		toSerialize["pool_start_ip_addr"] = o.PoolStartIpAddr
	}
	if !IsNil(o.NetworkClassName) {
		toSerialize["network_class_name"] = o.NetworkClassName
	}
	if !IsNil(o.NetworkClassParameters) {
		toSerialize["network_class_parameters"] = o.NetworkClassParameters
	}
	if !IsNil(o.NetworkEndAddressAddr) {
		toSerialize["network_end_address_addr"] = o.NetworkEndAddressAddr
	}
	if !IsNil(o.NetworkId) {
		toSerialize["network_id"] = o.NetworkId
	}
	if !IsNil(o.NetworkName) {
		toSerialize["network_name"] = o.NetworkName
	}
	if !IsNil(o.NetworkSize) {
		toSerialize["network_size"] = o.NetworkSize
	}
	if !IsNil(o.NetworkStartAddressAddr) {
		toSerialize["network_start_address_addr"] = o.NetworkStartAddressAddr
	}
	if !IsNil(o.PoolOperationDetailsAddedOn) {
		toSerialize["pool_operation_details_added_on"] = o.PoolOperationDetailsAddedOn
	}
	if !IsNil(o.PoolOperationDetailsCallStack) {
		toSerialize["pool_operation_details_call_stack"] = o.PoolOperationDetailsCallStack
	}
	if !IsNil(o.PoolOperationDetailsOriginModule) {
		toSerialize["pool_operation_details_origin_module"] = o.PoolOperationDetailsOriginModule
	}
	if !IsNil(o.PoolOperationDetailsRequestedBy) {
		toSerialize["pool_operation_details_requested_by"] = o.PoolOperationDetailsRequestedBy
	}
	if !IsNil(o.PoolOperationDetailsAddedBy) {
		toSerialize["pool_operation_details_added_by"] = o.PoolOperationDetailsAddedBy
	}
	if !IsNil(o.PoolOperationDetailsLastUpdatedOn) {
		toSerialize["pool_operation_details_last_updated_on"] = o.PoolOperationDetailsLastUpdatedOn
	}
	if !IsNil(o.VlsmBlockId) {
		toSerialize["vlsm_block_id"] = o.VlsmBlockId
	}
	if !IsNil(o.VlsmNetworkId) {
		toSerialize["vlsm_network_id"] = o.VlsmNetworkId
	}
	return toSerialize, nil
}

type NullableDataInnerIpamPoolData struct {
	value *DataInnerIpamPoolData
	isSet bool
}

func (v NullableDataInnerIpamPoolData) Get() *DataInnerIpamPoolData {
	return v.value
}

func (v *NullableDataInnerIpamPoolData) Set(val *DataInnerIpamPoolData) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerIpamPoolData) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerIpamPoolData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerIpamPoolData(val *DataInnerIpamPoolData) *NullableDataInnerIpamPoolData {
	return &NullableDataInnerIpamPoolData{value: val, isSet: true}
}

func (v NullableDataInnerIpamPoolData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerIpamPoolData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
