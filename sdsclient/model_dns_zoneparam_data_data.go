/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// DnsZoneparamDataData struct for DnsZoneparamDataData
type DnsZoneparamDataData struct {
	// The value of the DNS option set on the zone.
	ZoneparamValue *string `json:"zoneparam_value,omitempty"`
	// The delay of creation status. <b>1</b> indicates that the object is not created yet.
	ZoneparamDelayedCreateTime *string `json:"zoneparam_delayed_create_time,omitempty"`
	// The delay of deletion status. <b>1</b> indicates that the object is not deleted yet.
	ZoneparamDelayedDeleteTime *string `json:"zoneparam_delayed_delete_time,omitempty"`
	// The database identifier (ID) of the DNS server the object belongs to.
	ServerId *string `json:"server_id,omitempty"`
	// The name of the DNS server the object belongs to.
	ServerName *string `json:"server_name,omitempty"`
	// The database identifier (ID) of the DNS zone.
	ZoneId *string `json:"zone_id,omitempty"`
	// The name of the DNS zone.
	ZoneName *string `json:"zone_name,omitempty"`
	// The database identifier (ID) of the DNS zone param the object belongs to.
	Oid *string `json:"oid,omitempty"`
	// The name of the DNS option set on the zone.
	ZoneparamKey *string `json:"zoneparam_key,omitempty"`
}

// NewDnsZoneparamDataData instantiates a new DnsZoneparamDataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsZoneparamDataData() *DnsZoneparamDataData {
	this := DnsZoneparamDataData{}
	return &this
}

// NewDnsZoneparamDataDataWithDefaults instantiates a new DnsZoneparamDataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsZoneparamDataDataWithDefaults() *DnsZoneparamDataData {
	this := DnsZoneparamDataData{}
	return &this
}

// GetZoneparamValue returns the ZoneparamValue field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetZoneparamValue() string {
	if o == nil || o.ZoneparamValue == nil {
		var ret string
		return ret
	}
	return *o.ZoneparamValue
}

// GetZoneparamValueOk returns a tuple with the ZoneparamValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetZoneparamValueOk() (*string, bool) {
	if o == nil || o.ZoneparamValue == nil {
		return nil, false
	}
	return o.ZoneparamValue, true
}

// HasZoneparamValue returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasZoneparamValue() bool {
	if o != nil && o.ZoneparamValue != nil {
		return true
	}

	return false
}

// SetZoneparamValue gets a reference to the given string and assigns it to the ZoneparamValue field.
func (o *DnsZoneparamDataData) SetZoneparamValue(v string) {
	o.ZoneparamValue = &v
}

// GetZoneparamDelayedCreateTime returns the ZoneparamDelayedCreateTime field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetZoneparamDelayedCreateTime() string {
	if o == nil || o.ZoneparamDelayedCreateTime == nil {
		var ret string
		return ret
	}
	return *o.ZoneparamDelayedCreateTime
}

// GetZoneparamDelayedCreateTimeOk returns a tuple with the ZoneparamDelayedCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetZoneparamDelayedCreateTimeOk() (*string, bool) {
	if o == nil || o.ZoneparamDelayedCreateTime == nil {
		return nil, false
	}
	return o.ZoneparamDelayedCreateTime, true
}

// HasZoneparamDelayedCreateTime returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasZoneparamDelayedCreateTime() bool {
	if o != nil && o.ZoneparamDelayedCreateTime != nil {
		return true
	}

	return false
}

// SetZoneparamDelayedCreateTime gets a reference to the given string and assigns it to the ZoneparamDelayedCreateTime field.
func (o *DnsZoneparamDataData) SetZoneparamDelayedCreateTime(v string) {
	o.ZoneparamDelayedCreateTime = &v
}

// GetZoneparamDelayedDeleteTime returns the ZoneparamDelayedDeleteTime field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetZoneparamDelayedDeleteTime() string {
	if o == nil || o.ZoneparamDelayedDeleteTime == nil {
		var ret string
		return ret
	}
	return *o.ZoneparamDelayedDeleteTime
}

// GetZoneparamDelayedDeleteTimeOk returns a tuple with the ZoneparamDelayedDeleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetZoneparamDelayedDeleteTimeOk() (*string, bool) {
	if o == nil || o.ZoneparamDelayedDeleteTime == nil {
		return nil, false
	}
	return o.ZoneparamDelayedDeleteTime, true
}

// HasZoneparamDelayedDeleteTime returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasZoneparamDelayedDeleteTime() bool {
	if o != nil && o.ZoneparamDelayedDeleteTime != nil {
		return true
	}

	return false
}

// SetZoneparamDelayedDeleteTime gets a reference to the given string and assigns it to the ZoneparamDelayedDeleteTime field.
func (o *DnsZoneparamDataData) SetZoneparamDelayedDeleteTime(v string) {
	o.ZoneparamDelayedDeleteTime = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetServerId() string {
	if o == nil || o.ServerId == nil {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetServerIdOk() (*string, bool) {
	if o == nil || o.ServerId == nil {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasServerId() bool {
	if o != nil && o.ServerId != nil {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *DnsZoneparamDataData) SetServerId(v string) {
	o.ServerId = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetServerName() string {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetServerNameOk() (*string, bool) {
	if o == nil || o.ServerName == nil {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasServerName() bool {
	if o != nil && o.ServerName != nil {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *DnsZoneparamDataData) SetServerName(v string) {
	o.ServerName = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetZoneId() string {
	if o == nil || o.ZoneId == nil {
		var ret string
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetZoneIdOk() (*string, bool) {
	if o == nil || o.ZoneId == nil {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasZoneId() bool {
	if o != nil && o.ZoneId != nil {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given string and assigns it to the ZoneId field.
func (o *DnsZoneparamDataData) SetZoneId(v string) {
	o.ZoneId = &v
}

// GetZoneName returns the ZoneName field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetZoneName() string {
	if o == nil || o.ZoneName == nil {
		var ret string
		return ret
	}
	return *o.ZoneName
}

// GetZoneNameOk returns a tuple with the ZoneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetZoneNameOk() (*string, bool) {
	if o == nil || o.ZoneName == nil {
		return nil, false
	}
	return o.ZoneName, true
}

// HasZoneName returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasZoneName() bool {
	if o != nil && o.ZoneName != nil {
		return true
	}

	return false
}

// SetZoneName gets a reference to the given string and assigns it to the ZoneName field.
func (o *DnsZoneparamDataData) SetZoneName(v string) {
	o.ZoneName = &v
}

// GetOid returns the Oid field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetOid() string {
	if o == nil || o.Oid == nil {
		var ret string
		return ret
	}
	return *o.Oid
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetOidOk() (*string, bool) {
	if o == nil || o.Oid == nil {
		return nil, false
	}
	return o.Oid, true
}

// HasOid returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasOid() bool {
	if o != nil && o.Oid != nil {
		return true
	}

	return false
}

// SetOid gets a reference to the given string and assigns it to the Oid field.
func (o *DnsZoneparamDataData) SetOid(v string) {
	o.Oid = &v
}

// GetZoneparamKey returns the ZoneparamKey field value if set, zero value otherwise.
func (o *DnsZoneparamDataData) GetZoneparamKey() string {
	if o == nil || o.ZoneparamKey == nil {
		var ret string
		return ret
	}
	return *o.ZoneparamKey
}

// GetZoneparamKeyOk returns a tuple with the ZoneparamKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsZoneparamDataData) GetZoneparamKeyOk() (*string, bool) {
	if o == nil || o.ZoneparamKey == nil {
		return nil, false
	}
	return o.ZoneparamKey, true
}

// HasZoneparamKey returns a boolean if a field has been set.
func (o *DnsZoneparamDataData) HasZoneparamKey() bool {
	if o != nil && o.ZoneparamKey != nil {
		return true
	}

	return false
}

// SetZoneparamKey gets a reference to the given string and assigns it to the ZoneparamKey field.
func (o *DnsZoneparamDataData) SetZoneparamKey(v string) {
	o.ZoneparamKey = &v
}

func (o DnsZoneparamDataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ZoneparamValue != nil {
		toSerialize["zoneparam_value"] = o.ZoneparamValue
	}
	if o.ZoneparamDelayedCreateTime != nil {
		toSerialize["zoneparam_delayed_create_time"] = o.ZoneparamDelayedCreateTime
	}
	if o.ZoneparamDelayedDeleteTime != nil {
		toSerialize["zoneparam_delayed_delete_time"] = o.ZoneparamDelayedDeleteTime
	}
	if o.ServerId != nil {
		toSerialize["server_id"] = o.ServerId
	}
	if o.ServerName != nil {
		toSerialize["server_name"] = o.ServerName
	}
	if o.ZoneId != nil {
		toSerialize["zone_id"] = o.ZoneId
	}
	if o.ZoneName != nil {
		toSerialize["zone_name"] = o.ZoneName
	}
	if o.Oid != nil {
		toSerialize["oid"] = o.Oid
	}
	if o.ZoneparamKey != nil {
		toSerialize["zoneparam_key"] = o.ZoneparamKey
	}
	return json.Marshal(toSerialize)
}

type NullableDnsZoneparamDataData struct {
	value *DnsZoneparamDataData
	isSet bool
}

func (v NullableDnsZoneparamDataData) Get() *DnsZoneparamDataData {
	return v.value
}

func (v *NullableDnsZoneparamDataData) Set(val *DnsZoneparamDataData) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsZoneparamDataData) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsZoneparamDataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsZoneparamDataData(val *DnsZoneparamDataData) *NullableDnsZoneparamDataData {
	return &NullableDnsZoneparamDataData{value: val, isSet: true}
}

func (v NullableDnsZoneparamDataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsZoneparamDataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


