/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// AppApplicationAddInput struct for AppApplicationAddInput
type AppApplicationAddInput struct {
	// The Fully Qualified Domain Name (FQDN) of the application.
	ApplicationFqdn *string `json:"application_fqdn,omitempty"`
	// The name of the application.
	ApplicationName *string `json:"application_name,omitempty"`
	// The name of all the GSLB servers associated with the application. You can specify one or more names.
	GslbserverList *string `json:"gslbserver_list,omitempty"`
	// The name of the class to apply to the object you are adding. You must specify the class file directory, e.g. <b>my_directory/my_class.class</b> . You cannot use the classes <b>global</b> and <b>default</b>, they are reserved by the system.
	ApplicationClassName *string `json:"application_class_name,omitempty"`
	// class parameters in json format
	ApplicationClassParameters *[]ApiClassParameterInputEntry `json:"application_class_parameters,omitempty"`
	// class parameters you want to delete from the object
	ClassParametersToDelete *[]string `json:"class_parameters_to_delete,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewAppApplicationAddInput instantiates a new AppApplicationAddInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppApplicationAddInput() *AppApplicationAddInput {
	this := AppApplicationAddInput{}
	return &this
}

// NewAppApplicationAddInputWithDefaults instantiates a new AppApplicationAddInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppApplicationAddInputWithDefaults() *AppApplicationAddInput {
	this := AppApplicationAddInput{}
	return &this
}

// GetApplicationFqdn returns the ApplicationFqdn field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetApplicationFqdn() string {
	if o == nil || o.ApplicationFqdn == nil {
		var ret string
		return ret
	}
	return *o.ApplicationFqdn
}

// GetApplicationFqdnOk returns a tuple with the ApplicationFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetApplicationFqdnOk() (*string, bool) {
	if o == nil || o.ApplicationFqdn == nil {
		return nil, false
	}
	return o.ApplicationFqdn, true
}

// HasApplicationFqdn returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasApplicationFqdn() bool {
	if o != nil && o.ApplicationFqdn != nil {
		return true
	}

	return false
}

// SetApplicationFqdn gets a reference to the given string and assigns it to the ApplicationFqdn field.
func (o *AppApplicationAddInput) SetApplicationFqdn(v string) {
	o.ApplicationFqdn = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *AppApplicationAddInput) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetGslbserverList returns the GslbserverList field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetGslbserverList() string {
	if o == nil || o.GslbserverList == nil {
		var ret string
		return ret
	}
	return *o.GslbserverList
}

// GetGslbserverListOk returns a tuple with the GslbserverList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetGslbserverListOk() (*string, bool) {
	if o == nil || o.GslbserverList == nil {
		return nil, false
	}
	return o.GslbserverList, true
}

// HasGslbserverList returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasGslbserverList() bool {
	if o != nil && o.GslbserverList != nil {
		return true
	}

	return false
}

// SetGslbserverList gets a reference to the given string and assigns it to the GslbserverList field.
func (o *AppApplicationAddInput) SetGslbserverList(v string) {
	o.GslbserverList = &v
}

// GetApplicationClassName returns the ApplicationClassName field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetApplicationClassName() string {
	if o == nil || o.ApplicationClassName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationClassName
}

// GetApplicationClassNameOk returns a tuple with the ApplicationClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetApplicationClassNameOk() (*string, bool) {
	if o == nil || o.ApplicationClassName == nil {
		return nil, false
	}
	return o.ApplicationClassName, true
}

// HasApplicationClassName returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasApplicationClassName() bool {
	if o != nil && o.ApplicationClassName != nil {
		return true
	}

	return false
}

// SetApplicationClassName gets a reference to the given string and assigns it to the ApplicationClassName field.
func (o *AppApplicationAddInput) SetApplicationClassName(v string) {
	o.ApplicationClassName = &v
}

// GetApplicationClassParameters returns the ApplicationClassParameters field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetApplicationClassParameters() []ApiClassParameterInputEntry {
	if o == nil || o.ApplicationClassParameters == nil {
		var ret []ApiClassParameterInputEntry
		return ret
	}
	return *o.ApplicationClassParameters
}

// GetApplicationClassParametersOk returns a tuple with the ApplicationClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetApplicationClassParametersOk() (*[]ApiClassParameterInputEntry, bool) {
	if o == nil || o.ApplicationClassParameters == nil {
		return nil, false
	}
	return o.ApplicationClassParameters, true
}

// HasApplicationClassParameters returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasApplicationClassParameters() bool {
	if o != nil && o.ApplicationClassParameters != nil {
		return true
	}

	return false
}

// SetApplicationClassParameters gets a reference to the given []ApiClassParameterInputEntry and assigns it to the ApplicationClassParameters field.
func (o *AppApplicationAddInput) SetApplicationClassParameters(v []ApiClassParameterInputEntry) {
	o.ApplicationClassParameters = &v
}

// GetClassParametersToDelete returns the ClassParametersToDelete field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetClassParametersToDelete() []string {
	if o == nil || o.ClassParametersToDelete == nil {
		var ret []string
		return ret
	}
	return *o.ClassParametersToDelete
}

// GetClassParametersToDeleteOk returns a tuple with the ClassParametersToDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetClassParametersToDeleteOk() (*[]string, bool) {
	if o == nil || o.ClassParametersToDelete == nil {
		return nil, false
	}
	return o.ClassParametersToDelete, true
}

// HasClassParametersToDelete returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasClassParametersToDelete() bool {
	if o != nil && o.ClassParametersToDelete != nil {
		return true
	}

	return false
}

// SetClassParametersToDelete gets a reference to the given []string and assigns it to the ClassParametersToDelete field.
func (o *AppApplicationAddInput) SetClassParametersToDelete(v []string) {
	o.ClassParametersToDelete = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AppApplicationAddInput) GetWarnings() string {
	if o == nil || o.Warnings == nil {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationAddInput) GetWarningsOk() (*string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AppApplicationAddInput) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *AppApplicationAddInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o AppApplicationAddInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationFqdn != nil {
		toSerialize["application_fqdn"] = o.ApplicationFqdn
	}
	if o.ApplicationName != nil {
		toSerialize["application_name"] = o.ApplicationName
	}
	if o.GslbserverList != nil {
		toSerialize["gslbserver_list"] = o.GslbserverList
	}
	if o.ApplicationClassName != nil {
		toSerialize["application_class_name"] = o.ApplicationClassName
	}
	if o.ApplicationClassParameters != nil {
		toSerialize["application_class_parameters"] = o.ApplicationClassParameters
	}
	if o.ClassParametersToDelete != nil {
		toSerialize["class_parameters_to_delete"] = o.ClassParametersToDelete
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableAppApplicationAddInput struct {
	value *AppApplicationAddInput
	isSet bool
}

func (v NullableAppApplicationAddInput) Get() *AppApplicationAddInput {
	return v.value
}

func (v *NullableAppApplicationAddInput) Set(val *AppApplicationAddInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAppApplicationAddInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAppApplicationAddInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppApplicationAddInput(val *AppApplicationAddInput) *NullableAppApplicationAddInput {
	return &NullableAppApplicationAddInput{value: val, isSet: true}
}

func (v NullableAppApplicationAddInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppApplicationAddInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


