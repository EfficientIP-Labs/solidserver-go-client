/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerIpamSpaceData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerIpamSpaceData{}

// DataInnerIpamSpaceData struct for DataInnerIpamSpaceData
type DataInnerIpamSpaceData struct {
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	SpaceMultistatus *string `json:"space_multistatus,omitempty"`
	// The name of the class applied to the VLSM parent space, it can be preceded by the class directory.
	ParentSpaceClassName *string `json:"parent_space_class_name,omitempty"`
	// The class parameters applied to the VLSM parent space and their value: <b>&lt;class-parameter1&gt;=&lt;value1&gt;&amp;&lt;class-parameter2&gt;=&lt;value2&gt;&amp;...</b> .
	ParentSpaceClassParameters []ApiClassParameterOutputEntry `json:"parent_space_class_parameters,omitempty"`
	// The database identifier (ID) of the VLSM parent space. <b>0</b> indicates that space has no parent space.
	ParentSpaceId *string `json:"parent_space_id,omitempty"`
	// The name of the VLSM parent space. <b>#</b> indicates that space has no parent space.
	ParentSpaceName *string `json:"parent_space_name,omitempty"`
	// The name of the class applied to the space, it can be preceded by the class directory.
	SpaceClassName *string `json:"space_class_name,omitempty"`
	// The class parameters applied to the space.
	SpaceClassParameters []ApiClassParameterOutputEntry `json:"space_class_parameters,omitempty"`
	// The description of the space.
	SpaceDescription *string `json:"space_description,omitempty"`
	// The database identifier (ID) of the space.
	SpaceId *string `json:"space_id,omitempty"`
	// The template status of the space. If the space is used as template (<b>1</b>), all the IPv4 networks, pools and IP addresses it contains are also used as template.
	SpaceIsTemplate *string `json:"space_is_template,omitempty"`
	// The name of the space.
	SpaceName *string `json:"space_name,omitempty"`
}

// NewDataInnerIpamSpaceData instantiates a new DataInnerIpamSpaceData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerIpamSpaceData() *DataInnerIpamSpaceData {
	this := DataInnerIpamSpaceData{}
	return &this
}

// NewDataInnerIpamSpaceDataWithDefaults instantiates a new DataInnerIpamSpaceData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerIpamSpaceDataWithDefaults() *DataInnerIpamSpaceData {
	this := DataInnerIpamSpaceData{}
	return &this
}

// GetSpaceMultistatus returns the SpaceMultistatus field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceMultistatus() string {
	if o == nil || IsNil(o.SpaceMultistatus) {
		var ret string
		return ret
	}
	return *o.SpaceMultistatus
}

// GetSpaceMultistatusOk returns a tuple with the SpaceMultistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceMultistatusOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceMultistatus) {
		return nil, false
	}
	return o.SpaceMultistatus, true
}

// HasSpaceMultistatus returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceMultistatus() bool {
	if o != nil && !IsNil(o.SpaceMultistatus) {
		return true
	}

	return false
}

// SetSpaceMultistatus gets a reference to the given string and assigns it to the SpaceMultistatus field.
func (o *DataInnerIpamSpaceData) SetSpaceMultistatus(v string) {
	o.SpaceMultistatus = &v
}

// GetParentSpaceClassName returns the ParentSpaceClassName field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetParentSpaceClassName() string {
	if o == nil || IsNil(o.ParentSpaceClassName) {
		var ret string
		return ret
	}
	return *o.ParentSpaceClassName
}

// GetParentSpaceClassNameOk returns a tuple with the ParentSpaceClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetParentSpaceClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentSpaceClassName) {
		return nil, false
	}
	return o.ParentSpaceClassName, true
}

// HasParentSpaceClassName returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasParentSpaceClassName() bool {
	if o != nil && !IsNil(o.ParentSpaceClassName) {
		return true
	}

	return false
}

// SetParentSpaceClassName gets a reference to the given string and assigns it to the ParentSpaceClassName field.
func (o *DataInnerIpamSpaceData) SetParentSpaceClassName(v string) {
	o.ParentSpaceClassName = &v
}

// GetParentSpaceClassParameters returns the ParentSpaceClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetParentSpaceClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.ParentSpaceClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.ParentSpaceClassParameters
}

// GetParentSpaceClassParametersOk returns a tuple with the ParentSpaceClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetParentSpaceClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.ParentSpaceClassParameters) {
		return nil, false
	}
	return o.ParentSpaceClassParameters, true
}

// HasParentSpaceClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasParentSpaceClassParameters() bool {
	if o != nil && !IsNil(o.ParentSpaceClassParameters) {
		return true
	}

	return false
}

// SetParentSpaceClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the ParentSpaceClassParameters field.
func (o *DataInnerIpamSpaceData) SetParentSpaceClassParameters(v []ApiClassParameterOutputEntry) {
	o.ParentSpaceClassParameters = v
}

// GetParentSpaceId returns the ParentSpaceId field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetParentSpaceId() string {
	if o == nil || IsNil(o.ParentSpaceId) {
		var ret string
		return ret
	}
	return *o.ParentSpaceId
}

// GetParentSpaceIdOk returns a tuple with the ParentSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetParentSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentSpaceId) {
		return nil, false
	}
	return o.ParentSpaceId, true
}

// HasParentSpaceId returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasParentSpaceId() bool {
	if o != nil && !IsNil(o.ParentSpaceId) {
		return true
	}

	return false
}

// SetParentSpaceId gets a reference to the given string and assigns it to the ParentSpaceId field.
func (o *DataInnerIpamSpaceData) SetParentSpaceId(v string) {
	o.ParentSpaceId = &v
}

// GetParentSpaceName returns the ParentSpaceName field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetParentSpaceName() string {
	if o == nil || IsNil(o.ParentSpaceName) {
		var ret string
		return ret
	}
	return *o.ParentSpaceName
}

// GetParentSpaceNameOk returns a tuple with the ParentSpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetParentSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentSpaceName) {
		return nil, false
	}
	return o.ParentSpaceName, true
}

// HasParentSpaceName returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasParentSpaceName() bool {
	if o != nil && !IsNil(o.ParentSpaceName) {
		return true
	}

	return false
}

// SetParentSpaceName gets a reference to the given string and assigns it to the ParentSpaceName field.
func (o *DataInnerIpamSpaceData) SetParentSpaceName(v string) {
	o.ParentSpaceName = &v
}

// GetSpaceClassName returns the SpaceClassName field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceClassName() string {
	if o == nil || IsNil(o.SpaceClassName) {
		var ret string
		return ret
	}
	return *o.SpaceClassName
}

// GetSpaceClassNameOk returns a tuple with the SpaceClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceClassName) {
		return nil, false
	}
	return o.SpaceClassName, true
}

// HasSpaceClassName returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceClassName() bool {
	if o != nil && !IsNil(o.SpaceClassName) {
		return true
	}

	return false
}

// SetSpaceClassName gets a reference to the given string and assigns it to the SpaceClassName field.
func (o *DataInnerIpamSpaceData) SetSpaceClassName(v string) {
	o.SpaceClassName = &v
}

// GetSpaceClassParameters returns the SpaceClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.SpaceClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.SpaceClassParameters
}

// GetSpaceClassParametersOk returns a tuple with the SpaceClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.SpaceClassParameters) {
		return nil, false
	}
	return o.SpaceClassParameters, true
}

// HasSpaceClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceClassParameters() bool {
	if o != nil && !IsNil(o.SpaceClassParameters) {
		return true
	}

	return false
}

// SetSpaceClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the SpaceClassParameters field.
func (o *DataInnerIpamSpaceData) SetSpaceClassParameters(v []ApiClassParameterOutputEntry) {
	o.SpaceClassParameters = v
}

// GetSpaceDescription returns the SpaceDescription field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceDescription() string {
	if o == nil || IsNil(o.SpaceDescription) {
		var ret string
		return ret
	}
	return *o.SpaceDescription
}

// GetSpaceDescriptionOk returns a tuple with the SpaceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceDescription) {
		return nil, false
	}
	return o.SpaceDescription, true
}

// HasSpaceDescription returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceDescription() bool {
	if o != nil && !IsNil(o.SpaceDescription) {
		return true
	}

	return false
}

// SetSpaceDescription gets a reference to the given string and assigns it to the SpaceDescription field.
func (o *DataInnerIpamSpaceData) SetSpaceDescription(v string) {
	o.SpaceDescription = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceId() string {
	if o == nil || IsNil(o.SpaceId) {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *DataInnerIpamSpaceData) SetSpaceId(v string) {
	o.SpaceId = &v
}

// GetSpaceIsTemplate returns the SpaceIsTemplate field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceIsTemplate() string {
	if o == nil || IsNil(o.SpaceIsTemplate) {
		var ret string
		return ret
	}
	return *o.SpaceIsTemplate
}

// GetSpaceIsTemplateOk returns a tuple with the SpaceIsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceIsTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceIsTemplate) {
		return nil, false
	}
	return o.SpaceIsTemplate, true
}

// HasSpaceIsTemplate returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceIsTemplate() bool {
	if o != nil && !IsNil(o.SpaceIsTemplate) {
		return true
	}

	return false
}

// SetSpaceIsTemplate gets a reference to the given string and assigns it to the SpaceIsTemplate field.
func (o *DataInnerIpamSpaceData) SetSpaceIsTemplate(v string) {
	o.SpaceIsTemplate = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *DataInnerIpamSpaceData) GetSpaceName() string {
	if o == nil || IsNil(o.SpaceName) {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamSpaceData) GetSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceName) {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *DataInnerIpamSpaceData) HasSpaceName() bool {
	if o != nil && !IsNil(o.SpaceName) {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *DataInnerIpamSpaceData) SetSpaceName(v string) {
	o.SpaceName = &v
}

func (o DataInnerIpamSpaceData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerIpamSpaceData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpaceMultistatus) {
		toSerialize["space_multistatus"] = o.SpaceMultistatus
	}
	if !IsNil(o.ParentSpaceClassName) {
		toSerialize["parent_space_class_name"] = o.ParentSpaceClassName
	}
	if !IsNil(o.ParentSpaceClassParameters) {
		toSerialize["parent_space_class_parameters"] = o.ParentSpaceClassParameters
	}
	if !IsNil(o.ParentSpaceId) {
		toSerialize["parent_space_id"] = o.ParentSpaceId
	}
	if !IsNil(o.ParentSpaceName) {
		toSerialize["parent_space_name"] = o.ParentSpaceName
	}
	if !IsNil(o.SpaceClassName) {
		toSerialize["space_class_name"] = o.SpaceClassName
	}
	if !IsNil(o.SpaceClassParameters) {
		toSerialize["space_class_parameters"] = o.SpaceClassParameters
	}
	if !IsNil(o.SpaceDescription) {
		toSerialize["space_description"] = o.SpaceDescription
	}
	if !IsNil(o.SpaceId) {
		toSerialize["space_id"] = o.SpaceId
	}
	if !IsNil(o.SpaceIsTemplate) {
		toSerialize["space_is_template"] = o.SpaceIsTemplate
	}
	if !IsNil(o.SpaceName) {
		toSerialize["space_name"] = o.SpaceName
	}
	return toSerialize, nil
}

type NullableDataInnerIpamSpaceData struct {
	value *DataInnerIpamSpaceData
	isSet bool
}

func (v NullableDataInnerIpamSpaceData) Get() *DataInnerIpamSpaceData {
	return v.value
}

func (v *NullableDataInnerIpamSpaceData) Set(val *DataInnerIpamSpaceData) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerIpamSpaceData) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerIpamSpaceData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerIpamSpaceData(val *DataInnerIpamSpaceData) *NullableDataInnerIpamSpaceData {
	return &NullableDataInnerIpamSpaceData{value: val, isSet: true}
}

func (v NullableDataInnerIpamSpaceData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerIpamSpaceData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
