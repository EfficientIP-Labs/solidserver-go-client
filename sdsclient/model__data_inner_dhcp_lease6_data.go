/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerDhcpLease6Data type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerDhcpLease6Data{}

// DataInnerDhcpLease6Data struct for DataInnerDhcpLease6Data
type DataInnerDhcpLease6Data struct {
	// The name of the class applied to the DHCPv6 server the object belongs to, it can be preceded by the class directory.
	Server6ClassName *string `json:"server6_class_name,omitempty"`
	// The database identifier (ID) of the DHCPv6 server the object belongs to.
	Server6Id *string `json:"server6_id,omitempty"`
	// The name of the DHCPv6 server the object belongs to.
	Server6Name *string `json:"server6_name,omitempty"`
	// The type of the DHCPv6 server the object belongs to: <table><caption>server6_type possible values</caption><br/><thead><tr><th>Type</th><th>Description</th></tr><br/></thead><br/><tbody><tr><td >ipm</td><td >EfficientIP or EfficientIP Package server</td></tr><tr><td >vdhcp</td><td >EfficientIP DHCPv6 smart architecture</td></tr></tbody></table></p><br/>
	Server6Type *string `json:"server6_type,omitempty"`
	// The version details of the DHCPv6 server the object belongs to.
	Server6Version *string `json:"server6_version,omitempty"`
	// The client DHCP Unique Identifier (DUID) associated with the DHCPv6 lease.
	Lease6ClientDuid *string `json:"lease6_client_duid,omitempty"`
	// The name of the client associated with the DHCPv6 lease.
	Lease6Clientname *string `json:"lease6_clientname,omitempty"`
	// The domain name associated with the DHCPv6 lease.
	Lease6Domain *string `json:"lease6_domain,omitempty"`
	// The expiration time of the lease, in decimal UNIX date format.
	Lease6EndTime *string `json:"lease6_end_time,omitempty"`
	// The first time the DHCPv6 lease has been attributed to the client, in decimal UNIX date format.
	Lease6FirstTime *string `json:"lease6_first_time,omitempty"`
	// The gateway IP address of the relay agent of the DHCPv6 lease.
	Lease6Giaddr *string `json:"lease6_giaddr,omitempty"`
	// The database identifier (ID) of the DHCPv6 lease.
	Lease6Id *string `json:"lease6_id,omitempty"`
	// The IP address associated with the DHCPv6 lease, in hexadecimal format.
	Lease6Address6Addr *string `json:"lease6_address6_addr,omitempty"`
	// The MAC address associated with the DHCPv6 lease.
	Lease6MacAddr *string `json:"lease6_mac_addr,omitempty"`
	// The name of the DHCPv6 lease.
	Lease6Name *string `json:"lease6_name,omitempty"`
	// The duration time (time to live) of the DHCPv6 lease, in seconds.
	Lease6Period *string `json:"lease6_period,omitempty"`
	// The last time the DHCPv6 lease has been attributed to the client, in decimal UNIX date format.
	Lease6Time *string `json:"lease6_time,omitempty"`
	// The name of the class applied to the DHCPv6 range the object belongs to, it can be preceded by the class directory.
	Range6ClassName *string `json:"range6_class_name,omitempty"`
	// The class parameters applied to the DHCPv6 range the object belongs to.
	Range6ClassParameters []ApiClassParameterOutputEntry `json:"range6_class_parameters,omitempty"`
	// The last IP address of the DHCPv6 range the object belongs to, in hexadecimal format.
	Range6EndAddress6Addr *string `json:"range6_end_address6_addr,omitempty"`
	// Internal use. Not documented.
	Range6FailoverName *string `json:"range6_failover_name,omitempty"`
	// The database identifier (ID) of the DHCPv6 range the object belongs to.
	Range6Id *string `json:"range6_id,omitempty"`
	// The first IP address of the DHCPv6 range the object belongs to, in hexadecimal format.
	Range6StartAddress6Addr *string `json:"range6_start_address6_addr,omitempty"`
	// The name of the class applied to the DHCPv6 scope the object belongs to, it can be preceded by the class directory.
	Scope6ClassName *string `json:"scope6_class_name,omitempty"`
	// The database identifier (ID) of the DHCPv6 scope the object belongs to.
	Scope6Id *string `json:"scope6_id,omitempty"`
	// The name of the DHCPv6 scope the object belongs to.
	Scope6Name *string `json:"scope6_name,omitempty"`
	// The prefix of the DHCPv6 scope the object belongs to.
	Scope6Prefix *string `json:"scope6_prefix,omitempty"`
	// The number of IP addresses the DHCPv6 scope the object belongs to contains.
	Scope6Size *string `json:"scope6_size,omitempty"`
	// The first IP address of the DHCPv6 scope the object belongs to, in hexadecimal format.
	Scope6StartAddress6Addr *string `json:"scope6_start_address6_addr,omitempty"`
	// The database identifier (ID) of the DHCPv6 shared network the object belongs to.
	Sharednetwork6Id *string `json:"sharednetwork6_id,omitempty"`
	// The name of the DHCPv6 shared network the object belongs to.
	Sharednetwork6Name *string `json:"sharednetwork6_name,omitempty"`
	// The human readable version of the parameter <b>server6_addr</b> or <b>server6_addr6</b>.
	Server6Hostaddr *string `json:"server6_hostaddr,omitempty"`
	// The Management IP address of the DHCPv6 server the object belongs to, the IPv6 address configured when adding the server, in hexadecimal format.
	Server6Addr6 *string `json:"server6_addr6,omitempty"`
	// The Management IP address of the DHCPv6 server the object belongs to, the IPv4 address configured when adding the server, in hexadecimal format.
	Server6Addr *string `json:"server6_addr,omitempty"`
	// The vendor details of the client associated with the DHCPv6 lease.
	Lease6MacVendor *string `json:"lease6_mac_vendor,omitempty"`
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	Lease6Multistatus *string `json:"lease6_multistatus,omitempty"`
	// The percentage of time the lease has really been in use.
	Lease6Percent *string `json:"lease6_percent,omitempty"`
	// The time left to the lease before it expires, in seconds.
	Lease6TimeToExpire *string `json:"lease6_time_to_expire,omitempty"`
	// The database identifier (ID) of the DHCPv6 smart architecture managing the DHCPv6 server the object belongs to. <b>0</b> indicates that the server the object belongs to is not managed by a smart architecture or is a smart architecture itself.
	SmartParentId *string `json:"smart_parent_id,omitempty"`
	// The name of the DHCPv4 smart architecture managing the DHCPv4 server the object belongs to. <b>#</b> indicates that the server is not managed by a smart architecture or is a smart architecture itself.
	SmartParentName *string `json:"smart_parent_name,omitempty"`
}

// NewDataInnerDhcpLease6Data instantiates a new DataInnerDhcpLease6Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerDhcpLease6Data() *DataInnerDhcpLease6Data {
	this := DataInnerDhcpLease6Data{}
	return &this
}

// NewDataInnerDhcpLease6DataWithDefaults instantiates a new DataInnerDhcpLease6Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerDhcpLease6DataWithDefaults() *DataInnerDhcpLease6Data {
	this := DataInnerDhcpLease6Data{}
	return &this
}

// GetServer6ClassName returns the Server6ClassName field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6ClassName() string {
	if o == nil || IsNil(o.Server6ClassName) {
		var ret string
		return ret
	}
	return *o.Server6ClassName
}

// GetServer6ClassNameOk returns a tuple with the Server6ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6ClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.Server6ClassName) {
		return nil, false
	}
	return o.Server6ClassName, true
}

// HasServer6ClassName returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6ClassName() bool {
	if o != nil && !IsNil(o.Server6ClassName) {
		return true
	}

	return false
}

// SetServer6ClassName gets a reference to the given string and assigns it to the Server6ClassName field.
func (o *DataInnerDhcpLease6Data) SetServer6ClassName(v string) {
	o.Server6ClassName = &v
}

// GetServer6Id returns the Server6Id field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Id() string {
	if o == nil || IsNil(o.Server6Id) {
		var ret string
		return ret
	}
	return *o.Server6Id
}

// GetServer6IdOk returns a tuple with the Server6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6IdOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Id) {
		return nil, false
	}
	return o.Server6Id, true
}

// HasServer6Id returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Id() bool {
	if o != nil && !IsNil(o.Server6Id) {
		return true
	}

	return false
}

// SetServer6Id gets a reference to the given string and assigns it to the Server6Id field.
func (o *DataInnerDhcpLease6Data) SetServer6Id(v string) {
	o.Server6Id = &v
}

// GetServer6Name returns the Server6Name field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Name() string {
	if o == nil || IsNil(o.Server6Name) {
		var ret string
		return ret
	}
	return *o.Server6Name
}

// GetServer6NameOk returns a tuple with the Server6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Name) {
		return nil, false
	}
	return o.Server6Name, true
}

// HasServer6Name returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Name() bool {
	if o != nil && !IsNil(o.Server6Name) {
		return true
	}

	return false
}

// SetServer6Name gets a reference to the given string and assigns it to the Server6Name field.
func (o *DataInnerDhcpLease6Data) SetServer6Name(v string) {
	o.Server6Name = &v
}

// GetServer6Type returns the Server6Type field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Type() string {
	if o == nil || IsNil(o.Server6Type) {
		var ret string
		return ret
	}
	return *o.Server6Type
}

// GetServer6TypeOk returns a tuple with the Server6Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6TypeOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Type) {
		return nil, false
	}
	return o.Server6Type, true
}

// HasServer6Type returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Type() bool {
	if o != nil && !IsNil(o.Server6Type) {
		return true
	}

	return false
}

// SetServer6Type gets a reference to the given string and assigns it to the Server6Type field.
func (o *DataInnerDhcpLease6Data) SetServer6Type(v string) {
	o.Server6Type = &v
}

// GetServer6Version returns the Server6Version field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Version() string {
	if o == nil || IsNil(o.Server6Version) {
		var ret string
		return ret
	}
	return *o.Server6Version
}

// GetServer6VersionOk returns a tuple with the Server6Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6VersionOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Version) {
		return nil, false
	}
	return o.Server6Version, true
}

// HasServer6Version returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Version() bool {
	if o != nil && !IsNil(o.Server6Version) {
		return true
	}

	return false
}

// SetServer6Version gets a reference to the given string and assigns it to the Server6Version field.
func (o *DataInnerDhcpLease6Data) SetServer6Version(v string) {
	o.Server6Version = &v
}

// GetLease6ClientDuid returns the Lease6ClientDuid field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6ClientDuid() string {
	if o == nil || IsNil(o.Lease6ClientDuid) {
		var ret string
		return ret
	}
	return *o.Lease6ClientDuid
}

// GetLease6ClientDuidOk returns a tuple with the Lease6ClientDuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6ClientDuidOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6ClientDuid) {
		return nil, false
	}
	return o.Lease6ClientDuid, true
}

// HasLease6ClientDuid returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6ClientDuid() bool {
	if o != nil && !IsNil(o.Lease6ClientDuid) {
		return true
	}

	return false
}

// SetLease6ClientDuid gets a reference to the given string and assigns it to the Lease6ClientDuid field.
func (o *DataInnerDhcpLease6Data) SetLease6ClientDuid(v string) {
	o.Lease6ClientDuid = &v
}

// GetLease6Clientname returns the Lease6Clientname field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Clientname() string {
	if o == nil || IsNil(o.Lease6Clientname) {
		var ret string
		return ret
	}
	return *o.Lease6Clientname
}

// GetLease6ClientnameOk returns a tuple with the Lease6Clientname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6ClientnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Clientname) {
		return nil, false
	}
	return o.Lease6Clientname, true
}

// HasLease6Clientname returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Clientname() bool {
	if o != nil && !IsNil(o.Lease6Clientname) {
		return true
	}

	return false
}

// SetLease6Clientname gets a reference to the given string and assigns it to the Lease6Clientname field.
func (o *DataInnerDhcpLease6Data) SetLease6Clientname(v string) {
	o.Lease6Clientname = &v
}

// GetLease6Domain returns the Lease6Domain field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Domain() string {
	if o == nil || IsNil(o.Lease6Domain) {
		var ret string
		return ret
	}
	return *o.Lease6Domain
}

// GetLease6DomainOk returns a tuple with the Lease6Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6DomainOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Domain) {
		return nil, false
	}
	return o.Lease6Domain, true
}

// HasLease6Domain returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Domain() bool {
	if o != nil && !IsNil(o.Lease6Domain) {
		return true
	}

	return false
}

// SetLease6Domain gets a reference to the given string and assigns it to the Lease6Domain field.
func (o *DataInnerDhcpLease6Data) SetLease6Domain(v string) {
	o.Lease6Domain = &v
}

// GetLease6EndTime returns the Lease6EndTime field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6EndTime() string {
	if o == nil || IsNil(o.Lease6EndTime) {
		var ret string
		return ret
	}
	return *o.Lease6EndTime
}

// GetLease6EndTimeOk returns a tuple with the Lease6EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6EndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6EndTime) {
		return nil, false
	}
	return o.Lease6EndTime, true
}

// HasLease6EndTime returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6EndTime() bool {
	if o != nil && !IsNil(o.Lease6EndTime) {
		return true
	}

	return false
}

// SetLease6EndTime gets a reference to the given string and assigns it to the Lease6EndTime field.
func (o *DataInnerDhcpLease6Data) SetLease6EndTime(v string) {
	o.Lease6EndTime = &v
}

// GetLease6FirstTime returns the Lease6FirstTime field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6FirstTime() string {
	if o == nil || IsNil(o.Lease6FirstTime) {
		var ret string
		return ret
	}
	return *o.Lease6FirstTime
}

// GetLease6FirstTimeOk returns a tuple with the Lease6FirstTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6FirstTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6FirstTime) {
		return nil, false
	}
	return o.Lease6FirstTime, true
}

// HasLease6FirstTime returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6FirstTime() bool {
	if o != nil && !IsNil(o.Lease6FirstTime) {
		return true
	}

	return false
}

// SetLease6FirstTime gets a reference to the given string and assigns it to the Lease6FirstTime field.
func (o *DataInnerDhcpLease6Data) SetLease6FirstTime(v string) {
	o.Lease6FirstTime = &v
}

// GetLease6Giaddr returns the Lease6Giaddr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Giaddr() string {
	if o == nil || IsNil(o.Lease6Giaddr) {
		var ret string
		return ret
	}
	return *o.Lease6Giaddr
}

// GetLease6GiaddrOk returns a tuple with the Lease6Giaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6GiaddrOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Giaddr) {
		return nil, false
	}
	return o.Lease6Giaddr, true
}

// HasLease6Giaddr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Giaddr() bool {
	if o != nil && !IsNil(o.Lease6Giaddr) {
		return true
	}

	return false
}

// SetLease6Giaddr gets a reference to the given string and assigns it to the Lease6Giaddr field.
func (o *DataInnerDhcpLease6Data) SetLease6Giaddr(v string) {
	o.Lease6Giaddr = &v
}

// GetLease6Id returns the Lease6Id field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Id() string {
	if o == nil || IsNil(o.Lease6Id) {
		var ret string
		return ret
	}
	return *o.Lease6Id
}

// GetLease6IdOk returns a tuple with the Lease6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6IdOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Id) {
		return nil, false
	}
	return o.Lease6Id, true
}

// HasLease6Id returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Id() bool {
	if o != nil && !IsNil(o.Lease6Id) {
		return true
	}

	return false
}

// SetLease6Id gets a reference to the given string and assigns it to the Lease6Id field.
func (o *DataInnerDhcpLease6Data) SetLease6Id(v string) {
	o.Lease6Id = &v
}

// GetLease6Address6Addr returns the Lease6Address6Addr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Address6Addr() string {
	if o == nil || IsNil(o.Lease6Address6Addr) {
		var ret string
		return ret
	}
	return *o.Lease6Address6Addr
}

// GetLease6Address6AddrOk returns a tuple with the Lease6Address6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6Address6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Address6Addr) {
		return nil, false
	}
	return o.Lease6Address6Addr, true
}

// HasLease6Address6Addr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Address6Addr() bool {
	if o != nil && !IsNil(o.Lease6Address6Addr) {
		return true
	}

	return false
}

// SetLease6Address6Addr gets a reference to the given string and assigns it to the Lease6Address6Addr field.
func (o *DataInnerDhcpLease6Data) SetLease6Address6Addr(v string) {
	o.Lease6Address6Addr = &v
}

// GetLease6MacAddr returns the Lease6MacAddr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6MacAddr() string {
	if o == nil || IsNil(o.Lease6MacAddr) {
		var ret string
		return ret
	}
	return *o.Lease6MacAddr
}

// GetLease6MacAddrOk returns a tuple with the Lease6MacAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6MacAddrOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6MacAddr) {
		return nil, false
	}
	return o.Lease6MacAddr, true
}

// HasLease6MacAddr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6MacAddr() bool {
	if o != nil && !IsNil(o.Lease6MacAddr) {
		return true
	}

	return false
}

// SetLease6MacAddr gets a reference to the given string and assigns it to the Lease6MacAddr field.
func (o *DataInnerDhcpLease6Data) SetLease6MacAddr(v string) {
	o.Lease6MacAddr = &v
}

// GetLease6Name returns the Lease6Name field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Name() string {
	if o == nil || IsNil(o.Lease6Name) {
		var ret string
		return ret
	}
	return *o.Lease6Name
}

// GetLease6NameOk returns a tuple with the Lease6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Name) {
		return nil, false
	}
	return o.Lease6Name, true
}

// HasLease6Name returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Name() bool {
	if o != nil && !IsNil(o.Lease6Name) {
		return true
	}

	return false
}

// SetLease6Name gets a reference to the given string and assigns it to the Lease6Name field.
func (o *DataInnerDhcpLease6Data) SetLease6Name(v string) {
	o.Lease6Name = &v
}

// GetLease6Period returns the Lease6Period field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Period() string {
	if o == nil || IsNil(o.Lease6Period) {
		var ret string
		return ret
	}
	return *o.Lease6Period
}

// GetLease6PeriodOk returns a tuple with the Lease6Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6PeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Period) {
		return nil, false
	}
	return o.Lease6Period, true
}

// HasLease6Period returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Period() bool {
	if o != nil && !IsNil(o.Lease6Period) {
		return true
	}

	return false
}

// SetLease6Period gets a reference to the given string and assigns it to the Lease6Period field.
func (o *DataInnerDhcpLease6Data) SetLease6Period(v string) {
	o.Lease6Period = &v
}

// GetLease6Time returns the Lease6Time field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Time() string {
	if o == nil || IsNil(o.Lease6Time) {
		var ret string
		return ret
	}
	return *o.Lease6Time
}

// GetLease6TimeOk returns a tuple with the Lease6Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6TimeOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Time) {
		return nil, false
	}
	return o.Lease6Time, true
}

// HasLease6Time returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Time() bool {
	if o != nil && !IsNil(o.Lease6Time) {
		return true
	}

	return false
}

// SetLease6Time gets a reference to the given string and assigns it to the Lease6Time field.
func (o *DataInnerDhcpLease6Data) SetLease6Time(v string) {
	o.Lease6Time = &v
}

// GetRange6ClassName returns the Range6ClassName field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetRange6ClassName() string {
	if o == nil || IsNil(o.Range6ClassName) {
		var ret string
		return ret
	}
	return *o.Range6ClassName
}

// GetRange6ClassNameOk returns a tuple with the Range6ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetRange6ClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.Range6ClassName) {
		return nil, false
	}
	return o.Range6ClassName, true
}

// HasRange6ClassName returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasRange6ClassName() bool {
	if o != nil && !IsNil(o.Range6ClassName) {
		return true
	}

	return false
}

// SetRange6ClassName gets a reference to the given string and assigns it to the Range6ClassName field.
func (o *DataInnerDhcpLease6Data) SetRange6ClassName(v string) {
	o.Range6ClassName = &v
}

// GetRange6ClassParameters returns the Range6ClassParameters field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetRange6ClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.Range6ClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.Range6ClassParameters
}

// GetRange6ClassParametersOk returns a tuple with the Range6ClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetRange6ClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.Range6ClassParameters) {
		return nil, false
	}
	return o.Range6ClassParameters, true
}

// HasRange6ClassParameters returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasRange6ClassParameters() bool {
	if o != nil && !IsNil(o.Range6ClassParameters) {
		return true
	}

	return false
}

// SetRange6ClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the Range6ClassParameters field.
func (o *DataInnerDhcpLease6Data) SetRange6ClassParameters(v []ApiClassParameterOutputEntry) {
	o.Range6ClassParameters = v
}

// GetRange6EndAddress6Addr returns the Range6EndAddress6Addr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetRange6EndAddress6Addr() string {
	if o == nil || IsNil(o.Range6EndAddress6Addr) {
		var ret string
		return ret
	}
	return *o.Range6EndAddress6Addr
}

// GetRange6EndAddress6AddrOk returns a tuple with the Range6EndAddress6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetRange6EndAddress6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Range6EndAddress6Addr) {
		return nil, false
	}
	return o.Range6EndAddress6Addr, true
}

// HasRange6EndAddress6Addr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasRange6EndAddress6Addr() bool {
	if o != nil && !IsNil(o.Range6EndAddress6Addr) {
		return true
	}

	return false
}

// SetRange6EndAddress6Addr gets a reference to the given string and assigns it to the Range6EndAddress6Addr field.
func (o *DataInnerDhcpLease6Data) SetRange6EndAddress6Addr(v string) {
	o.Range6EndAddress6Addr = &v
}

// GetRange6FailoverName returns the Range6FailoverName field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetRange6FailoverName() string {
	if o == nil || IsNil(o.Range6FailoverName) {
		var ret string
		return ret
	}
	return *o.Range6FailoverName
}

// GetRange6FailoverNameOk returns a tuple with the Range6FailoverName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetRange6FailoverNameOk() (*string, bool) {
	if o == nil || IsNil(o.Range6FailoverName) {
		return nil, false
	}
	return o.Range6FailoverName, true
}

// HasRange6FailoverName returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasRange6FailoverName() bool {
	if o != nil && !IsNil(o.Range6FailoverName) {
		return true
	}

	return false
}

// SetRange6FailoverName gets a reference to the given string and assigns it to the Range6FailoverName field.
func (o *DataInnerDhcpLease6Data) SetRange6FailoverName(v string) {
	o.Range6FailoverName = &v
}

// GetRange6Id returns the Range6Id field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetRange6Id() string {
	if o == nil || IsNil(o.Range6Id) {
		var ret string
		return ret
	}
	return *o.Range6Id
}

// GetRange6IdOk returns a tuple with the Range6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetRange6IdOk() (*string, bool) {
	if o == nil || IsNil(o.Range6Id) {
		return nil, false
	}
	return o.Range6Id, true
}

// HasRange6Id returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasRange6Id() bool {
	if o != nil && !IsNil(o.Range6Id) {
		return true
	}

	return false
}

// SetRange6Id gets a reference to the given string and assigns it to the Range6Id field.
func (o *DataInnerDhcpLease6Data) SetRange6Id(v string) {
	o.Range6Id = &v
}

// GetRange6StartAddress6Addr returns the Range6StartAddress6Addr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetRange6StartAddress6Addr() string {
	if o == nil || IsNil(o.Range6StartAddress6Addr) {
		var ret string
		return ret
	}
	return *o.Range6StartAddress6Addr
}

// GetRange6StartAddress6AddrOk returns a tuple with the Range6StartAddress6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetRange6StartAddress6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Range6StartAddress6Addr) {
		return nil, false
	}
	return o.Range6StartAddress6Addr, true
}

// HasRange6StartAddress6Addr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasRange6StartAddress6Addr() bool {
	if o != nil && !IsNil(o.Range6StartAddress6Addr) {
		return true
	}

	return false
}

// SetRange6StartAddress6Addr gets a reference to the given string and assigns it to the Range6StartAddress6Addr field.
func (o *DataInnerDhcpLease6Data) SetRange6StartAddress6Addr(v string) {
	o.Range6StartAddress6Addr = &v
}

// GetScope6ClassName returns the Scope6ClassName field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetScope6ClassName() string {
	if o == nil || IsNil(o.Scope6ClassName) {
		var ret string
		return ret
	}
	return *o.Scope6ClassName
}

// GetScope6ClassNameOk returns a tuple with the Scope6ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetScope6ClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.Scope6ClassName) {
		return nil, false
	}
	return o.Scope6ClassName, true
}

// HasScope6ClassName returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasScope6ClassName() bool {
	if o != nil && !IsNil(o.Scope6ClassName) {
		return true
	}

	return false
}

// SetScope6ClassName gets a reference to the given string and assigns it to the Scope6ClassName field.
func (o *DataInnerDhcpLease6Data) SetScope6ClassName(v string) {
	o.Scope6ClassName = &v
}

// GetScope6Id returns the Scope6Id field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetScope6Id() string {
	if o == nil || IsNil(o.Scope6Id) {
		var ret string
		return ret
	}
	return *o.Scope6Id
}

// GetScope6IdOk returns a tuple with the Scope6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetScope6IdOk() (*string, bool) {
	if o == nil || IsNil(o.Scope6Id) {
		return nil, false
	}
	return o.Scope6Id, true
}

// HasScope6Id returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasScope6Id() bool {
	if o != nil && !IsNil(o.Scope6Id) {
		return true
	}

	return false
}

// SetScope6Id gets a reference to the given string and assigns it to the Scope6Id field.
func (o *DataInnerDhcpLease6Data) SetScope6Id(v string) {
	o.Scope6Id = &v
}

// GetScope6Name returns the Scope6Name field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetScope6Name() string {
	if o == nil || IsNil(o.Scope6Name) {
		var ret string
		return ret
	}
	return *o.Scope6Name
}

// GetScope6NameOk returns a tuple with the Scope6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetScope6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Scope6Name) {
		return nil, false
	}
	return o.Scope6Name, true
}

// HasScope6Name returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasScope6Name() bool {
	if o != nil && !IsNil(o.Scope6Name) {
		return true
	}

	return false
}

// SetScope6Name gets a reference to the given string and assigns it to the Scope6Name field.
func (o *DataInnerDhcpLease6Data) SetScope6Name(v string) {
	o.Scope6Name = &v
}

// GetScope6Prefix returns the Scope6Prefix field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetScope6Prefix() string {
	if o == nil || IsNil(o.Scope6Prefix) {
		var ret string
		return ret
	}
	return *o.Scope6Prefix
}

// GetScope6PrefixOk returns a tuple with the Scope6Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetScope6PrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Scope6Prefix) {
		return nil, false
	}
	return o.Scope6Prefix, true
}

// HasScope6Prefix returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasScope6Prefix() bool {
	if o != nil && !IsNil(o.Scope6Prefix) {
		return true
	}

	return false
}

// SetScope6Prefix gets a reference to the given string and assigns it to the Scope6Prefix field.
func (o *DataInnerDhcpLease6Data) SetScope6Prefix(v string) {
	o.Scope6Prefix = &v
}

// GetScope6Size returns the Scope6Size field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetScope6Size() string {
	if o == nil || IsNil(o.Scope6Size) {
		var ret string
		return ret
	}
	return *o.Scope6Size
}

// GetScope6SizeOk returns a tuple with the Scope6Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetScope6SizeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope6Size) {
		return nil, false
	}
	return o.Scope6Size, true
}

// HasScope6Size returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasScope6Size() bool {
	if o != nil && !IsNil(o.Scope6Size) {
		return true
	}

	return false
}

// SetScope6Size gets a reference to the given string and assigns it to the Scope6Size field.
func (o *DataInnerDhcpLease6Data) SetScope6Size(v string) {
	o.Scope6Size = &v
}

// GetScope6StartAddress6Addr returns the Scope6StartAddress6Addr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetScope6StartAddress6Addr() string {
	if o == nil || IsNil(o.Scope6StartAddress6Addr) {
		var ret string
		return ret
	}
	return *o.Scope6StartAddress6Addr
}

// GetScope6StartAddress6AddrOk returns a tuple with the Scope6StartAddress6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetScope6StartAddress6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Scope6StartAddress6Addr) {
		return nil, false
	}
	return o.Scope6StartAddress6Addr, true
}

// HasScope6StartAddress6Addr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasScope6StartAddress6Addr() bool {
	if o != nil && !IsNil(o.Scope6StartAddress6Addr) {
		return true
	}

	return false
}

// SetScope6StartAddress6Addr gets a reference to the given string and assigns it to the Scope6StartAddress6Addr field.
func (o *DataInnerDhcpLease6Data) SetScope6StartAddress6Addr(v string) {
	o.Scope6StartAddress6Addr = &v
}

// GetSharednetwork6Id returns the Sharednetwork6Id field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetSharednetwork6Id() string {
	if o == nil || IsNil(o.Sharednetwork6Id) {
		var ret string
		return ret
	}
	return *o.Sharednetwork6Id
}

// GetSharednetwork6IdOk returns a tuple with the Sharednetwork6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetSharednetwork6IdOk() (*string, bool) {
	if o == nil || IsNil(o.Sharednetwork6Id) {
		return nil, false
	}
	return o.Sharednetwork6Id, true
}

// HasSharednetwork6Id returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasSharednetwork6Id() bool {
	if o != nil && !IsNil(o.Sharednetwork6Id) {
		return true
	}

	return false
}

// SetSharednetwork6Id gets a reference to the given string and assigns it to the Sharednetwork6Id field.
func (o *DataInnerDhcpLease6Data) SetSharednetwork6Id(v string) {
	o.Sharednetwork6Id = &v
}

// GetSharednetwork6Name returns the Sharednetwork6Name field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetSharednetwork6Name() string {
	if o == nil || IsNil(o.Sharednetwork6Name) {
		var ret string
		return ret
	}
	return *o.Sharednetwork6Name
}

// GetSharednetwork6NameOk returns a tuple with the Sharednetwork6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetSharednetwork6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Sharednetwork6Name) {
		return nil, false
	}
	return o.Sharednetwork6Name, true
}

// HasSharednetwork6Name returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasSharednetwork6Name() bool {
	if o != nil && !IsNil(o.Sharednetwork6Name) {
		return true
	}

	return false
}

// SetSharednetwork6Name gets a reference to the given string and assigns it to the Sharednetwork6Name field.
func (o *DataInnerDhcpLease6Data) SetSharednetwork6Name(v string) {
	o.Sharednetwork6Name = &v
}

// GetServer6Hostaddr returns the Server6Hostaddr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Hostaddr() string {
	if o == nil || IsNil(o.Server6Hostaddr) {
		var ret string
		return ret
	}
	return *o.Server6Hostaddr
}

// GetServer6HostaddrOk returns a tuple with the Server6Hostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6HostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Hostaddr) {
		return nil, false
	}
	return o.Server6Hostaddr, true
}

// HasServer6Hostaddr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Hostaddr() bool {
	if o != nil && !IsNil(o.Server6Hostaddr) {
		return true
	}

	return false
}

// SetServer6Hostaddr gets a reference to the given string and assigns it to the Server6Hostaddr field.
func (o *DataInnerDhcpLease6Data) SetServer6Hostaddr(v string) {
	o.Server6Hostaddr = &v
}

// GetServer6Addr6 returns the Server6Addr6 field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Addr6() string {
	if o == nil || IsNil(o.Server6Addr6) {
		var ret string
		return ret
	}
	return *o.Server6Addr6
}

// GetServer6Addr6Ok returns a tuple with the Server6Addr6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6Addr6Ok() (*string, bool) {
	if o == nil || IsNil(o.Server6Addr6) {
		return nil, false
	}
	return o.Server6Addr6, true
}

// HasServer6Addr6 returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Addr6() bool {
	if o != nil && !IsNil(o.Server6Addr6) {
		return true
	}

	return false
}

// SetServer6Addr6 gets a reference to the given string and assigns it to the Server6Addr6 field.
func (o *DataInnerDhcpLease6Data) SetServer6Addr6(v string) {
	o.Server6Addr6 = &v
}

// GetServer6Addr returns the Server6Addr field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetServer6Addr() string {
	if o == nil || IsNil(o.Server6Addr) {
		var ret string
		return ret
	}
	return *o.Server6Addr
}

// GetServer6AddrOk returns a tuple with the Server6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetServer6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Addr) {
		return nil, false
	}
	return o.Server6Addr, true
}

// HasServer6Addr returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasServer6Addr() bool {
	if o != nil && !IsNil(o.Server6Addr) {
		return true
	}

	return false
}

// SetServer6Addr gets a reference to the given string and assigns it to the Server6Addr field.
func (o *DataInnerDhcpLease6Data) SetServer6Addr(v string) {
	o.Server6Addr = &v
}

// GetLease6MacVendor returns the Lease6MacVendor field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6MacVendor() string {
	if o == nil || IsNil(o.Lease6MacVendor) {
		var ret string
		return ret
	}
	return *o.Lease6MacVendor
}

// GetLease6MacVendorOk returns a tuple with the Lease6MacVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6MacVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6MacVendor) {
		return nil, false
	}
	return o.Lease6MacVendor, true
}

// HasLease6MacVendor returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6MacVendor() bool {
	if o != nil && !IsNil(o.Lease6MacVendor) {
		return true
	}

	return false
}

// SetLease6MacVendor gets a reference to the given string and assigns it to the Lease6MacVendor field.
func (o *DataInnerDhcpLease6Data) SetLease6MacVendor(v string) {
	o.Lease6MacVendor = &v
}

// GetLease6Multistatus returns the Lease6Multistatus field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Multistatus() string {
	if o == nil || IsNil(o.Lease6Multistatus) {
		var ret string
		return ret
	}
	return *o.Lease6Multistatus
}

// GetLease6MultistatusOk returns a tuple with the Lease6Multistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6MultistatusOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Multistatus) {
		return nil, false
	}
	return o.Lease6Multistatus, true
}

// HasLease6Multistatus returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Multistatus() bool {
	if o != nil && !IsNil(o.Lease6Multistatus) {
		return true
	}

	return false
}

// SetLease6Multistatus gets a reference to the given string and assigns it to the Lease6Multistatus field.
func (o *DataInnerDhcpLease6Data) SetLease6Multistatus(v string) {
	o.Lease6Multistatus = &v
}

// GetLease6Percent returns the Lease6Percent field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6Percent() string {
	if o == nil || IsNil(o.Lease6Percent) {
		var ret string
		return ret
	}
	return *o.Lease6Percent
}

// GetLease6PercentOk returns a tuple with the Lease6Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6PercentOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6Percent) {
		return nil, false
	}
	return o.Lease6Percent, true
}

// HasLease6Percent returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6Percent() bool {
	if o != nil && !IsNil(o.Lease6Percent) {
		return true
	}

	return false
}

// SetLease6Percent gets a reference to the given string and assigns it to the Lease6Percent field.
func (o *DataInnerDhcpLease6Data) SetLease6Percent(v string) {
	o.Lease6Percent = &v
}

// GetLease6TimeToExpire returns the Lease6TimeToExpire field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetLease6TimeToExpire() string {
	if o == nil || IsNil(o.Lease6TimeToExpire) {
		var ret string
		return ret
	}
	return *o.Lease6TimeToExpire
}

// GetLease6TimeToExpireOk returns a tuple with the Lease6TimeToExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetLease6TimeToExpireOk() (*string, bool) {
	if o == nil || IsNil(o.Lease6TimeToExpire) {
		return nil, false
	}
	return o.Lease6TimeToExpire, true
}

// HasLease6TimeToExpire returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasLease6TimeToExpire() bool {
	if o != nil && !IsNil(o.Lease6TimeToExpire) {
		return true
	}

	return false
}

// SetLease6TimeToExpire gets a reference to the given string and assigns it to the Lease6TimeToExpire field.
func (o *DataInnerDhcpLease6Data) SetLease6TimeToExpire(v string) {
	o.Lease6TimeToExpire = &v
}

// GetSmartParentId returns the SmartParentId field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetSmartParentId() string {
	if o == nil || IsNil(o.SmartParentId) {
		var ret string
		return ret
	}
	return *o.SmartParentId
}

// GetSmartParentIdOk returns a tuple with the SmartParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetSmartParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmartParentId) {
		return nil, false
	}
	return o.SmartParentId, true
}

// HasSmartParentId returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasSmartParentId() bool {
	if o != nil && !IsNil(o.SmartParentId) {
		return true
	}

	return false
}

// SetSmartParentId gets a reference to the given string and assigns it to the SmartParentId field.
func (o *DataInnerDhcpLease6Data) SetSmartParentId(v string) {
	o.SmartParentId = &v
}

// GetSmartParentName returns the SmartParentName field value if set, zero value otherwise.
func (o *DataInnerDhcpLease6Data) GetSmartParentName() string {
	if o == nil || IsNil(o.SmartParentName) {
		var ret string
		return ret
	}
	return *o.SmartParentName
}

// GetSmartParentNameOk returns a tuple with the SmartParentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerDhcpLease6Data) GetSmartParentNameOk() (*string, bool) {
	if o == nil || IsNil(o.SmartParentName) {
		return nil, false
	}
	return o.SmartParentName, true
}

// HasSmartParentName returns a boolean if a field has been set.
func (o *DataInnerDhcpLease6Data) HasSmartParentName() bool {
	if o != nil && !IsNil(o.SmartParentName) {
		return true
	}

	return false
}

// SetSmartParentName gets a reference to the given string and assigns it to the SmartParentName field.
func (o *DataInnerDhcpLease6Data) SetSmartParentName(v string) {
	o.SmartParentName = &v
}

func (o DataInnerDhcpLease6Data) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerDhcpLease6Data) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server6ClassName) {
		toSerialize["server6_class_name"] = o.Server6ClassName
	}
	if !IsNil(o.Server6Id) {
		toSerialize["server6_id"] = o.Server6Id
	}
	if !IsNil(o.Server6Name) {
		toSerialize["server6_name"] = o.Server6Name
	}
	if !IsNil(o.Server6Type) {
		toSerialize["server6_type"] = o.Server6Type
	}
	if !IsNil(o.Server6Version) {
		toSerialize["server6_version"] = o.Server6Version
	}
	if !IsNil(o.Lease6ClientDuid) {
		toSerialize["lease6_client_duid"] = o.Lease6ClientDuid
	}
	if !IsNil(o.Lease6Clientname) {
		toSerialize["lease6_clientname"] = o.Lease6Clientname
	}
	if !IsNil(o.Lease6Domain) {
		toSerialize["lease6_domain"] = o.Lease6Domain
	}
	if !IsNil(o.Lease6EndTime) {
		toSerialize["lease6_end_time"] = o.Lease6EndTime
	}
	if !IsNil(o.Lease6FirstTime) {
		toSerialize["lease6_first_time"] = o.Lease6FirstTime
	}
	if !IsNil(o.Lease6Giaddr) {
		toSerialize["lease6_giaddr"] = o.Lease6Giaddr
	}
	if !IsNil(o.Lease6Id) {
		toSerialize["lease6_id"] = o.Lease6Id
	}
	if !IsNil(o.Lease6Address6Addr) {
		toSerialize["lease6_address6_addr"] = o.Lease6Address6Addr
	}
	if !IsNil(o.Lease6MacAddr) {
		toSerialize["lease6_mac_addr"] = o.Lease6MacAddr
	}
	if !IsNil(o.Lease6Name) {
		toSerialize["lease6_name"] = o.Lease6Name
	}
	if !IsNil(o.Lease6Period) {
		toSerialize["lease6_period"] = o.Lease6Period
	}
	if !IsNil(o.Lease6Time) {
		toSerialize["lease6_time"] = o.Lease6Time
	}
	if !IsNil(o.Range6ClassName) {
		toSerialize["range6_class_name"] = o.Range6ClassName
	}
	if !IsNil(o.Range6ClassParameters) {
		toSerialize["range6_class_parameters"] = o.Range6ClassParameters
	}
	if !IsNil(o.Range6EndAddress6Addr) {
		toSerialize["range6_end_address6_addr"] = o.Range6EndAddress6Addr
	}
	if !IsNil(o.Range6FailoverName) {
		toSerialize["range6_failover_name"] = o.Range6FailoverName
	}
	if !IsNil(o.Range6Id) {
		toSerialize["range6_id"] = o.Range6Id
	}
	if !IsNil(o.Range6StartAddress6Addr) {
		toSerialize["range6_start_address6_addr"] = o.Range6StartAddress6Addr
	}
	if !IsNil(o.Scope6ClassName) {
		toSerialize["scope6_class_name"] = o.Scope6ClassName
	}
	if !IsNil(o.Scope6Id) {
		toSerialize["scope6_id"] = o.Scope6Id
	}
	if !IsNil(o.Scope6Name) {
		toSerialize["scope6_name"] = o.Scope6Name
	}
	if !IsNil(o.Scope6Prefix) {
		toSerialize["scope6_prefix"] = o.Scope6Prefix
	}
	if !IsNil(o.Scope6Size) {
		toSerialize["scope6_size"] = o.Scope6Size
	}
	if !IsNil(o.Scope6StartAddress6Addr) {
		toSerialize["scope6_start_address6_addr"] = o.Scope6StartAddress6Addr
	}
	if !IsNil(o.Sharednetwork6Id) {
		toSerialize["sharednetwork6_id"] = o.Sharednetwork6Id
	}
	if !IsNil(o.Sharednetwork6Name) {
		toSerialize["sharednetwork6_name"] = o.Sharednetwork6Name
	}
	if !IsNil(o.Server6Hostaddr) {
		toSerialize["server6_hostaddr"] = o.Server6Hostaddr
	}
	if !IsNil(o.Server6Addr6) {
		toSerialize["server6_addr6"] = o.Server6Addr6
	}
	if !IsNil(o.Server6Addr) {
		toSerialize["server6_addr"] = o.Server6Addr
	}
	if !IsNil(o.Lease6MacVendor) {
		toSerialize["lease6_mac_vendor"] = o.Lease6MacVendor
	}
	if !IsNil(o.Lease6Multistatus) {
		toSerialize["lease6_multistatus"] = o.Lease6Multistatus
	}
	if !IsNil(o.Lease6Percent) {
		toSerialize["lease6_percent"] = o.Lease6Percent
	}
	if !IsNil(o.Lease6TimeToExpire) {
		toSerialize["lease6_time_to_expire"] = o.Lease6TimeToExpire
	}
	if !IsNil(o.SmartParentId) {
		toSerialize["smart_parent_id"] = o.SmartParentId
	}
	if !IsNil(o.SmartParentName) {
		toSerialize["smart_parent_name"] = o.SmartParentName
	}
	return toSerialize, nil
}

type NullableDataInnerDhcpLease6Data struct {
	value *DataInnerDhcpLease6Data
	isSet bool
}

func (v NullableDataInnerDhcpLease6Data) Get() *DataInnerDhcpLease6Data {
	return v.value
}

func (v *NullableDataInnerDhcpLease6Data) Set(val *DataInnerDhcpLease6Data) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerDhcpLease6Data) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerDhcpLease6Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerDhcpLease6Data(val *DataInnerDhcpLease6Data) *NullableDataInnerDhcpLease6Data {
	return &NullableDataInnerDhcpLease6Data{value: val, isSet: true}
}

func (v NullableDataInnerDhcpLease6Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerDhcpLease6Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
