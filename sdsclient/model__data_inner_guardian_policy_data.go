/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerGuardianPolicyData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerGuardianPolicyData{}

// DataInnerGuardianPolicyData struct for DataInnerGuardianPolicyData
type DataInnerGuardianPolicyData struct {
	// The delay of creation/deletion status. <b>1</b> indicates that the object is not created/deleted yet.
	PolicyDelayedTime *string `json:"policy_delayed_time,omitempty"`
	// The database identifier (ID) of the Guardian server associated with the policy. It is only returned for deployed policies.
	ServerId *string `json:"server_id,omitempty"`
	// The name of the Guardian server associated with the policy. It is only returned for deployed policies.
	ServerName *string `json:"server_name,omitempty"`
	// The description of the policy.
	PolicyDescription *string `json:"policy_description,omitempty"`
	// The database identifier (ID) of the policy.
	PolicyId *string `json:"policy_id,omitempty"`
	// The name of the policy.
	PolicyName *string `json:"policy_name,omitempty"`
	// The read only status of the policy. If set to <b>1</b>, the policy cannot be edited.
	PolicyReadonly *string `json:"policy_readonly,omitempty"`
	// The database identifier (ID) of the policy. It is only returned for deployed policies.
	ParentPolicyId *string `json:"parent_policy_id,omitempty"`
}

// NewDataInnerGuardianPolicyData instantiates a new DataInnerGuardianPolicyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerGuardianPolicyData() *DataInnerGuardianPolicyData {
	this := DataInnerGuardianPolicyData{}
	return &this
}

// NewDataInnerGuardianPolicyDataWithDefaults instantiates a new DataInnerGuardianPolicyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerGuardianPolicyDataWithDefaults() *DataInnerGuardianPolicyData {
	this := DataInnerGuardianPolicyData{}
	return &this
}

// GetPolicyDelayedTime returns the PolicyDelayedTime field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetPolicyDelayedTime() string {
	if o == nil || IsNil(o.PolicyDelayedTime) {
		var ret string
		return ret
	}
	return *o.PolicyDelayedTime
}

// GetPolicyDelayedTimeOk returns a tuple with the PolicyDelayedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetPolicyDelayedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyDelayedTime) {
		return nil, false
	}
	return o.PolicyDelayedTime, true
}

// HasPolicyDelayedTime returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasPolicyDelayedTime() bool {
	if o != nil && !IsNil(o.PolicyDelayedTime) {
		return true
	}

	return false
}

// SetPolicyDelayedTime gets a reference to the given string and assigns it to the PolicyDelayedTime field.
func (o *DataInnerGuardianPolicyData) SetPolicyDelayedTime(v string) {
	o.PolicyDelayedTime = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *DataInnerGuardianPolicyData) SetServerId(v string) {
	o.ServerId = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *DataInnerGuardianPolicyData) SetServerName(v string) {
	o.ServerName = &v
}

// GetPolicyDescription returns the PolicyDescription field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetPolicyDescription() string {
	if o == nil || IsNil(o.PolicyDescription) {
		var ret string
		return ret
	}
	return *o.PolicyDescription
}

// GetPolicyDescriptionOk returns a tuple with the PolicyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetPolicyDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyDescription) {
		return nil, false
	}
	return o.PolicyDescription, true
}

// HasPolicyDescription returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasPolicyDescription() bool {
	if o != nil && !IsNil(o.PolicyDescription) {
		return true
	}

	return false
}

// SetPolicyDescription gets a reference to the given string and assigns it to the PolicyDescription field.
func (o *DataInnerGuardianPolicyData) SetPolicyDescription(v string) {
	o.PolicyDescription = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *DataInnerGuardianPolicyData) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *DataInnerGuardianPolicyData) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyReadonly returns the PolicyReadonly field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetPolicyReadonly() string {
	if o == nil || IsNil(o.PolicyReadonly) {
		var ret string
		return ret
	}
	return *o.PolicyReadonly
}

// GetPolicyReadonlyOk returns a tuple with the PolicyReadonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetPolicyReadonlyOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyReadonly) {
		return nil, false
	}
	return o.PolicyReadonly, true
}

// HasPolicyReadonly returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasPolicyReadonly() bool {
	if o != nil && !IsNil(o.PolicyReadonly) {
		return true
	}

	return false
}

// SetPolicyReadonly gets a reference to the given string and assigns it to the PolicyReadonly field.
func (o *DataInnerGuardianPolicyData) SetPolicyReadonly(v string) {
	o.PolicyReadonly = &v
}

// GetParentPolicyId returns the ParentPolicyId field value if set, zero value otherwise.
func (o *DataInnerGuardianPolicyData) GetParentPolicyId() string {
	if o == nil || IsNil(o.ParentPolicyId) {
		var ret string
		return ret
	}
	return *o.ParentPolicyId
}

// GetParentPolicyIdOk returns a tuple with the ParentPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerGuardianPolicyData) GetParentPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPolicyId) {
		return nil, false
	}
	return o.ParentPolicyId, true
}

// HasParentPolicyId returns a boolean if a field has been set.
func (o *DataInnerGuardianPolicyData) HasParentPolicyId() bool {
	if o != nil && !IsNil(o.ParentPolicyId) {
		return true
	}

	return false
}

// SetParentPolicyId gets a reference to the given string and assigns it to the ParentPolicyId field.
func (o *DataInnerGuardianPolicyData) SetParentPolicyId(v string) {
	o.ParentPolicyId = &v
}

func (o DataInnerGuardianPolicyData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerGuardianPolicyData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyDelayedTime) {
		toSerialize["policy_delayed_time"] = o.PolicyDelayedTime
	}
	if !IsNil(o.ServerId) {
		toSerialize["server_id"] = o.ServerId
	}
	if !IsNil(o.ServerName) {
		toSerialize["server_name"] = o.ServerName
	}
	if !IsNil(o.PolicyDescription) {
		toSerialize["policy_description"] = o.PolicyDescription
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policy_name"] = o.PolicyName
	}
	if !IsNil(o.PolicyReadonly) {
		toSerialize["policy_readonly"] = o.PolicyReadonly
	}
	if !IsNil(o.ParentPolicyId) {
		toSerialize["parent_policy_id"] = o.ParentPolicyId
	}
	return toSerialize, nil
}

type NullableDataInnerGuardianPolicyData struct {
	value *DataInnerGuardianPolicyData
	isSet bool
}

func (v NullableDataInnerGuardianPolicyData) Get() *DataInnerGuardianPolicyData {
	return v.value
}

func (v *NullableDataInnerGuardianPolicyData) Set(val *DataInnerGuardianPolicyData) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerGuardianPolicyData) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerGuardianPolicyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerGuardianPolicyData(val *DataInnerGuardianPolicyData) *NullableDataInnerGuardianPolicyData {
	return &NullableDataInnerGuardianPolicyData{value: val, isSet: true}
}

func (v NullableDataInnerGuardianPolicyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerGuardianPolicyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
