/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// AppApplicationDataData struct for AppApplicationDataData
type AppApplicationDataData struct {
	// The name of the class applied to the object.
	ApplicationClassName *string `json:"application_class_name,omitempty"`
	// #general.output.class_parameters#
	ApplicationClassParameters *[]ApiClassParameterOutputEntry `json:"application_class_parameters,omitempty"`
	// The FQDN of the application.
	ApplicationFqdn *string `json:"application_fqdn,omitempty"`
	// The database identifier (ID) of the GSLB server associated with the application. It is only returned for deployed applications.
	GslbserverId *string `json:"gslbserver_id,omitempty"`
	// The name of all the GSLB servers associated with the application. It lists the name of each server separated by a comma.
	GslbserverList *string `json:"gslbserver_list,omitempty"`
	// The name of the GSLB server associated with the application. It is only returned for deployed applications.
	GslbserverName *string `json:"gslbserver_name,omitempty"`
	// The status of the GSLB server associated with the application, either OK (<b>1</b>), GSLB Stopped (<b>2</b>), GSLB Invalid Credentials (<b>4</b>) or GSLB Timeout (<b>5</b>). It is only returned for deployed applications.
	GslbserverStatus *string `json:"gslbserver_status,omitempty"`
	// The database identifier (ID) of the application.
	ApplicationId *string `json:"application_id,omitempty"`
	// The number of nodes of the application that are <b>Inactive</b> (down).
	ApplicationInactiveNodes *string `json:"application_inactive_nodes,omitempty"`
	// The name of the application.
	ApplicationName *string `json:"application_name,omitempty"`
	// The number of nodes of the application.
	ApplicationTotalNodes *string `json:"application_total_nodes,omitempty"`
	// The delay of creation/deletion status. <b>1</b> indicates that the object is not created/deleted yet.
	ApplicationDelayedTime *string `json:"application_delayed_time,omitempty"`
	// The type of DNS server associated with the application. It is only returned for deployed applications.
	GslbserverType *string `json:"gslbserver_type,omitempty"`
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	ApplicationMultistatus *string `json:"application_multistatus,omitempty"`
	// The database identifier (ID) of the application. It is only returned for deployed applications.
	ParentApplicationId *string `json:"parent_application_id,omitempty"`
	// The name of the application. It is only returned for deployed applications.
	ParentApplicationName *string `json:"parent_application_name,omitempty"`
}

// NewAppApplicationDataData instantiates a new AppApplicationDataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppApplicationDataData() *AppApplicationDataData {
	this := AppApplicationDataData{}
	return &this
}

// NewAppApplicationDataDataWithDefaults instantiates a new AppApplicationDataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppApplicationDataDataWithDefaults() *AppApplicationDataData {
	this := AppApplicationDataData{}
	return &this
}

// GetApplicationClassName returns the ApplicationClassName field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationClassName() string {
	if o == nil || o.ApplicationClassName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationClassName
}

// GetApplicationClassNameOk returns a tuple with the ApplicationClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationClassNameOk() (*string, bool) {
	if o == nil || o.ApplicationClassName == nil {
		return nil, false
	}
	return o.ApplicationClassName, true
}

// HasApplicationClassName returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationClassName() bool {
	if o != nil && o.ApplicationClassName != nil {
		return true
	}

	return false
}

// SetApplicationClassName gets a reference to the given string and assigns it to the ApplicationClassName field.
func (o *AppApplicationDataData) SetApplicationClassName(v string) {
	o.ApplicationClassName = &v
}

// GetApplicationClassParameters returns the ApplicationClassParameters field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || o.ApplicationClassParameters == nil {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return *o.ApplicationClassParameters
}

// GetApplicationClassParametersOk returns a tuple with the ApplicationClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationClassParametersOk() (*[]ApiClassParameterOutputEntry, bool) {
	if o == nil || o.ApplicationClassParameters == nil {
		return nil, false
	}
	return o.ApplicationClassParameters, true
}

// HasApplicationClassParameters returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationClassParameters() bool {
	if o != nil && o.ApplicationClassParameters != nil {
		return true
	}

	return false
}

// SetApplicationClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the ApplicationClassParameters field.
func (o *AppApplicationDataData) SetApplicationClassParameters(v []ApiClassParameterOutputEntry) {
	o.ApplicationClassParameters = &v
}

// GetApplicationFqdn returns the ApplicationFqdn field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationFqdn() string {
	if o == nil || o.ApplicationFqdn == nil {
		var ret string
		return ret
	}
	return *o.ApplicationFqdn
}

// GetApplicationFqdnOk returns a tuple with the ApplicationFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationFqdnOk() (*string, bool) {
	if o == nil || o.ApplicationFqdn == nil {
		return nil, false
	}
	return o.ApplicationFqdn, true
}

// HasApplicationFqdn returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationFqdn() bool {
	if o != nil && o.ApplicationFqdn != nil {
		return true
	}

	return false
}

// SetApplicationFqdn gets a reference to the given string and assigns it to the ApplicationFqdn field.
func (o *AppApplicationDataData) SetApplicationFqdn(v string) {
	o.ApplicationFqdn = &v
}

// GetGslbserverId returns the GslbserverId field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetGslbserverId() string {
	if o == nil || o.GslbserverId == nil {
		var ret string
		return ret
	}
	return *o.GslbserverId
}

// GetGslbserverIdOk returns a tuple with the GslbserverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetGslbserverIdOk() (*string, bool) {
	if o == nil || o.GslbserverId == nil {
		return nil, false
	}
	return o.GslbserverId, true
}

// HasGslbserverId returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasGslbserverId() bool {
	if o != nil && o.GslbserverId != nil {
		return true
	}

	return false
}

// SetGslbserverId gets a reference to the given string and assigns it to the GslbserverId field.
func (o *AppApplicationDataData) SetGslbserverId(v string) {
	o.GslbserverId = &v
}

// GetGslbserverList returns the GslbserverList field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetGslbserverList() string {
	if o == nil || o.GslbserverList == nil {
		var ret string
		return ret
	}
	return *o.GslbserverList
}

// GetGslbserverListOk returns a tuple with the GslbserverList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetGslbserverListOk() (*string, bool) {
	if o == nil || o.GslbserverList == nil {
		return nil, false
	}
	return o.GslbserverList, true
}

// HasGslbserverList returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasGslbserverList() bool {
	if o != nil && o.GslbserverList != nil {
		return true
	}

	return false
}

// SetGslbserverList gets a reference to the given string and assigns it to the GslbserverList field.
func (o *AppApplicationDataData) SetGslbserverList(v string) {
	o.GslbserverList = &v
}

// GetGslbserverName returns the GslbserverName field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetGslbserverName() string {
	if o == nil || o.GslbserverName == nil {
		var ret string
		return ret
	}
	return *o.GslbserverName
}

// GetGslbserverNameOk returns a tuple with the GslbserverName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetGslbserverNameOk() (*string, bool) {
	if o == nil || o.GslbserverName == nil {
		return nil, false
	}
	return o.GslbserverName, true
}

// HasGslbserverName returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasGslbserverName() bool {
	if o != nil && o.GslbserverName != nil {
		return true
	}

	return false
}

// SetGslbserverName gets a reference to the given string and assigns it to the GslbserverName field.
func (o *AppApplicationDataData) SetGslbserverName(v string) {
	o.GslbserverName = &v
}

// GetGslbserverStatus returns the GslbserverStatus field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetGslbserverStatus() string {
	if o == nil || o.GslbserverStatus == nil {
		var ret string
		return ret
	}
	return *o.GslbserverStatus
}

// GetGslbserverStatusOk returns a tuple with the GslbserverStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetGslbserverStatusOk() (*string, bool) {
	if o == nil || o.GslbserverStatus == nil {
		return nil, false
	}
	return o.GslbserverStatus, true
}

// HasGslbserverStatus returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasGslbserverStatus() bool {
	if o != nil && o.GslbserverStatus != nil {
		return true
	}

	return false
}

// SetGslbserverStatus gets a reference to the given string and assigns it to the GslbserverStatus field.
func (o *AppApplicationDataData) SetGslbserverStatus(v string) {
	o.GslbserverStatus = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *AppApplicationDataData) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationInactiveNodes returns the ApplicationInactiveNodes field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationInactiveNodes() string {
	if o == nil || o.ApplicationInactiveNodes == nil {
		var ret string
		return ret
	}
	return *o.ApplicationInactiveNodes
}

// GetApplicationInactiveNodesOk returns a tuple with the ApplicationInactiveNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationInactiveNodesOk() (*string, bool) {
	if o == nil || o.ApplicationInactiveNodes == nil {
		return nil, false
	}
	return o.ApplicationInactiveNodes, true
}

// HasApplicationInactiveNodes returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationInactiveNodes() bool {
	if o != nil && o.ApplicationInactiveNodes != nil {
		return true
	}

	return false
}

// SetApplicationInactiveNodes gets a reference to the given string and assigns it to the ApplicationInactiveNodes field.
func (o *AppApplicationDataData) SetApplicationInactiveNodes(v string) {
	o.ApplicationInactiveNodes = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *AppApplicationDataData) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetApplicationTotalNodes returns the ApplicationTotalNodes field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationTotalNodes() string {
	if o == nil || o.ApplicationTotalNodes == nil {
		var ret string
		return ret
	}
	return *o.ApplicationTotalNodes
}

// GetApplicationTotalNodesOk returns a tuple with the ApplicationTotalNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationTotalNodesOk() (*string, bool) {
	if o == nil || o.ApplicationTotalNodes == nil {
		return nil, false
	}
	return o.ApplicationTotalNodes, true
}

// HasApplicationTotalNodes returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationTotalNodes() bool {
	if o != nil && o.ApplicationTotalNodes != nil {
		return true
	}

	return false
}

// SetApplicationTotalNodes gets a reference to the given string and assigns it to the ApplicationTotalNodes field.
func (o *AppApplicationDataData) SetApplicationTotalNodes(v string) {
	o.ApplicationTotalNodes = &v
}

// GetApplicationDelayedTime returns the ApplicationDelayedTime field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationDelayedTime() string {
	if o == nil || o.ApplicationDelayedTime == nil {
		var ret string
		return ret
	}
	return *o.ApplicationDelayedTime
}

// GetApplicationDelayedTimeOk returns a tuple with the ApplicationDelayedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationDelayedTimeOk() (*string, bool) {
	if o == nil || o.ApplicationDelayedTime == nil {
		return nil, false
	}
	return o.ApplicationDelayedTime, true
}

// HasApplicationDelayedTime returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationDelayedTime() bool {
	if o != nil && o.ApplicationDelayedTime != nil {
		return true
	}

	return false
}

// SetApplicationDelayedTime gets a reference to the given string and assigns it to the ApplicationDelayedTime field.
func (o *AppApplicationDataData) SetApplicationDelayedTime(v string) {
	o.ApplicationDelayedTime = &v
}

// GetGslbserverType returns the GslbserverType field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetGslbserverType() string {
	if o == nil || o.GslbserverType == nil {
		var ret string
		return ret
	}
	return *o.GslbserverType
}

// GetGslbserverTypeOk returns a tuple with the GslbserverType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetGslbserverTypeOk() (*string, bool) {
	if o == nil || o.GslbserverType == nil {
		return nil, false
	}
	return o.GslbserverType, true
}

// HasGslbserverType returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasGslbserverType() bool {
	if o != nil && o.GslbserverType != nil {
		return true
	}

	return false
}

// SetGslbserverType gets a reference to the given string and assigns it to the GslbserverType field.
func (o *AppApplicationDataData) SetGslbserverType(v string) {
	o.GslbserverType = &v
}

// GetApplicationMultistatus returns the ApplicationMultistatus field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetApplicationMultistatus() string {
	if o == nil || o.ApplicationMultistatus == nil {
		var ret string
		return ret
	}
	return *o.ApplicationMultistatus
}

// GetApplicationMultistatusOk returns a tuple with the ApplicationMultistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetApplicationMultistatusOk() (*string, bool) {
	if o == nil || o.ApplicationMultistatus == nil {
		return nil, false
	}
	return o.ApplicationMultistatus, true
}

// HasApplicationMultistatus returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasApplicationMultistatus() bool {
	if o != nil && o.ApplicationMultistatus != nil {
		return true
	}

	return false
}

// SetApplicationMultistatus gets a reference to the given string and assigns it to the ApplicationMultistatus field.
func (o *AppApplicationDataData) SetApplicationMultistatus(v string) {
	o.ApplicationMultistatus = &v
}

// GetParentApplicationId returns the ParentApplicationId field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetParentApplicationId() string {
	if o == nil || o.ParentApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ParentApplicationId
}

// GetParentApplicationIdOk returns a tuple with the ParentApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetParentApplicationIdOk() (*string, bool) {
	if o == nil || o.ParentApplicationId == nil {
		return nil, false
	}
	return o.ParentApplicationId, true
}

// HasParentApplicationId returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasParentApplicationId() bool {
	if o != nil && o.ParentApplicationId != nil {
		return true
	}

	return false
}

// SetParentApplicationId gets a reference to the given string and assigns it to the ParentApplicationId field.
func (o *AppApplicationDataData) SetParentApplicationId(v string) {
	o.ParentApplicationId = &v
}

// GetParentApplicationName returns the ParentApplicationName field value if set, zero value otherwise.
func (o *AppApplicationDataData) GetParentApplicationName() string {
	if o == nil || o.ParentApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ParentApplicationName
}

// GetParentApplicationNameOk returns a tuple with the ParentApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppApplicationDataData) GetParentApplicationNameOk() (*string, bool) {
	if o == nil || o.ParentApplicationName == nil {
		return nil, false
	}
	return o.ParentApplicationName, true
}

// HasParentApplicationName returns a boolean if a field has been set.
func (o *AppApplicationDataData) HasParentApplicationName() bool {
	if o != nil && o.ParentApplicationName != nil {
		return true
	}

	return false
}

// SetParentApplicationName gets a reference to the given string and assigns it to the ParentApplicationName field.
func (o *AppApplicationDataData) SetParentApplicationName(v string) {
	o.ParentApplicationName = &v
}

func (o AppApplicationDataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationClassName != nil {
		toSerialize["application_class_name"] = o.ApplicationClassName
	}
	if o.ApplicationClassParameters != nil {
		toSerialize["application_class_parameters"] = o.ApplicationClassParameters
	}
	if o.ApplicationFqdn != nil {
		toSerialize["application_fqdn"] = o.ApplicationFqdn
	}
	if o.GslbserverId != nil {
		toSerialize["gslbserver_id"] = o.GslbserverId
	}
	if o.GslbserverList != nil {
		toSerialize["gslbserver_list"] = o.GslbserverList
	}
	if o.GslbserverName != nil {
		toSerialize["gslbserver_name"] = o.GslbserverName
	}
	if o.GslbserverStatus != nil {
		toSerialize["gslbserver_status"] = o.GslbserverStatus
	}
	if o.ApplicationId != nil {
		toSerialize["application_id"] = o.ApplicationId
	}
	if o.ApplicationInactiveNodes != nil {
		toSerialize["application_inactive_nodes"] = o.ApplicationInactiveNodes
	}
	if o.ApplicationName != nil {
		toSerialize["application_name"] = o.ApplicationName
	}
	if o.ApplicationTotalNodes != nil {
		toSerialize["application_total_nodes"] = o.ApplicationTotalNodes
	}
	if o.ApplicationDelayedTime != nil {
		toSerialize["application_delayed_time"] = o.ApplicationDelayedTime
	}
	if o.GslbserverType != nil {
		toSerialize["gslbserver_type"] = o.GslbserverType
	}
	if o.ApplicationMultistatus != nil {
		toSerialize["application_multistatus"] = o.ApplicationMultistatus
	}
	if o.ParentApplicationId != nil {
		toSerialize["parent_application_id"] = o.ParentApplicationId
	}
	if o.ParentApplicationName != nil {
		toSerialize["parent_application_name"] = o.ParentApplicationName
	}
	return json.Marshal(toSerialize)
}

type NullableAppApplicationDataData struct {
	value *AppApplicationDataData
	isSet bool
}

func (v NullableAppApplicationDataData) Get() *AppApplicationDataData {
	return v.value
}

func (v *NullableAppApplicationDataData) Set(val *AppApplicationDataData) {
	v.value = val
	v.isSet = true
}

func (v NullableAppApplicationDataData) IsSet() bool {
	return v.isSet
}

func (v *NullableAppApplicationDataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppApplicationDataData(val *AppApplicationDataData) *NullableAppApplicationDataData {
	return &NullableAppApplicationDataData{value: val, isSet: true}
}

func (v NullableAppApplicationDataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppApplicationDataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


