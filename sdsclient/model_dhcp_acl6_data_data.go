/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// DhcpAcl6DataData struct for DhcpAcl6DataData
type DhcpAcl6DataData struct {
	// todo(here) :dhcp.acl6.list.output.acl6_delayed_time. : 
	Acl6DelayedTime *string `json:"acl6_delayed_time,omitempty"`
	// todo(here) :dhcp.acl6.list.output.server6_id. : 
	Server6Id *string `json:"server6_id,omitempty"`
	// todo(here) :dhcp.acl6.list.output.server6_name. : 
	Server6Name *string `json:"server6_name,omitempty"`
	// todo(here) :dhcp.acl6.list.output.server6_type. : 
	Server6Type *string `json:"server6_type,omitempty"`
	// todo(here) :dhcp.acl6.list.output.acl6_id. : 
	Acl6Id *string `json:"acl6_id,omitempty"`
	// todo(here) :dhcp.acl6.list.output.acl6_match. : 
	Acl6Match *string `json:"acl6_match,omitempty"`
	// todo(here) :dhcp.acl6.list.output.acl6_name. : 
	Acl6Name *string `json:"acl6_name,omitempty"`
	// todo(here) :dhcp.acl6.list.output.acl6_spawnwith. : 
	Acl6Spawnwith *string `json:"acl6_spawnwith,omitempty"`
	// todo(here) :dhcp.acl6.list.output.acl6_statement. : 
	Acl6Statement *string `json:"acl6_statement,omitempty"`
	// todo(here) :dhcp.acl6.list.output.smart_parent_id. : 
	SmartParentId *string `json:"smart_parent_id,omitempty"`
}

// NewDhcpAcl6DataData instantiates a new DhcpAcl6DataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpAcl6DataData() *DhcpAcl6DataData {
	this := DhcpAcl6DataData{}
	return &this
}

// NewDhcpAcl6DataDataWithDefaults instantiates a new DhcpAcl6DataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpAcl6DataDataWithDefaults() *DhcpAcl6DataData {
	this := DhcpAcl6DataData{}
	return &this
}

// GetAcl6DelayedTime returns the Acl6DelayedTime field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetAcl6DelayedTime() string {
	if o == nil || o.Acl6DelayedTime == nil {
		var ret string
		return ret
	}
	return *o.Acl6DelayedTime
}

// GetAcl6DelayedTimeOk returns a tuple with the Acl6DelayedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetAcl6DelayedTimeOk() (*string, bool) {
	if o == nil || o.Acl6DelayedTime == nil {
		return nil, false
	}
	return o.Acl6DelayedTime, true
}

// HasAcl6DelayedTime returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasAcl6DelayedTime() bool {
	if o != nil && o.Acl6DelayedTime != nil {
		return true
	}

	return false
}

// SetAcl6DelayedTime gets a reference to the given string and assigns it to the Acl6DelayedTime field.
func (o *DhcpAcl6DataData) SetAcl6DelayedTime(v string) {
	o.Acl6DelayedTime = &v
}

// GetServer6Id returns the Server6Id field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetServer6Id() string {
	if o == nil || o.Server6Id == nil {
		var ret string
		return ret
	}
	return *o.Server6Id
}

// GetServer6IdOk returns a tuple with the Server6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetServer6IdOk() (*string, bool) {
	if o == nil || o.Server6Id == nil {
		return nil, false
	}
	return o.Server6Id, true
}

// HasServer6Id returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasServer6Id() bool {
	if o != nil && o.Server6Id != nil {
		return true
	}

	return false
}

// SetServer6Id gets a reference to the given string and assigns it to the Server6Id field.
func (o *DhcpAcl6DataData) SetServer6Id(v string) {
	o.Server6Id = &v
}

// GetServer6Name returns the Server6Name field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetServer6Name() string {
	if o == nil || o.Server6Name == nil {
		var ret string
		return ret
	}
	return *o.Server6Name
}

// GetServer6NameOk returns a tuple with the Server6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetServer6NameOk() (*string, bool) {
	if o == nil || o.Server6Name == nil {
		return nil, false
	}
	return o.Server6Name, true
}

// HasServer6Name returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasServer6Name() bool {
	if o != nil && o.Server6Name != nil {
		return true
	}

	return false
}

// SetServer6Name gets a reference to the given string and assigns it to the Server6Name field.
func (o *DhcpAcl6DataData) SetServer6Name(v string) {
	o.Server6Name = &v
}

// GetServer6Type returns the Server6Type field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetServer6Type() string {
	if o == nil || o.Server6Type == nil {
		var ret string
		return ret
	}
	return *o.Server6Type
}

// GetServer6TypeOk returns a tuple with the Server6Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetServer6TypeOk() (*string, bool) {
	if o == nil || o.Server6Type == nil {
		return nil, false
	}
	return o.Server6Type, true
}

// HasServer6Type returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasServer6Type() bool {
	if o != nil && o.Server6Type != nil {
		return true
	}

	return false
}

// SetServer6Type gets a reference to the given string and assigns it to the Server6Type field.
func (o *DhcpAcl6DataData) SetServer6Type(v string) {
	o.Server6Type = &v
}

// GetAcl6Id returns the Acl6Id field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetAcl6Id() string {
	if o == nil || o.Acl6Id == nil {
		var ret string
		return ret
	}
	return *o.Acl6Id
}

// GetAcl6IdOk returns a tuple with the Acl6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetAcl6IdOk() (*string, bool) {
	if o == nil || o.Acl6Id == nil {
		return nil, false
	}
	return o.Acl6Id, true
}

// HasAcl6Id returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasAcl6Id() bool {
	if o != nil && o.Acl6Id != nil {
		return true
	}

	return false
}

// SetAcl6Id gets a reference to the given string and assigns it to the Acl6Id field.
func (o *DhcpAcl6DataData) SetAcl6Id(v string) {
	o.Acl6Id = &v
}

// GetAcl6Match returns the Acl6Match field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetAcl6Match() string {
	if o == nil || o.Acl6Match == nil {
		var ret string
		return ret
	}
	return *o.Acl6Match
}

// GetAcl6MatchOk returns a tuple with the Acl6Match field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetAcl6MatchOk() (*string, bool) {
	if o == nil || o.Acl6Match == nil {
		return nil, false
	}
	return o.Acl6Match, true
}

// HasAcl6Match returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasAcl6Match() bool {
	if o != nil && o.Acl6Match != nil {
		return true
	}

	return false
}

// SetAcl6Match gets a reference to the given string and assigns it to the Acl6Match field.
func (o *DhcpAcl6DataData) SetAcl6Match(v string) {
	o.Acl6Match = &v
}

// GetAcl6Name returns the Acl6Name field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetAcl6Name() string {
	if o == nil || o.Acl6Name == nil {
		var ret string
		return ret
	}
	return *o.Acl6Name
}

// GetAcl6NameOk returns a tuple with the Acl6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetAcl6NameOk() (*string, bool) {
	if o == nil || o.Acl6Name == nil {
		return nil, false
	}
	return o.Acl6Name, true
}

// HasAcl6Name returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasAcl6Name() bool {
	if o != nil && o.Acl6Name != nil {
		return true
	}

	return false
}

// SetAcl6Name gets a reference to the given string and assigns it to the Acl6Name field.
func (o *DhcpAcl6DataData) SetAcl6Name(v string) {
	o.Acl6Name = &v
}

// GetAcl6Spawnwith returns the Acl6Spawnwith field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetAcl6Spawnwith() string {
	if o == nil || o.Acl6Spawnwith == nil {
		var ret string
		return ret
	}
	return *o.Acl6Spawnwith
}

// GetAcl6SpawnwithOk returns a tuple with the Acl6Spawnwith field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetAcl6SpawnwithOk() (*string, bool) {
	if o == nil || o.Acl6Spawnwith == nil {
		return nil, false
	}
	return o.Acl6Spawnwith, true
}

// HasAcl6Spawnwith returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasAcl6Spawnwith() bool {
	if o != nil && o.Acl6Spawnwith != nil {
		return true
	}

	return false
}

// SetAcl6Spawnwith gets a reference to the given string and assigns it to the Acl6Spawnwith field.
func (o *DhcpAcl6DataData) SetAcl6Spawnwith(v string) {
	o.Acl6Spawnwith = &v
}

// GetAcl6Statement returns the Acl6Statement field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetAcl6Statement() string {
	if o == nil || o.Acl6Statement == nil {
		var ret string
		return ret
	}
	return *o.Acl6Statement
}

// GetAcl6StatementOk returns a tuple with the Acl6Statement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetAcl6StatementOk() (*string, bool) {
	if o == nil || o.Acl6Statement == nil {
		return nil, false
	}
	return o.Acl6Statement, true
}

// HasAcl6Statement returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasAcl6Statement() bool {
	if o != nil && o.Acl6Statement != nil {
		return true
	}

	return false
}

// SetAcl6Statement gets a reference to the given string and assigns it to the Acl6Statement field.
func (o *DhcpAcl6DataData) SetAcl6Statement(v string) {
	o.Acl6Statement = &v
}

// GetSmartParentId returns the SmartParentId field value if set, zero value otherwise.
func (o *DhcpAcl6DataData) GetSmartParentId() string {
	if o == nil || o.SmartParentId == nil {
		var ret string
		return ret
	}
	return *o.SmartParentId
}

// GetSmartParentIdOk returns a tuple with the SmartParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpAcl6DataData) GetSmartParentIdOk() (*string, bool) {
	if o == nil || o.SmartParentId == nil {
		return nil, false
	}
	return o.SmartParentId, true
}

// HasSmartParentId returns a boolean if a field has been set.
func (o *DhcpAcl6DataData) HasSmartParentId() bool {
	if o != nil && o.SmartParentId != nil {
		return true
	}

	return false
}

// SetSmartParentId gets a reference to the given string and assigns it to the SmartParentId field.
func (o *DhcpAcl6DataData) SetSmartParentId(v string) {
	o.SmartParentId = &v
}

func (o DhcpAcl6DataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Acl6DelayedTime != nil {
		toSerialize["acl6_delayed_time"] = o.Acl6DelayedTime
	}
	if o.Server6Id != nil {
		toSerialize["server6_id"] = o.Server6Id
	}
	if o.Server6Name != nil {
		toSerialize["server6_name"] = o.Server6Name
	}
	if o.Server6Type != nil {
		toSerialize["server6_type"] = o.Server6Type
	}
	if o.Acl6Id != nil {
		toSerialize["acl6_id"] = o.Acl6Id
	}
	if o.Acl6Match != nil {
		toSerialize["acl6_match"] = o.Acl6Match
	}
	if o.Acl6Name != nil {
		toSerialize["acl6_name"] = o.Acl6Name
	}
	if o.Acl6Spawnwith != nil {
		toSerialize["acl6_spawnwith"] = o.Acl6Spawnwith
	}
	if o.Acl6Statement != nil {
		toSerialize["acl6_statement"] = o.Acl6Statement
	}
	if o.SmartParentId != nil {
		toSerialize["smart_parent_id"] = o.SmartParentId
	}
	return json.Marshal(toSerialize)
}

type NullableDhcpAcl6DataData struct {
	value *DhcpAcl6DataData
	isSet bool
}

func (v NullableDhcpAcl6DataData) Get() *DhcpAcl6DataData {
	return v.value
}

func (v *NullableDhcpAcl6DataData) Set(val *DhcpAcl6DataData) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpAcl6DataData) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpAcl6DataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpAcl6DataData(val *DhcpAcl6DataData) *NullableDhcpAcl6DataData {
	return &NullableDhcpAcl6DataData{value: val, isSet: true}
}

func (v NullableDhcpAcl6DataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpAcl6DataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


