/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// AppPoolDataData struct for AppPoolDataData
type AppPoolDataData struct {
	// The FQDN of the application the object belongs to.
	ApplicationFqdn *string `json:"application_fqdn,omitempty"`
	// The database identifier (ID) of the GSLB server associated with the application the object belongs to. It is only returned for deployed applications.
	GslbserverId *string `json:"gslbserver_id,omitempty"`
	// The name of the GSLB server associated with the application the object belongs to. It is only returned for deployed applications.
	GslbserverName *string `json:"gslbserver_name,omitempty"`
	// The database identifier (ID) of the application the object belongs to.
	ApplicationId *string `json:"application_id,omitempty"`
	// The name of the application the object belongs to.
	ApplicationName *string `json:"application_name,omitempty"`
	// The session duration, in seconds. It is only returned if the parameter <b>affinity_state</b> is set to <b>1</b>.
	PoolAffinitySessionTime *string `json:"pool_affinity_session_time,omitempty"`
	// The session affinity activation status.
	PoolAffinityState *string `json:"pool_affinity_state,omitempty"`
	// The maximum number of active nodes with the lowest latency that must answer the queries made to the application FQDN. It is only returned if the parameter <b>apppool_lb_mode</b> is set to <b>latency</b>.
	PoolBestActiveNodes *string `json:"pool_best_active_nodes,omitempty"`
	// The database identifier (ID) of the pool.
	PoolId *string `json:"pool_id,omitempty"`
	// The number nodes of the pool that are <b>Inactive</b> (down).
	PoolInactiveNodes *string `json:"pool_inactive_nodes,omitempty"`
	// The load-balancing mode of the pool, either <b>weighted</b>, <b>round-robin</b> or <b>latency</b>.
	PoolLbMode *string `json:"pool_lb_mode,omitempty"`
	// The name of the pool.
	PoolName *string `json:"pool_name,omitempty"`
	// The number of nodes of the pool.
	PoolTotalNodes *string `json:"pool_total_nodes,omitempty"`
	// The type of the pool, <b>ipv4</b> or <b>ipv6</b>.
	PoolType *string `json:"pool_type,omitempty"`
	// Not documented. Internal use.
	PoolWeight *string `json:"pool_weight,omitempty"`
	// The delay of creation/deletion status. <b>1</b> indicates that the object is not created/deleted yet.
	PoolDelayedTime *string `json:"pool_delayed_time,omitempty"`
	// The type of DNS server associated with the application the object belongs to. It is only returned for deployed applications.
	GslbserverType *string `json:"gslbserver_type,omitempty"`
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	PoolMultistatus *string `json:"pool_multistatus,omitempty"`
	// The database identifier (ID) of the application the object belongs to. It is only returned for deployed applications.
	ParentApplicationId *string `json:"parent_application_id,omitempty"`
	// The load-balancing mode of the pool, as displayed in the GUI.
	TranslatedPoolLbMode *string `json:"translated_pool_lb_mode,omitempty"`
}

// NewAppPoolDataData instantiates a new AppPoolDataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPoolDataData() *AppPoolDataData {
	this := AppPoolDataData{}
	return &this
}

// NewAppPoolDataDataWithDefaults instantiates a new AppPoolDataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPoolDataDataWithDefaults() *AppPoolDataData {
	this := AppPoolDataData{}
	return &this
}

// GetApplicationFqdn returns the ApplicationFqdn field value if set, zero value otherwise.
func (o *AppPoolDataData) GetApplicationFqdn() string {
	if o == nil || o.ApplicationFqdn == nil {
		var ret string
		return ret
	}
	return *o.ApplicationFqdn
}

// GetApplicationFqdnOk returns a tuple with the ApplicationFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetApplicationFqdnOk() (*string, bool) {
	if o == nil || o.ApplicationFqdn == nil {
		return nil, false
	}
	return o.ApplicationFqdn, true
}

// HasApplicationFqdn returns a boolean if a field has been set.
func (o *AppPoolDataData) HasApplicationFqdn() bool {
	if o != nil && o.ApplicationFqdn != nil {
		return true
	}

	return false
}

// SetApplicationFqdn gets a reference to the given string and assigns it to the ApplicationFqdn field.
func (o *AppPoolDataData) SetApplicationFqdn(v string) {
	o.ApplicationFqdn = &v
}

// GetGslbserverId returns the GslbserverId field value if set, zero value otherwise.
func (o *AppPoolDataData) GetGslbserverId() string {
	if o == nil || o.GslbserverId == nil {
		var ret string
		return ret
	}
	return *o.GslbserverId
}

// GetGslbserverIdOk returns a tuple with the GslbserverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetGslbserverIdOk() (*string, bool) {
	if o == nil || o.GslbserverId == nil {
		return nil, false
	}
	return o.GslbserverId, true
}

// HasGslbserverId returns a boolean if a field has been set.
func (o *AppPoolDataData) HasGslbserverId() bool {
	if o != nil && o.GslbserverId != nil {
		return true
	}

	return false
}

// SetGslbserverId gets a reference to the given string and assigns it to the GslbserverId field.
func (o *AppPoolDataData) SetGslbserverId(v string) {
	o.GslbserverId = &v
}

// GetGslbserverName returns the GslbserverName field value if set, zero value otherwise.
func (o *AppPoolDataData) GetGslbserverName() string {
	if o == nil || o.GslbserverName == nil {
		var ret string
		return ret
	}
	return *o.GslbserverName
}

// GetGslbserverNameOk returns a tuple with the GslbserverName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetGslbserverNameOk() (*string, bool) {
	if o == nil || o.GslbserverName == nil {
		return nil, false
	}
	return o.GslbserverName, true
}

// HasGslbserverName returns a boolean if a field has been set.
func (o *AppPoolDataData) HasGslbserverName() bool {
	if o != nil && o.GslbserverName != nil {
		return true
	}

	return false
}

// SetGslbserverName gets a reference to the given string and assigns it to the GslbserverName field.
func (o *AppPoolDataData) SetGslbserverName(v string) {
	o.GslbserverName = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *AppPoolDataData) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AppPoolDataData) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *AppPoolDataData) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *AppPoolDataData) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *AppPoolDataData) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *AppPoolDataData) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetPoolAffinitySessionTime returns the PoolAffinitySessionTime field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolAffinitySessionTime() string {
	if o == nil || o.PoolAffinitySessionTime == nil {
		var ret string
		return ret
	}
	return *o.PoolAffinitySessionTime
}

// GetPoolAffinitySessionTimeOk returns a tuple with the PoolAffinitySessionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolAffinitySessionTimeOk() (*string, bool) {
	if o == nil || o.PoolAffinitySessionTime == nil {
		return nil, false
	}
	return o.PoolAffinitySessionTime, true
}

// HasPoolAffinitySessionTime returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolAffinitySessionTime() bool {
	if o != nil && o.PoolAffinitySessionTime != nil {
		return true
	}

	return false
}

// SetPoolAffinitySessionTime gets a reference to the given string and assigns it to the PoolAffinitySessionTime field.
func (o *AppPoolDataData) SetPoolAffinitySessionTime(v string) {
	o.PoolAffinitySessionTime = &v
}

// GetPoolAffinityState returns the PoolAffinityState field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolAffinityState() string {
	if o == nil || o.PoolAffinityState == nil {
		var ret string
		return ret
	}
	return *o.PoolAffinityState
}

// GetPoolAffinityStateOk returns a tuple with the PoolAffinityState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolAffinityStateOk() (*string, bool) {
	if o == nil || o.PoolAffinityState == nil {
		return nil, false
	}
	return o.PoolAffinityState, true
}

// HasPoolAffinityState returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolAffinityState() bool {
	if o != nil && o.PoolAffinityState != nil {
		return true
	}

	return false
}

// SetPoolAffinityState gets a reference to the given string and assigns it to the PoolAffinityState field.
func (o *AppPoolDataData) SetPoolAffinityState(v string) {
	o.PoolAffinityState = &v
}

// GetPoolBestActiveNodes returns the PoolBestActiveNodes field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolBestActiveNodes() string {
	if o == nil || o.PoolBestActiveNodes == nil {
		var ret string
		return ret
	}
	return *o.PoolBestActiveNodes
}

// GetPoolBestActiveNodesOk returns a tuple with the PoolBestActiveNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolBestActiveNodesOk() (*string, bool) {
	if o == nil || o.PoolBestActiveNodes == nil {
		return nil, false
	}
	return o.PoolBestActiveNodes, true
}

// HasPoolBestActiveNodes returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolBestActiveNodes() bool {
	if o != nil && o.PoolBestActiveNodes != nil {
		return true
	}

	return false
}

// SetPoolBestActiveNodes gets a reference to the given string and assigns it to the PoolBestActiveNodes field.
func (o *AppPoolDataData) SetPoolBestActiveNodes(v string) {
	o.PoolBestActiveNodes = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolId() string {
	if o == nil || o.PoolId == nil {
		var ret string
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolIdOk() (*string, bool) {
	if o == nil || o.PoolId == nil {
		return nil, false
	}
	return o.PoolId, true
}

// HasPoolId returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolId() bool {
	if o != nil && o.PoolId != nil {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given string and assigns it to the PoolId field.
func (o *AppPoolDataData) SetPoolId(v string) {
	o.PoolId = &v
}

// GetPoolInactiveNodes returns the PoolInactiveNodes field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolInactiveNodes() string {
	if o == nil || o.PoolInactiveNodes == nil {
		var ret string
		return ret
	}
	return *o.PoolInactiveNodes
}

// GetPoolInactiveNodesOk returns a tuple with the PoolInactiveNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolInactiveNodesOk() (*string, bool) {
	if o == nil || o.PoolInactiveNodes == nil {
		return nil, false
	}
	return o.PoolInactiveNodes, true
}

// HasPoolInactiveNodes returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolInactiveNodes() bool {
	if o != nil && o.PoolInactiveNodes != nil {
		return true
	}

	return false
}

// SetPoolInactiveNodes gets a reference to the given string and assigns it to the PoolInactiveNodes field.
func (o *AppPoolDataData) SetPoolInactiveNodes(v string) {
	o.PoolInactiveNodes = &v
}

// GetPoolLbMode returns the PoolLbMode field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolLbMode() string {
	if o == nil || o.PoolLbMode == nil {
		var ret string
		return ret
	}
	return *o.PoolLbMode
}

// GetPoolLbModeOk returns a tuple with the PoolLbMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolLbModeOk() (*string, bool) {
	if o == nil || o.PoolLbMode == nil {
		return nil, false
	}
	return o.PoolLbMode, true
}

// HasPoolLbMode returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolLbMode() bool {
	if o != nil && o.PoolLbMode != nil {
		return true
	}

	return false
}

// SetPoolLbMode gets a reference to the given string and assigns it to the PoolLbMode field.
func (o *AppPoolDataData) SetPoolLbMode(v string) {
	o.PoolLbMode = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolName() string {
	if o == nil || o.PoolName == nil {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolNameOk() (*string, bool) {
	if o == nil || o.PoolName == nil {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolName() bool {
	if o != nil && o.PoolName != nil {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *AppPoolDataData) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPoolTotalNodes returns the PoolTotalNodes field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolTotalNodes() string {
	if o == nil || o.PoolTotalNodes == nil {
		var ret string
		return ret
	}
	return *o.PoolTotalNodes
}

// GetPoolTotalNodesOk returns a tuple with the PoolTotalNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolTotalNodesOk() (*string, bool) {
	if o == nil || o.PoolTotalNodes == nil {
		return nil, false
	}
	return o.PoolTotalNodes, true
}

// HasPoolTotalNodes returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolTotalNodes() bool {
	if o != nil && o.PoolTotalNodes != nil {
		return true
	}

	return false
}

// SetPoolTotalNodes gets a reference to the given string and assigns it to the PoolTotalNodes field.
func (o *AppPoolDataData) SetPoolTotalNodes(v string) {
	o.PoolTotalNodes = &v
}

// GetPoolType returns the PoolType field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolType() string {
	if o == nil || o.PoolType == nil {
		var ret string
		return ret
	}
	return *o.PoolType
}

// GetPoolTypeOk returns a tuple with the PoolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolTypeOk() (*string, bool) {
	if o == nil || o.PoolType == nil {
		return nil, false
	}
	return o.PoolType, true
}

// HasPoolType returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolType() bool {
	if o != nil && o.PoolType != nil {
		return true
	}

	return false
}

// SetPoolType gets a reference to the given string and assigns it to the PoolType field.
func (o *AppPoolDataData) SetPoolType(v string) {
	o.PoolType = &v
}

// GetPoolWeight returns the PoolWeight field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolWeight() string {
	if o == nil || o.PoolWeight == nil {
		var ret string
		return ret
	}
	return *o.PoolWeight
}

// GetPoolWeightOk returns a tuple with the PoolWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolWeightOk() (*string, bool) {
	if o == nil || o.PoolWeight == nil {
		return nil, false
	}
	return o.PoolWeight, true
}

// HasPoolWeight returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolWeight() bool {
	if o != nil && o.PoolWeight != nil {
		return true
	}

	return false
}

// SetPoolWeight gets a reference to the given string and assigns it to the PoolWeight field.
func (o *AppPoolDataData) SetPoolWeight(v string) {
	o.PoolWeight = &v
}

// GetPoolDelayedTime returns the PoolDelayedTime field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolDelayedTime() string {
	if o == nil || o.PoolDelayedTime == nil {
		var ret string
		return ret
	}
	return *o.PoolDelayedTime
}

// GetPoolDelayedTimeOk returns a tuple with the PoolDelayedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolDelayedTimeOk() (*string, bool) {
	if o == nil || o.PoolDelayedTime == nil {
		return nil, false
	}
	return o.PoolDelayedTime, true
}

// HasPoolDelayedTime returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolDelayedTime() bool {
	if o != nil && o.PoolDelayedTime != nil {
		return true
	}

	return false
}

// SetPoolDelayedTime gets a reference to the given string and assigns it to the PoolDelayedTime field.
func (o *AppPoolDataData) SetPoolDelayedTime(v string) {
	o.PoolDelayedTime = &v
}

// GetGslbserverType returns the GslbserverType field value if set, zero value otherwise.
func (o *AppPoolDataData) GetGslbserverType() string {
	if o == nil || o.GslbserverType == nil {
		var ret string
		return ret
	}
	return *o.GslbserverType
}

// GetGslbserverTypeOk returns a tuple with the GslbserverType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetGslbserverTypeOk() (*string, bool) {
	if o == nil || o.GslbserverType == nil {
		return nil, false
	}
	return o.GslbserverType, true
}

// HasGslbserverType returns a boolean if a field has been set.
func (o *AppPoolDataData) HasGslbserverType() bool {
	if o != nil && o.GslbserverType != nil {
		return true
	}

	return false
}

// SetGslbserverType gets a reference to the given string and assigns it to the GslbserverType field.
func (o *AppPoolDataData) SetGslbserverType(v string) {
	o.GslbserverType = &v
}

// GetPoolMultistatus returns the PoolMultistatus field value if set, zero value otherwise.
func (o *AppPoolDataData) GetPoolMultistatus() string {
	if o == nil || o.PoolMultistatus == nil {
		var ret string
		return ret
	}
	return *o.PoolMultistatus
}

// GetPoolMultistatusOk returns a tuple with the PoolMultistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetPoolMultistatusOk() (*string, bool) {
	if o == nil || o.PoolMultistatus == nil {
		return nil, false
	}
	return o.PoolMultistatus, true
}

// HasPoolMultistatus returns a boolean if a field has been set.
func (o *AppPoolDataData) HasPoolMultistatus() bool {
	if o != nil && o.PoolMultistatus != nil {
		return true
	}

	return false
}

// SetPoolMultistatus gets a reference to the given string and assigns it to the PoolMultistatus field.
func (o *AppPoolDataData) SetPoolMultistatus(v string) {
	o.PoolMultistatus = &v
}

// GetParentApplicationId returns the ParentApplicationId field value if set, zero value otherwise.
func (o *AppPoolDataData) GetParentApplicationId() string {
	if o == nil || o.ParentApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ParentApplicationId
}

// GetParentApplicationIdOk returns a tuple with the ParentApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetParentApplicationIdOk() (*string, bool) {
	if o == nil || o.ParentApplicationId == nil {
		return nil, false
	}
	return o.ParentApplicationId, true
}

// HasParentApplicationId returns a boolean if a field has been set.
func (o *AppPoolDataData) HasParentApplicationId() bool {
	if o != nil && o.ParentApplicationId != nil {
		return true
	}

	return false
}

// SetParentApplicationId gets a reference to the given string and assigns it to the ParentApplicationId field.
func (o *AppPoolDataData) SetParentApplicationId(v string) {
	o.ParentApplicationId = &v
}

// GetTranslatedPoolLbMode returns the TranslatedPoolLbMode field value if set, zero value otherwise.
func (o *AppPoolDataData) GetTranslatedPoolLbMode() string {
	if o == nil || o.TranslatedPoolLbMode == nil {
		var ret string
		return ret
	}
	return *o.TranslatedPoolLbMode
}

// GetTranslatedPoolLbModeOk returns a tuple with the TranslatedPoolLbMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolDataData) GetTranslatedPoolLbModeOk() (*string, bool) {
	if o == nil || o.TranslatedPoolLbMode == nil {
		return nil, false
	}
	return o.TranslatedPoolLbMode, true
}

// HasTranslatedPoolLbMode returns a boolean if a field has been set.
func (o *AppPoolDataData) HasTranslatedPoolLbMode() bool {
	if o != nil && o.TranslatedPoolLbMode != nil {
		return true
	}

	return false
}

// SetTranslatedPoolLbMode gets a reference to the given string and assigns it to the TranslatedPoolLbMode field.
func (o *AppPoolDataData) SetTranslatedPoolLbMode(v string) {
	o.TranslatedPoolLbMode = &v
}

func (o AppPoolDataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationFqdn != nil {
		toSerialize["application_fqdn"] = o.ApplicationFqdn
	}
	if o.GslbserverId != nil {
		toSerialize["gslbserver_id"] = o.GslbserverId
	}
	if o.GslbserverName != nil {
		toSerialize["gslbserver_name"] = o.GslbserverName
	}
	if o.ApplicationId != nil {
		toSerialize["application_id"] = o.ApplicationId
	}
	if o.ApplicationName != nil {
		toSerialize["application_name"] = o.ApplicationName
	}
	if o.PoolAffinitySessionTime != nil {
		toSerialize["pool_affinity_session_time"] = o.PoolAffinitySessionTime
	}
	if o.PoolAffinityState != nil {
		toSerialize["pool_affinity_state"] = o.PoolAffinityState
	}
	if o.PoolBestActiveNodes != nil {
		toSerialize["pool_best_active_nodes"] = o.PoolBestActiveNodes
	}
	if o.PoolId != nil {
		toSerialize["pool_id"] = o.PoolId
	}
	if o.PoolInactiveNodes != nil {
		toSerialize["pool_inactive_nodes"] = o.PoolInactiveNodes
	}
	if o.PoolLbMode != nil {
		toSerialize["pool_lb_mode"] = o.PoolLbMode
	}
	if o.PoolName != nil {
		toSerialize["pool_name"] = o.PoolName
	}
	if o.PoolTotalNodes != nil {
		toSerialize["pool_total_nodes"] = o.PoolTotalNodes
	}
	if o.PoolType != nil {
		toSerialize["pool_type"] = o.PoolType
	}
	if o.PoolWeight != nil {
		toSerialize["pool_weight"] = o.PoolWeight
	}
	if o.PoolDelayedTime != nil {
		toSerialize["pool_delayed_time"] = o.PoolDelayedTime
	}
	if o.GslbserverType != nil {
		toSerialize["gslbserver_type"] = o.GslbserverType
	}
	if o.PoolMultistatus != nil {
		toSerialize["pool_multistatus"] = o.PoolMultistatus
	}
	if o.ParentApplicationId != nil {
		toSerialize["parent_application_id"] = o.ParentApplicationId
	}
	if o.TranslatedPoolLbMode != nil {
		toSerialize["translated_pool_lb_mode"] = o.TranslatedPoolLbMode
	}
	return json.Marshal(toSerialize)
}

type NullableAppPoolDataData struct {
	value *AppPoolDataData
	isSet bool
}

func (v NullableAppPoolDataData) Get() *AppPoolDataData {
	return v.value
}

func (v *NullableAppPoolDataData) Set(val *AppPoolDataData) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPoolDataData) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPoolDataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPoolDataData(val *AppPoolDataData) *NullableAppPoolDataData {
	return &NullableAppPoolDataData{value: val, isSet: true}
}

func (v NullableAppPoolDataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPoolDataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


