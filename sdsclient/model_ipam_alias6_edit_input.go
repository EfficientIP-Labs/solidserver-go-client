/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the IpamAlias6EditInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpamAlias6EditInput{}

// IpamAlias6EditInput struct for IpamAlias6EditInput
type IpamAlias6EditInput struct {
	// The IP address.
	Address6Hostaddr *string `json:"address6_hostaddr,omitempty"`
	// The database identifier (ID) of the IPv6 address, a unique numeric key value automatically incremented when you add an IPv6 address. Use the ID to specify the IPv6 address of your choice.
	Address6Id *int32 `json:"address6_id,omitempty"`
	// The name of the IPv6 address.
	Alias6Name *string `json:"alias6_name,omitempty"`
	// The database identifier (ID) of the IPv6 alias, a unique numeric key value automatically incremented when you add an IPv6 alias. Use the ID to specify the IPv6 alias of your choice.
	Alias6Id *int32 `json:"alias6_id,omitempty"`
	// The database identifier (ID) of the space, a unique numeric key value automatically incremented when you add a space. Use the ID to specify the space of your choice.
	SpaceId *int32 `json:"space_id,omitempty"`
	// The name of the space.
	SpaceName *string `json:"space_name,omitempty"`
	// The type of the alias.
	Alias6Type *string `json:"alias6_type,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewIpamAlias6EditInput instantiates a new IpamAlias6EditInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamAlias6EditInput() *IpamAlias6EditInput {
	this := IpamAlias6EditInput{}
	return &this
}

// NewIpamAlias6EditInputWithDefaults instantiates a new IpamAlias6EditInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamAlias6EditInputWithDefaults() *IpamAlias6EditInput {
	this := IpamAlias6EditInput{}
	return &this
}

// GetAddress6Hostaddr returns the Address6Hostaddr field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetAddress6Hostaddr() string {
	if o == nil || IsNil(o.Address6Hostaddr) {
		var ret string
		return ret
	}
	return *o.Address6Hostaddr
}

// GetAddress6HostaddrOk returns a tuple with the Address6Hostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetAddress6HostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.Address6Hostaddr) {
		return nil, false
	}
	return o.Address6Hostaddr, true
}

// HasAddress6Hostaddr returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasAddress6Hostaddr() bool {
	if o != nil && !IsNil(o.Address6Hostaddr) {
		return true
	}

	return false
}

// SetAddress6Hostaddr gets a reference to the given string and assigns it to the Address6Hostaddr field.
func (o *IpamAlias6EditInput) SetAddress6Hostaddr(v string) {
	o.Address6Hostaddr = &v
}

// GetAddress6Id returns the Address6Id field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetAddress6Id() int32 {
	if o == nil || IsNil(o.Address6Id) {
		var ret int32
		return ret
	}
	return *o.Address6Id
}

// GetAddress6IdOk returns a tuple with the Address6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetAddress6IdOk() (*int32, bool) {
	if o == nil || IsNil(o.Address6Id) {
		return nil, false
	}
	return o.Address6Id, true
}

// HasAddress6Id returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasAddress6Id() bool {
	if o != nil && !IsNil(o.Address6Id) {
		return true
	}

	return false
}

// SetAddress6Id gets a reference to the given int32 and assigns it to the Address6Id field.
func (o *IpamAlias6EditInput) SetAddress6Id(v int32) {
	o.Address6Id = &v
}

// GetAlias6Name returns the Alias6Name field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetAlias6Name() string {
	if o == nil || IsNil(o.Alias6Name) {
		var ret string
		return ret
	}
	return *o.Alias6Name
}

// GetAlias6NameOk returns a tuple with the Alias6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetAlias6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Alias6Name) {
		return nil, false
	}
	return o.Alias6Name, true
}

// HasAlias6Name returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasAlias6Name() bool {
	if o != nil && !IsNil(o.Alias6Name) {
		return true
	}

	return false
}

// SetAlias6Name gets a reference to the given string and assigns it to the Alias6Name field.
func (o *IpamAlias6EditInput) SetAlias6Name(v string) {
	o.Alias6Name = &v
}

// GetAlias6Id returns the Alias6Id field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetAlias6Id() int32 {
	if o == nil || IsNil(o.Alias6Id) {
		var ret int32
		return ret
	}
	return *o.Alias6Id
}

// GetAlias6IdOk returns a tuple with the Alias6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetAlias6IdOk() (*int32, bool) {
	if o == nil || IsNil(o.Alias6Id) {
		return nil, false
	}
	return o.Alias6Id, true
}

// HasAlias6Id returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasAlias6Id() bool {
	if o != nil && !IsNil(o.Alias6Id) {
		return true
	}

	return false
}

// SetAlias6Id gets a reference to the given int32 and assigns it to the Alias6Id field.
func (o *IpamAlias6EditInput) SetAlias6Id(v int32) {
	o.Alias6Id = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetSpaceId() int32 {
	if o == nil || IsNil(o.SpaceId) {
		var ret int32
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetSpaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given int32 and assigns it to the SpaceId field.
func (o *IpamAlias6EditInput) SetSpaceId(v int32) {
	o.SpaceId = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetSpaceName() string {
	if o == nil || IsNil(o.SpaceName) {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceName) {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasSpaceName() bool {
	if o != nil && !IsNil(o.SpaceName) {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *IpamAlias6EditInput) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetAlias6Type returns the Alias6Type field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetAlias6Type() string {
	if o == nil || IsNil(o.Alias6Type) {
		var ret string
		return ret
	}
	return *o.Alias6Type
}

// GetAlias6TypeOk returns a tuple with the Alias6Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetAlias6TypeOk() (*string, bool) {
	if o == nil || IsNil(o.Alias6Type) {
		return nil, false
	}
	return o.Alias6Type, true
}

// HasAlias6Type returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasAlias6Type() bool {
	if o != nil && !IsNil(o.Alias6Type) {
		return true
	}

	return false
}

// SetAlias6Type gets a reference to the given string and assigns it to the Alias6Type field.
func (o *IpamAlias6EditInput) SetAlias6Type(v string) {
	o.Alias6Type = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *IpamAlias6EditInput) GetWarnings() string {
	if o == nil || IsNil(o.Warnings) {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6EditInput) GetWarningsOk() (*string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *IpamAlias6EditInput) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *IpamAlias6EditInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o IpamAlias6EditInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpamAlias6EditInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address6Hostaddr) {
		toSerialize["address6_hostaddr"] = o.Address6Hostaddr
	}
	if !IsNil(o.Address6Id) {
		toSerialize["address6_id"] = o.Address6Id
	}
	if !IsNil(o.Alias6Name) {
		toSerialize["alias6_name"] = o.Alias6Name
	}
	if !IsNil(o.Alias6Id) {
		toSerialize["alias6_id"] = o.Alias6Id
	}
	if !IsNil(o.SpaceId) {
		toSerialize["space_id"] = o.SpaceId
	}
	if !IsNil(o.SpaceName) {
		toSerialize["space_name"] = o.SpaceName
	}
	if !IsNil(o.Alias6Type) {
		toSerialize["alias6_type"] = o.Alias6Type
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableIpamAlias6EditInput struct {
	value *IpamAlias6EditInput
	isSet bool
}

func (v NullableIpamAlias6EditInput) Get() *IpamAlias6EditInput {
	return v.value
}

func (v *NullableIpamAlias6EditInput) Set(val *IpamAlias6EditInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamAlias6EditInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamAlias6EditInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamAlias6EditInput(val *IpamAlias6EditInput) *NullableIpamAlias6EditInput {
	return &NullableIpamAlias6EditInput{value: val, isSet: true}
}

func (v NullableIpamAlias6EditInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamAlias6EditInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
