/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// VlanVlanEditInput struct for VlanVlanEditInput
type VlanVlanEditInput struct {
	// The database identifier (ID) of the VLAN domain, a unique numeric key value automatically incremented when you add a VLAN domain. Use the ID to specify the VLAN domain of your choice.
	DomainId *int32 `json:"domain_id,omitempty"`
	// The name of the VLAN domain.
	DomainName *string `json:"domain_name,omitempty"`
	// The database identifier (ID) of the VLAN, a unique numeric key value automatically incremented when you add a VLAN. Use the ID to specify which VLAN to edit.
	VlanId *int32 `json:"vlan_id,omitempty"`
	// The VLAN identifier (ID) of the VLAN, a unique numeric key value within a VLAN domain. Use the ID to specify which VLAN to edit.
	VlanVlanId *int32 `json:"vlan_vlan_id,omitempty"`
	// The database identifier (ID) of the VLAN range, a unique numeric key value automatically incremented when you add a VLAN range. Use the ID to specify the VLAN range of your choice.
	RangeId *int32 `json:"range_id,omitempty"`
	// The name of the VLAN range.
	RangeName *string `json:"range_name,omitempty"`
	// The name of the VLAN, each VLAN must have a unique name.
	VlanName *string `json:"vlan_name,omitempty"`
	// class parameters you want to delete from the object
	ClassParametersToDelete *[]string `json:"class_parameters_to_delete,omitempty"`
	// The name of the class to apply to the object you are editing. You must specify the class file directory, e.g. <b>my_directory/my_class.class</b> . You cannot use the classes <b>global</b> and <b>default</b>, they are reserved by the system.
	VlanClassName *string `json:"vlan_class_name,omitempty"`
	// class parameters in json format
	VlanClassParameters *[]ApiClassParameterInputEntry `json:"vlan_class_parameters,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewVlanVlanEditInput instantiates a new VlanVlanEditInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVlanVlanEditInput() *VlanVlanEditInput {
	this := VlanVlanEditInput{}
	return &this
}

// NewVlanVlanEditInputWithDefaults instantiates a new VlanVlanEditInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVlanVlanEditInputWithDefaults() *VlanVlanEditInput {
	this := VlanVlanEditInput{}
	return &this
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetDomainId() int32 {
	if o == nil || o.DomainId == nil {
		var ret int32
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetDomainIdOk() (*int32, bool) {
	if o == nil || o.DomainId == nil {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasDomainId() bool {
	if o != nil && o.DomainId != nil {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given int32 and assigns it to the DomainId field.
func (o *VlanVlanEditInput) SetDomainId(v int32) {
	o.DomainId = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *VlanVlanEditInput) SetDomainName(v string) {
	o.DomainName = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetVlanId() int32 {
	if o == nil || o.VlanId == nil {
		var ret int32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetVlanIdOk() (*int32, bool) {
	if o == nil || o.VlanId == nil {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasVlanId() bool {
	if o != nil && o.VlanId != nil {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int32 and assigns it to the VlanId field.
func (o *VlanVlanEditInput) SetVlanId(v int32) {
	o.VlanId = &v
}

// GetVlanVlanId returns the VlanVlanId field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetVlanVlanId() int32 {
	if o == nil || o.VlanVlanId == nil {
		var ret int32
		return ret
	}
	return *o.VlanVlanId
}

// GetVlanVlanIdOk returns a tuple with the VlanVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetVlanVlanIdOk() (*int32, bool) {
	if o == nil || o.VlanVlanId == nil {
		return nil, false
	}
	return o.VlanVlanId, true
}

// HasVlanVlanId returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasVlanVlanId() bool {
	if o != nil && o.VlanVlanId != nil {
		return true
	}

	return false
}

// SetVlanVlanId gets a reference to the given int32 and assigns it to the VlanVlanId field.
func (o *VlanVlanEditInput) SetVlanVlanId(v int32) {
	o.VlanVlanId = &v
}

// GetRangeId returns the RangeId field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetRangeId() int32 {
	if o == nil || o.RangeId == nil {
		var ret int32
		return ret
	}
	return *o.RangeId
}

// GetRangeIdOk returns a tuple with the RangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetRangeIdOk() (*int32, bool) {
	if o == nil || o.RangeId == nil {
		return nil, false
	}
	return o.RangeId, true
}

// HasRangeId returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasRangeId() bool {
	if o != nil && o.RangeId != nil {
		return true
	}

	return false
}

// SetRangeId gets a reference to the given int32 and assigns it to the RangeId field.
func (o *VlanVlanEditInput) SetRangeId(v int32) {
	o.RangeId = &v
}

// GetRangeName returns the RangeName field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetRangeName() string {
	if o == nil || o.RangeName == nil {
		var ret string
		return ret
	}
	return *o.RangeName
}

// GetRangeNameOk returns a tuple with the RangeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetRangeNameOk() (*string, bool) {
	if o == nil || o.RangeName == nil {
		return nil, false
	}
	return o.RangeName, true
}

// HasRangeName returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasRangeName() bool {
	if o != nil && o.RangeName != nil {
		return true
	}

	return false
}

// SetRangeName gets a reference to the given string and assigns it to the RangeName field.
func (o *VlanVlanEditInput) SetRangeName(v string) {
	o.RangeName = &v
}

// GetVlanName returns the VlanName field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetVlanName() string {
	if o == nil || o.VlanName == nil {
		var ret string
		return ret
	}
	return *o.VlanName
}

// GetVlanNameOk returns a tuple with the VlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetVlanNameOk() (*string, bool) {
	if o == nil || o.VlanName == nil {
		return nil, false
	}
	return o.VlanName, true
}

// HasVlanName returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasVlanName() bool {
	if o != nil && o.VlanName != nil {
		return true
	}

	return false
}

// SetVlanName gets a reference to the given string and assigns it to the VlanName field.
func (o *VlanVlanEditInput) SetVlanName(v string) {
	o.VlanName = &v
}

// GetClassParametersToDelete returns the ClassParametersToDelete field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetClassParametersToDelete() []string {
	if o == nil || o.ClassParametersToDelete == nil {
		var ret []string
		return ret
	}
	return *o.ClassParametersToDelete
}

// GetClassParametersToDeleteOk returns a tuple with the ClassParametersToDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetClassParametersToDeleteOk() (*[]string, bool) {
	if o == nil || o.ClassParametersToDelete == nil {
		return nil, false
	}
	return o.ClassParametersToDelete, true
}

// HasClassParametersToDelete returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasClassParametersToDelete() bool {
	if o != nil && o.ClassParametersToDelete != nil {
		return true
	}

	return false
}

// SetClassParametersToDelete gets a reference to the given []string and assigns it to the ClassParametersToDelete field.
func (o *VlanVlanEditInput) SetClassParametersToDelete(v []string) {
	o.ClassParametersToDelete = &v
}

// GetVlanClassName returns the VlanClassName field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetVlanClassName() string {
	if o == nil || o.VlanClassName == nil {
		var ret string
		return ret
	}
	return *o.VlanClassName
}

// GetVlanClassNameOk returns a tuple with the VlanClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetVlanClassNameOk() (*string, bool) {
	if o == nil || o.VlanClassName == nil {
		return nil, false
	}
	return o.VlanClassName, true
}

// HasVlanClassName returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasVlanClassName() bool {
	if o != nil && o.VlanClassName != nil {
		return true
	}

	return false
}

// SetVlanClassName gets a reference to the given string and assigns it to the VlanClassName field.
func (o *VlanVlanEditInput) SetVlanClassName(v string) {
	o.VlanClassName = &v
}

// GetVlanClassParameters returns the VlanClassParameters field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetVlanClassParameters() []ApiClassParameterInputEntry {
	if o == nil || o.VlanClassParameters == nil {
		var ret []ApiClassParameterInputEntry
		return ret
	}
	return *o.VlanClassParameters
}

// GetVlanClassParametersOk returns a tuple with the VlanClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetVlanClassParametersOk() (*[]ApiClassParameterInputEntry, bool) {
	if o == nil || o.VlanClassParameters == nil {
		return nil, false
	}
	return o.VlanClassParameters, true
}

// HasVlanClassParameters returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasVlanClassParameters() bool {
	if o != nil && o.VlanClassParameters != nil {
		return true
	}

	return false
}

// SetVlanClassParameters gets a reference to the given []ApiClassParameterInputEntry and assigns it to the VlanClassParameters field.
func (o *VlanVlanEditInput) SetVlanClassParameters(v []ApiClassParameterInputEntry) {
	o.VlanClassParameters = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *VlanVlanEditInput) GetWarnings() string {
	if o == nil || o.Warnings == nil {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVlanEditInput) GetWarningsOk() (*string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *VlanVlanEditInput) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *VlanVlanEditInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o VlanVlanEditInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainId != nil {
		toSerialize["domain_id"] = o.DomainId
	}
	if o.DomainName != nil {
		toSerialize["domain_name"] = o.DomainName
	}
	if o.VlanId != nil {
		toSerialize["vlan_id"] = o.VlanId
	}
	if o.VlanVlanId != nil {
		toSerialize["vlan_vlan_id"] = o.VlanVlanId
	}
	if o.RangeId != nil {
		toSerialize["range_id"] = o.RangeId
	}
	if o.RangeName != nil {
		toSerialize["range_name"] = o.RangeName
	}
	if o.VlanName != nil {
		toSerialize["vlan_name"] = o.VlanName
	}
	if o.ClassParametersToDelete != nil {
		toSerialize["class_parameters_to_delete"] = o.ClassParametersToDelete
	}
	if o.VlanClassName != nil {
		toSerialize["vlan_class_name"] = o.VlanClassName
	}
	if o.VlanClassParameters != nil {
		toSerialize["vlan_class_parameters"] = o.VlanClassParameters
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableVlanVlanEditInput struct {
	value *VlanVlanEditInput
	isSet bool
}

func (v NullableVlanVlanEditInput) Get() *VlanVlanEditInput {
	return v.value
}

func (v *NullableVlanVlanEditInput) Set(val *VlanVlanEditInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVlanVlanEditInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVlanVlanEditInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVlanVlanEditInput(val *VlanVlanEditInput) *NullableVlanVlanEditInput {
	return &NullableVlanVlanEditInput{value: val, isSet: true}
}

func (v NullableVlanVlanEditInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVlanVlanEditInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


