/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerVlanVlanData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerVlanVlanData{}

// DataInnerVlanVlanData struct for DataInnerVlanVlanData
type DataInnerVlanVlanData struct {
	// For free VLAN IDs (<b>type</b><b>free</b>), it returns the last VLAN of a range of VLANs that are not assigned yet. The first VLAN in that range is returned in the parameter <b>free_start_vlan_id</b>.
	FreeEndVlanId *string `json:"free_end_vlan_id,omitempty"`
	// For free VLAN IDs (<b>type</b><b>free</b>), it returns the first VLAN of the range of VLANs that are not assigned yet. The last VLAN in that range is returned in the parameter <b>free_end_vlan_id</b>.
	FreeStartVlanId *string `json:"free_start_vlan_id,omitempty"`
	// The type of virtual network used by the domain the VLAN belongs to, VXLAN (<b>1</b>) or VLAN (<b>0</b>).
	DomainSupportVxlan *string `json:"domain_support_vxlan,omitempty"`
	// The type of the VLAN (<b>free</b> or <b>used</b>).
	VlanType *string `json:"vlan_type,omitempty"`
	// The name of the class applied to the VLAN domain the object belongs to, it can be preceded by the class directory.
	DomainClassName *string `json:"domain_class_name,omitempty"`
	// The class parameters of the domain the VLAN belongs to.
	DomainClassParameters []ApiClassParameterOutputEntry `json:"domain_class_parameters,omitempty"`
	// The description of the VLAN domain the object belongs to.
	DomainDescription *string `json:"domain_description,omitempty"`
	// The VLAN identifier (ID) of the last VLAN in the VLAN domain the object belongs to.
	DomainEndVlanId *string `json:"domain_end_vlan_id,omitempty"`
	// The database identifier (ID) of the VLAN domain the object belongs to.
	DomainId *string `json:"domain_id,omitempty"`
	// The name of the VLAN domain the object belongs to.
	DomainName *string `json:"domain_name,omitempty"`
	// The VLAN identifier (ID) of the first VLAN in the VLAN domain the object belongs to.
	DomainStartVlanId *string `json:"domain_start_vlan_id,omitempty"`
	// The name of the class applied to the VLAN range the object belongs to, it can be preceded by the class directory.
	RangeClassName *string `json:"range_class_name,omitempty"`
	// The class parameters of the range the VLAN belongs to.
	RangeClassParameters []ApiClassParameterOutputEntry `json:"range_class_parameters,omitempty"`
	// The description of the VLAN range the object belongs to.
	RangeDescription *string `json:"range_description,omitempty"`
	// The VLAN identifier (ID) of the last VLAN in the VLAN range the object belongs to.
	RangeEndVlanId *string `json:"range_end_vlan_id,omitempty"`
	// The database identifier (ID) of the VLAN range the object belongs to.
	RangeId *string `json:"range_id,omitempty"`
	// The name of the VLAN range the object belongs to.
	RangeName *string `json:"range_name,omitempty"`
	// The VLAN identifier (ID) of the first VLAN in the VLAN range the object belongs to.
	RangeStartVlanId *string `json:"range_start_vlan_id,omitempty"`
	// The name of the class applied to the object, it can be preceded by the class directory.
	VlanClassName *string `json:"vlan_class_name,omitempty"`
	// The class parameters of the VLAN.
	VlanClassParameters []ApiClassParameterOutputEntry `json:"vlan_class_parameters,omitempty"`
	// The database identifier (ID) of the VLAN.
	VlanId *string `json:"vlan_id,omitempty"`
	// The name of the VLAN.
	VlanName *string `json:"vlan_name,omitempty"`
	// The VLAN identifier (ID) of the VLAN.
	VlanVlanId *string `json:"vlan_vlan_id,omitempty"`
}

// NewDataInnerVlanVlanData instantiates a new DataInnerVlanVlanData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerVlanVlanData() *DataInnerVlanVlanData {
	this := DataInnerVlanVlanData{}
	return &this
}

// NewDataInnerVlanVlanDataWithDefaults instantiates a new DataInnerVlanVlanData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerVlanVlanDataWithDefaults() *DataInnerVlanVlanData {
	this := DataInnerVlanVlanData{}
	return &this
}

// GetFreeEndVlanId returns the FreeEndVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetFreeEndVlanId() string {
	if o == nil || IsNil(o.FreeEndVlanId) {
		var ret string
		return ret
	}
	return *o.FreeEndVlanId
}

// GetFreeEndVlanIdOk returns a tuple with the FreeEndVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetFreeEndVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.FreeEndVlanId) {
		return nil, false
	}
	return o.FreeEndVlanId, true
}

// HasFreeEndVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasFreeEndVlanId() bool {
	if o != nil && !IsNil(o.FreeEndVlanId) {
		return true
	}

	return false
}

// SetFreeEndVlanId gets a reference to the given string and assigns it to the FreeEndVlanId field.
func (o *DataInnerVlanVlanData) SetFreeEndVlanId(v string) {
	o.FreeEndVlanId = &v
}

// GetFreeStartVlanId returns the FreeStartVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetFreeStartVlanId() string {
	if o == nil || IsNil(o.FreeStartVlanId) {
		var ret string
		return ret
	}
	return *o.FreeStartVlanId
}

// GetFreeStartVlanIdOk returns a tuple with the FreeStartVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetFreeStartVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.FreeStartVlanId) {
		return nil, false
	}
	return o.FreeStartVlanId, true
}

// HasFreeStartVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasFreeStartVlanId() bool {
	if o != nil && !IsNil(o.FreeStartVlanId) {
		return true
	}

	return false
}

// SetFreeStartVlanId gets a reference to the given string and assigns it to the FreeStartVlanId field.
func (o *DataInnerVlanVlanData) SetFreeStartVlanId(v string) {
	o.FreeStartVlanId = &v
}

// GetDomainSupportVxlan returns the DomainSupportVxlan field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainSupportVxlan() string {
	if o == nil || IsNil(o.DomainSupportVxlan) {
		var ret string
		return ret
	}
	return *o.DomainSupportVxlan
}

// GetDomainSupportVxlanOk returns a tuple with the DomainSupportVxlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainSupportVxlanOk() (*string, bool) {
	if o == nil || IsNil(o.DomainSupportVxlan) {
		return nil, false
	}
	return o.DomainSupportVxlan, true
}

// HasDomainSupportVxlan returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainSupportVxlan() bool {
	if o != nil && !IsNil(o.DomainSupportVxlan) {
		return true
	}

	return false
}

// SetDomainSupportVxlan gets a reference to the given string and assigns it to the DomainSupportVxlan field.
func (o *DataInnerVlanVlanData) SetDomainSupportVxlan(v string) {
	o.DomainSupportVxlan = &v
}

// GetVlanType returns the VlanType field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetVlanType() string {
	if o == nil || IsNil(o.VlanType) {
		var ret string
		return ret
	}
	return *o.VlanType
}

// GetVlanTypeOk returns a tuple with the VlanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetVlanTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VlanType) {
		return nil, false
	}
	return o.VlanType, true
}

// HasVlanType returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasVlanType() bool {
	if o != nil && !IsNil(o.VlanType) {
		return true
	}

	return false
}

// SetVlanType gets a reference to the given string and assigns it to the VlanType field.
func (o *DataInnerVlanVlanData) SetVlanType(v string) {
	o.VlanType = &v
}

// GetDomainClassName returns the DomainClassName field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainClassName() string {
	if o == nil || IsNil(o.DomainClassName) {
		var ret string
		return ret
	}
	return *o.DomainClassName
}

// GetDomainClassNameOk returns a tuple with the DomainClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainClassName) {
		return nil, false
	}
	return o.DomainClassName, true
}

// HasDomainClassName returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainClassName() bool {
	if o != nil && !IsNil(o.DomainClassName) {
		return true
	}

	return false
}

// SetDomainClassName gets a reference to the given string and assigns it to the DomainClassName field.
func (o *DataInnerVlanVlanData) SetDomainClassName(v string) {
	o.DomainClassName = &v
}

// GetDomainClassParameters returns the DomainClassParameters field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.DomainClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.DomainClassParameters
}

// GetDomainClassParametersOk returns a tuple with the DomainClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.DomainClassParameters) {
		return nil, false
	}
	return o.DomainClassParameters, true
}

// HasDomainClassParameters returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainClassParameters() bool {
	if o != nil && !IsNil(o.DomainClassParameters) {
		return true
	}

	return false
}

// SetDomainClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the DomainClassParameters field.
func (o *DataInnerVlanVlanData) SetDomainClassParameters(v []ApiClassParameterOutputEntry) {
	o.DomainClassParameters = v
}

// GetDomainDescription returns the DomainDescription field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainDescription() string {
	if o == nil || IsNil(o.DomainDescription) {
		var ret string
		return ret
	}
	return *o.DomainDescription
}

// GetDomainDescriptionOk returns a tuple with the DomainDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DomainDescription) {
		return nil, false
	}
	return o.DomainDescription, true
}

// HasDomainDescription returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainDescription() bool {
	if o != nil && !IsNil(o.DomainDescription) {
		return true
	}

	return false
}

// SetDomainDescription gets a reference to the given string and assigns it to the DomainDescription field.
func (o *DataInnerVlanVlanData) SetDomainDescription(v string) {
	o.DomainDescription = &v
}

// GetDomainEndVlanId returns the DomainEndVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainEndVlanId() string {
	if o == nil || IsNil(o.DomainEndVlanId) {
		var ret string
		return ret
	}
	return *o.DomainEndVlanId
}

// GetDomainEndVlanIdOk returns a tuple with the DomainEndVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainEndVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.DomainEndVlanId) {
		return nil, false
	}
	return o.DomainEndVlanId, true
}

// HasDomainEndVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainEndVlanId() bool {
	if o != nil && !IsNil(o.DomainEndVlanId) {
		return true
	}

	return false
}

// SetDomainEndVlanId gets a reference to the given string and assigns it to the DomainEndVlanId field.
func (o *DataInnerVlanVlanData) SetDomainEndVlanId(v string) {
	o.DomainEndVlanId = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainId() string {
	if o == nil || IsNil(o.DomainId) {
		var ret string
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainIdOk() (*string, bool) {
	if o == nil || IsNil(o.DomainId) {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainId() bool {
	if o != nil && !IsNil(o.DomainId) {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given string and assigns it to the DomainId field.
func (o *DataInnerVlanVlanData) SetDomainId(v string) {
	o.DomainId = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *DataInnerVlanVlanData) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainStartVlanId returns the DomainStartVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetDomainStartVlanId() string {
	if o == nil || IsNil(o.DomainStartVlanId) {
		var ret string
		return ret
	}
	return *o.DomainStartVlanId
}

// GetDomainStartVlanIdOk returns a tuple with the DomainStartVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetDomainStartVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.DomainStartVlanId) {
		return nil, false
	}
	return o.DomainStartVlanId, true
}

// HasDomainStartVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasDomainStartVlanId() bool {
	if o != nil && !IsNil(o.DomainStartVlanId) {
		return true
	}

	return false
}

// SetDomainStartVlanId gets a reference to the given string and assigns it to the DomainStartVlanId field.
func (o *DataInnerVlanVlanData) SetDomainStartVlanId(v string) {
	o.DomainStartVlanId = &v
}

// GetRangeClassName returns the RangeClassName field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeClassName() string {
	if o == nil || IsNil(o.RangeClassName) {
		var ret string
		return ret
	}
	return *o.RangeClassName
}

// GetRangeClassNameOk returns a tuple with the RangeClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.RangeClassName) {
		return nil, false
	}
	return o.RangeClassName, true
}

// HasRangeClassName returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeClassName() bool {
	if o != nil && !IsNil(o.RangeClassName) {
		return true
	}

	return false
}

// SetRangeClassName gets a reference to the given string and assigns it to the RangeClassName field.
func (o *DataInnerVlanVlanData) SetRangeClassName(v string) {
	o.RangeClassName = &v
}

// GetRangeClassParameters returns the RangeClassParameters field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.RangeClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.RangeClassParameters
}

// GetRangeClassParametersOk returns a tuple with the RangeClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.RangeClassParameters) {
		return nil, false
	}
	return o.RangeClassParameters, true
}

// HasRangeClassParameters returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeClassParameters() bool {
	if o != nil && !IsNil(o.RangeClassParameters) {
		return true
	}

	return false
}

// SetRangeClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the RangeClassParameters field.
func (o *DataInnerVlanVlanData) SetRangeClassParameters(v []ApiClassParameterOutputEntry) {
	o.RangeClassParameters = v
}

// GetRangeDescription returns the RangeDescription field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeDescription() string {
	if o == nil || IsNil(o.RangeDescription) {
		var ret string
		return ret
	}
	return *o.RangeDescription
}

// GetRangeDescriptionOk returns a tuple with the RangeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RangeDescription) {
		return nil, false
	}
	return o.RangeDescription, true
}

// HasRangeDescription returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeDescription() bool {
	if o != nil && !IsNil(o.RangeDescription) {
		return true
	}

	return false
}

// SetRangeDescription gets a reference to the given string and assigns it to the RangeDescription field.
func (o *DataInnerVlanVlanData) SetRangeDescription(v string) {
	o.RangeDescription = &v
}

// GetRangeEndVlanId returns the RangeEndVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeEndVlanId() string {
	if o == nil || IsNil(o.RangeEndVlanId) {
		var ret string
		return ret
	}
	return *o.RangeEndVlanId
}

// GetRangeEndVlanIdOk returns a tuple with the RangeEndVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeEndVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.RangeEndVlanId) {
		return nil, false
	}
	return o.RangeEndVlanId, true
}

// HasRangeEndVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeEndVlanId() bool {
	if o != nil && !IsNil(o.RangeEndVlanId) {
		return true
	}

	return false
}

// SetRangeEndVlanId gets a reference to the given string and assigns it to the RangeEndVlanId field.
func (o *DataInnerVlanVlanData) SetRangeEndVlanId(v string) {
	o.RangeEndVlanId = &v
}

// GetRangeId returns the RangeId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeId() string {
	if o == nil || IsNil(o.RangeId) {
		var ret string
		return ret
	}
	return *o.RangeId
}

// GetRangeIdOk returns a tuple with the RangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RangeId) {
		return nil, false
	}
	return o.RangeId, true
}

// HasRangeId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeId() bool {
	if o != nil && !IsNil(o.RangeId) {
		return true
	}

	return false
}

// SetRangeId gets a reference to the given string and assigns it to the RangeId field.
func (o *DataInnerVlanVlanData) SetRangeId(v string) {
	o.RangeId = &v
}

// GetRangeName returns the RangeName field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeName() string {
	if o == nil || IsNil(o.RangeName) {
		var ret string
		return ret
	}
	return *o.RangeName
}

// GetRangeNameOk returns a tuple with the RangeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeNameOk() (*string, bool) {
	if o == nil || IsNil(o.RangeName) {
		return nil, false
	}
	return o.RangeName, true
}

// HasRangeName returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeName() bool {
	if o != nil && !IsNil(o.RangeName) {
		return true
	}

	return false
}

// SetRangeName gets a reference to the given string and assigns it to the RangeName field.
func (o *DataInnerVlanVlanData) SetRangeName(v string) {
	o.RangeName = &v
}

// GetRangeStartVlanId returns the RangeStartVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetRangeStartVlanId() string {
	if o == nil || IsNil(o.RangeStartVlanId) {
		var ret string
		return ret
	}
	return *o.RangeStartVlanId
}

// GetRangeStartVlanIdOk returns a tuple with the RangeStartVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetRangeStartVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.RangeStartVlanId) {
		return nil, false
	}
	return o.RangeStartVlanId, true
}

// HasRangeStartVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasRangeStartVlanId() bool {
	if o != nil && !IsNil(o.RangeStartVlanId) {
		return true
	}

	return false
}

// SetRangeStartVlanId gets a reference to the given string and assigns it to the RangeStartVlanId field.
func (o *DataInnerVlanVlanData) SetRangeStartVlanId(v string) {
	o.RangeStartVlanId = &v
}

// GetVlanClassName returns the VlanClassName field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetVlanClassName() string {
	if o == nil || IsNil(o.VlanClassName) {
		var ret string
		return ret
	}
	return *o.VlanClassName
}

// GetVlanClassNameOk returns a tuple with the VlanClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetVlanClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.VlanClassName) {
		return nil, false
	}
	return o.VlanClassName, true
}

// HasVlanClassName returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasVlanClassName() bool {
	if o != nil && !IsNil(o.VlanClassName) {
		return true
	}

	return false
}

// SetVlanClassName gets a reference to the given string and assigns it to the VlanClassName field.
func (o *DataInnerVlanVlanData) SetVlanClassName(v string) {
	o.VlanClassName = &v
}

// GetVlanClassParameters returns the VlanClassParameters field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetVlanClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.VlanClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.VlanClassParameters
}

// GetVlanClassParametersOk returns a tuple with the VlanClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetVlanClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.VlanClassParameters) {
		return nil, false
	}
	return o.VlanClassParameters, true
}

// HasVlanClassParameters returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasVlanClassParameters() bool {
	if o != nil && !IsNil(o.VlanClassParameters) {
		return true
	}

	return false
}

// SetVlanClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the VlanClassParameters field.
func (o *DataInnerVlanVlanData) SetVlanClassParameters(v []ApiClassParameterOutputEntry) {
	o.VlanClassParameters = v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetVlanId() string {
	if o == nil || IsNil(o.VlanId) {
		var ret string
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given string and assigns it to the VlanId field.
func (o *DataInnerVlanVlanData) SetVlanId(v string) {
	o.VlanId = &v
}

// GetVlanName returns the VlanName field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetVlanName() string {
	if o == nil || IsNil(o.VlanName) {
		var ret string
		return ret
	}
	return *o.VlanName
}

// GetVlanNameOk returns a tuple with the VlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetVlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.VlanName) {
		return nil, false
	}
	return o.VlanName, true
}

// HasVlanName returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasVlanName() bool {
	if o != nil && !IsNil(o.VlanName) {
		return true
	}

	return false
}

// SetVlanName gets a reference to the given string and assigns it to the VlanName field.
func (o *DataInnerVlanVlanData) SetVlanName(v string) {
	o.VlanName = &v
}

// GetVlanVlanId returns the VlanVlanId field value if set, zero value otherwise.
func (o *DataInnerVlanVlanData) GetVlanVlanId() string {
	if o == nil || IsNil(o.VlanVlanId) {
		var ret string
		return ret
	}
	return *o.VlanVlanId
}

// GetVlanVlanIdOk returns a tuple with the VlanVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerVlanVlanData) GetVlanVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.VlanVlanId) {
		return nil, false
	}
	return o.VlanVlanId, true
}

// HasVlanVlanId returns a boolean if a field has been set.
func (o *DataInnerVlanVlanData) HasVlanVlanId() bool {
	if o != nil && !IsNil(o.VlanVlanId) {
		return true
	}

	return false
}

// SetVlanVlanId gets a reference to the given string and assigns it to the VlanVlanId field.
func (o *DataInnerVlanVlanData) SetVlanVlanId(v string) {
	o.VlanVlanId = &v
}

func (o DataInnerVlanVlanData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerVlanVlanData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FreeEndVlanId) {
		toSerialize["free_end_vlan_id"] = o.FreeEndVlanId
	}
	if !IsNil(o.FreeStartVlanId) {
		toSerialize["free_start_vlan_id"] = o.FreeStartVlanId
	}
	if !IsNil(o.DomainSupportVxlan) {
		toSerialize["domain_support_vxlan"] = o.DomainSupportVxlan
	}
	if !IsNil(o.VlanType) {
		toSerialize["vlan_type"] = o.VlanType
	}
	if !IsNil(o.DomainClassName) {
		toSerialize["domain_class_name"] = o.DomainClassName
	}
	if !IsNil(o.DomainClassParameters) {
		toSerialize["domain_class_parameters"] = o.DomainClassParameters
	}
	if !IsNil(o.DomainDescription) {
		toSerialize["domain_description"] = o.DomainDescription
	}
	if !IsNil(o.DomainEndVlanId) {
		toSerialize["domain_end_vlan_id"] = o.DomainEndVlanId
	}
	if !IsNil(o.DomainId) {
		toSerialize["domain_id"] = o.DomainId
	}
	if !IsNil(o.DomainName) {
		toSerialize["domain_name"] = o.DomainName
	}
	if !IsNil(o.DomainStartVlanId) {
		toSerialize["domain_start_vlan_id"] = o.DomainStartVlanId
	}
	if !IsNil(o.RangeClassName) {
		toSerialize["range_class_name"] = o.RangeClassName
	}
	if !IsNil(o.RangeClassParameters) {
		toSerialize["range_class_parameters"] = o.RangeClassParameters
	}
	if !IsNil(o.RangeDescription) {
		toSerialize["range_description"] = o.RangeDescription
	}
	if !IsNil(o.RangeEndVlanId) {
		toSerialize["range_end_vlan_id"] = o.RangeEndVlanId
	}
	if !IsNil(o.RangeId) {
		toSerialize["range_id"] = o.RangeId
	}
	if !IsNil(o.RangeName) {
		toSerialize["range_name"] = o.RangeName
	}
	if !IsNil(o.RangeStartVlanId) {
		toSerialize["range_start_vlan_id"] = o.RangeStartVlanId
	}
	if !IsNil(o.VlanClassName) {
		toSerialize["vlan_class_name"] = o.VlanClassName
	}
	if !IsNil(o.VlanClassParameters) {
		toSerialize["vlan_class_parameters"] = o.VlanClassParameters
	}
	if !IsNil(o.VlanId) {
		toSerialize["vlan_id"] = o.VlanId
	}
	if !IsNil(o.VlanName) {
		toSerialize["vlan_name"] = o.VlanName
	}
	if !IsNil(o.VlanVlanId) {
		toSerialize["vlan_vlan_id"] = o.VlanVlanId
	}
	return toSerialize, nil
}

type NullableDataInnerVlanVlanData struct {
	value *DataInnerVlanVlanData
	isSet bool
}

func (v NullableDataInnerVlanVlanData) Get() *DataInnerVlanVlanData {
	return v.value
}

func (v *NullableDataInnerVlanVlanData) Set(val *DataInnerVlanVlanData) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerVlanVlanData) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerVlanVlanData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerVlanVlanData(val *DataInnerVlanVlanData) *NullableDataInnerVlanVlanData {
	return &NullableDataInnerVlanVlanData{value: val, isSet: true}
}

func (v NullableDataInnerVlanVlanData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerVlanVlanData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
