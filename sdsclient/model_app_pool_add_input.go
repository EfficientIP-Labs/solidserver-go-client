/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the AppPoolAddInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPoolAddInput{}

// AppPoolAddInput struct for AppPoolAddInput
type AppPoolAddInput struct {
	// The Fully Qualified Domain Name (FQDN) of the application the object belongs to.
	ApplicationFqdn *string `json:"application_fqdn,omitempty"`
	// The database identifier (ID) of the application the object belongs to.
	ApplicationId *int32 `json:"application_id,omitempty"`
	// The name of the application the object belongs to.
	ApplicationName *string `json:"application_name,omitempty"`
	// The load-balancing mode of the pool.
	PoolLbMode *string `json:"pool_lb_mode,omitempty"`
	// The name of the pool.
	PoolName *string `json:"pool_name,omitempty"`
	// The type of the pool.
	PoolType *string `json:"pool_type,omitempty"`
	// The session duration, in seconds. You only need to set it if the parameter <b>pool_affinity_state</b> is set to <b>1</b>.
	PoolAffinitySessionTime *int32 `json:"pool_affinity_session_time,omitempty"`
	// The session affinity activation status.
	PoolAffinityState *int32 `json:"pool_affinity_state,omitempty"`
	// The database identifier (ID) of the GSLB server associated with the application, a unique numeric key value automatically incremented when you add the server. Use it to identify the GSLB server of your choice.
	GslbserverId *int32 `json:"gslbserver_id,omitempty"`
	// The maximum number of active nodes with the lowest latency that must answer the queries made to the application FQDN. You only need to set it if you set the <b>pool_lb_mode</b> to <b>latency</b>.
	PoolBestActiveNodes *int32 `json:"pool_best_active_nodes,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewAppPoolAddInput instantiates a new AppPoolAddInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPoolAddInput() *AppPoolAddInput {
	this := AppPoolAddInput{}
	return &this
}

// NewAppPoolAddInputWithDefaults instantiates a new AppPoolAddInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPoolAddInputWithDefaults() *AppPoolAddInput {
	this := AppPoolAddInput{}
	return &this
}

// GetApplicationFqdn returns the ApplicationFqdn field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetApplicationFqdn() string {
	if o == nil || IsNil(o.ApplicationFqdn) {
		var ret string
		return ret
	}
	return *o.ApplicationFqdn
}

// GetApplicationFqdnOk returns a tuple with the ApplicationFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetApplicationFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationFqdn) {
		return nil, false
	}
	return o.ApplicationFqdn, true
}

// HasApplicationFqdn returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasApplicationFqdn() bool {
	if o != nil && !IsNil(o.ApplicationFqdn) {
		return true
	}

	return false
}

// SetApplicationFqdn gets a reference to the given string and assigns it to the ApplicationFqdn field.
func (o *AppPoolAddInput) SetApplicationFqdn(v string) {
	o.ApplicationFqdn = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetApplicationId() int32 {
	if o == nil || IsNil(o.ApplicationId) {
		var ret int32
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetApplicationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given int32 and assigns it to the ApplicationId field.
func (o *AppPoolAddInput) SetApplicationId(v int32) {
	o.ApplicationId = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *AppPoolAddInput) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetPoolLbMode returns the PoolLbMode field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetPoolLbMode() string {
	if o == nil || IsNil(o.PoolLbMode) {
		var ret string
		return ret
	}
	return *o.PoolLbMode
}

// GetPoolLbModeOk returns a tuple with the PoolLbMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetPoolLbModeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolLbMode) {
		return nil, false
	}
	return o.PoolLbMode, true
}

// HasPoolLbMode returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasPoolLbMode() bool {
	if o != nil && !IsNil(o.PoolLbMode) {
		return true
	}

	return false
}

// SetPoolLbMode gets a reference to the given string and assigns it to the PoolLbMode field.
func (o *AppPoolAddInput) SetPoolLbMode(v string) {
	o.PoolLbMode = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetPoolName() string {
	if o == nil || IsNil(o.PoolName) {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolName) {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasPoolName() bool {
	if o != nil && !IsNil(o.PoolName) {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *AppPoolAddInput) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPoolType returns the PoolType field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetPoolType() string {
	if o == nil || IsNil(o.PoolType) {
		var ret string
		return ret
	}
	return *o.PoolType
}

// GetPoolTypeOk returns a tuple with the PoolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetPoolTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolType) {
		return nil, false
	}
	return o.PoolType, true
}

// HasPoolType returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasPoolType() bool {
	if o != nil && !IsNil(o.PoolType) {
		return true
	}

	return false
}

// SetPoolType gets a reference to the given string and assigns it to the PoolType field.
func (o *AppPoolAddInput) SetPoolType(v string) {
	o.PoolType = &v
}

// GetPoolAffinitySessionTime returns the PoolAffinitySessionTime field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetPoolAffinitySessionTime() int32 {
	if o == nil || IsNil(o.PoolAffinitySessionTime) {
		var ret int32
		return ret
	}
	return *o.PoolAffinitySessionTime
}

// GetPoolAffinitySessionTimeOk returns a tuple with the PoolAffinitySessionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetPoolAffinitySessionTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PoolAffinitySessionTime) {
		return nil, false
	}
	return o.PoolAffinitySessionTime, true
}

// HasPoolAffinitySessionTime returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasPoolAffinitySessionTime() bool {
	if o != nil && !IsNil(o.PoolAffinitySessionTime) {
		return true
	}

	return false
}

// SetPoolAffinitySessionTime gets a reference to the given int32 and assigns it to the PoolAffinitySessionTime field.
func (o *AppPoolAddInput) SetPoolAffinitySessionTime(v int32) {
	o.PoolAffinitySessionTime = &v
}

// GetPoolAffinityState returns the PoolAffinityState field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetPoolAffinityState() int32 {
	if o == nil || IsNil(o.PoolAffinityState) {
		var ret int32
		return ret
	}
	return *o.PoolAffinityState
}

// GetPoolAffinityStateOk returns a tuple with the PoolAffinityState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetPoolAffinityStateOk() (*int32, bool) {
	if o == nil || IsNil(o.PoolAffinityState) {
		return nil, false
	}
	return o.PoolAffinityState, true
}

// HasPoolAffinityState returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasPoolAffinityState() bool {
	if o != nil && !IsNil(o.PoolAffinityState) {
		return true
	}

	return false
}

// SetPoolAffinityState gets a reference to the given int32 and assigns it to the PoolAffinityState field.
func (o *AppPoolAddInput) SetPoolAffinityState(v int32) {
	o.PoolAffinityState = &v
}

// GetGslbserverId returns the GslbserverId field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetGslbserverId() int32 {
	if o == nil || IsNil(o.GslbserverId) {
		var ret int32
		return ret
	}
	return *o.GslbserverId
}

// GetGslbserverIdOk returns a tuple with the GslbserverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetGslbserverIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GslbserverId) {
		return nil, false
	}
	return o.GslbserverId, true
}

// HasGslbserverId returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasGslbserverId() bool {
	if o != nil && !IsNil(o.GslbserverId) {
		return true
	}

	return false
}

// SetGslbserverId gets a reference to the given int32 and assigns it to the GslbserverId field.
func (o *AppPoolAddInput) SetGslbserverId(v int32) {
	o.GslbserverId = &v
}

// GetPoolBestActiveNodes returns the PoolBestActiveNodes field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetPoolBestActiveNodes() int32 {
	if o == nil || IsNil(o.PoolBestActiveNodes) {
		var ret int32
		return ret
	}
	return *o.PoolBestActiveNodes
}

// GetPoolBestActiveNodesOk returns a tuple with the PoolBestActiveNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetPoolBestActiveNodesOk() (*int32, bool) {
	if o == nil || IsNil(o.PoolBestActiveNodes) {
		return nil, false
	}
	return o.PoolBestActiveNodes, true
}

// HasPoolBestActiveNodes returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasPoolBestActiveNodes() bool {
	if o != nil && !IsNil(o.PoolBestActiveNodes) {
		return true
	}

	return false
}

// SetPoolBestActiveNodes gets a reference to the given int32 and assigns it to the PoolBestActiveNodes field.
func (o *AppPoolAddInput) SetPoolBestActiveNodes(v int32) {
	o.PoolBestActiveNodes = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AppPoolAddInput) GetWarnings() string {
	if o == nil || IsNil(o.Warnings) {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPoolAddInput) GetWarningsOk() (*string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AppPoolAddInput) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *AppPoolAddInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o AppPoolAddInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPoolAddInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationFqdn) {
		toSerialize["application_fqdn"] = o.ApplicationFqdn
	}
	if !IsNil(o.ApplicationId) {
		toSerialize["application_id"] = o.ApplicationId
	}
	if !IsNil(o.ApplicationName) {
		toSerialize["application_name"] = o.ApplicationName
	}
	if !IsNil(o.PoolLbMode) {
		toSerialize["pool_lb_mode"] = o.PoolLbMode
	}
	if !IsNil(o.PoolName) {
		toSerialize["pool_name"] = o.PoolName
	}
	if !IsNil(o.PoolType) {
		toSerialize["pool_type"] = o.PoolType
	}
	if !IsNil(o.PoolAffinitySessionTime) {
		toSerialize["pool_affinity_session_time"] = o.PoolAffinitySessionTime
	}
	if !IsNil(o.PoolAffinityState) {
		toSerialize["pool_affinity_state"] = o.PoolAffinityState
	}
	if !IsNil(o.GslbserverId) {
		toSerialize["gslbserver_id"] = o.GslbserverId
	}
	if !IsNil(o.PoolBestActiveNodes) {
		toSerialize["pool_best_active_nodes"] = o.PoolBestActiveNodes
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableAppPoolAddInput struct {
	value *AppPoolAddInput
	isSet bool
}

func (v NullableAppPoolAddInput) Get() *AppPoolAddInput {
	return v.value
}

func (v *NullableAppPoolAddInput) Set(val *AppPoolAddInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPoolAddInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPoolAddInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPoolAddInput(val *AppPoolAddInput) *NullableAppPoolAddInput {
	return &NullableAppPoolAddInput{value: val, isSet: true}
}

func (v NullableAppPoolAddInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPoolAddInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
