/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DhcpStatic6AddInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DhcpStatic6AddInput{}

// DhcpStatic6AddInput struct for DhcpStatic6AddInput
type DhcpStatic6AddInput struct {
	// The database identifier (ID) of the DHCPv6 server, a unique numeric key value automatically incremented when you add a DHCPv6 server. Use the ID to specify the DHCPv6 server of your choice.
	Server6Id *int32 `json:"server6_id,omitempty"`
	// The name of the DHCPv6 server.
	Server6Name *string `json:"server6_name,omitempty"`
	// The client DHCP Unique Identifier (DUID) associated with the DHCPv6 static.
	Static6ClientDuid *string `json:"static6_client_duid,omitempty"`
	// The MAC address you want to associate with the IPv6 static.
	Static6MacAddr *string `json:"static6_mac_addr,omitempty"`
	// The name of the DHCPv6 static, each DHCPv6 static must have a unique name.
	Static6Name *string `json:"static6_name,omitempty"`
	// The IP address of the DHCP server.
	Server6Hostaddr *string `json:"server6_hostaddr,omitempty"`
	// The database identifier (ID) of the DHCPv6 group, a unique numeric key value automatically incremented when you add a DHCPv6 group. Use the ID to specify the DHCPv6 group of your choice.
	Group6Id *int32 `json:"group6_id,omitempty"`
	// The name of the DHCPv6 group.
	Group6Name *string `json:"group6_name,omitempty"`
	// The IP address associated with the DHCPv6 static.
	Static6Addr *string `json:"static6_addr,omitempty"`
	// The IP address of the delegated prefix of the DHCPv6 static.
	Static6Prefix6 *string `json:"static6_prefix6,omitempty"`
	// The prefix of the delegated prefix of the DHCPv6 static.
	Static6Prefix6Addr *string `json:"static6_prefix6_addr,omitempty"`
	// The IP address and prefix of the delegated prefix of the DHCPv6 static. You must specify them as follows: <b>&lt;IPv6-address&gt;/&lt;prefix&gt;</b>.
	Static6Prefix6Prefix *int32 `json:"static6_prefix6_prefix,omitempty"`
	// class parameters you want to delete from the object
	ClassParametersToDelete []string `json:"class_parameters_to_delete,omitempty"`
	// The name of the class to apply to the object you are adding. You must specify the class file directory, e.g. <b>my_directory/my_class.class</b> . You cannot use the classes <b>global</b> and <b>default</b>, they are reserved by the system.
	Static6ClassName *string `json:"static6_class_name,omitempty"`
	// class parameters in json format
	Static6ClassParameters []ApiClassParameterInputEntry `json:"static6_class_parameters,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewDhcpStatic6AddInput instantiates a new DhcpStatic6AddInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpStatic6AddInput() *DhcpStatic6AddInput {
	this := DhcpStatic6AddInput{}
	return &this
}

// NewDhcpStatic6AddInputWithDefaults instantiates a new DhcpStatic6AddInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpStatic6AddInputWithDefaults() *DhcpStatic6AddInput {
	this := DhcpStatic6AddInput{}
	return &this
}

// GetServer6Id returns the Server6Id field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetServer6Id() int32 {
	if o == nil || IsNil(o.Server6Id) {
		var ret int32
		return ret
	}
	return *o.Server6Id
}

// GetServer6IdOk returns a tuple with the Server6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetServer6IdOk() (*int32, bool) {
	if o == nil || IsNil(o.Server6Id) {
		return nil, false
	}
	return o.Server6Id, true
}

// HasServer6Id returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasServer6Id() bool {
	if o != nil && !IsNil(o.Server6Id) {
		return true
	}

	return false
}

// SetServer6Id gets a reference to the given int32 and assigns it to the Server6Id field.
func (o *DhcpStatic6AddInput) SetServer6Id(v int32) {
	o.Server6Id = &v
}

// GetServer6Name returns the Server6Name field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetServer6Name() string {
	if o == nil || IsNil(o.Server6Name) {
		var ret string
		return ret
	}
	return *o.Server6Name
}

// GetServer6NameOk returns a tuple with the Server6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetServer6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Name) {
		return nil, false
	}
	return o.Server6Name, true
}

// HasServer6Name returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasServer6Name() bool {
	if o != nil && !IsNil(o.Server6Name) {
		return true
	}

	return false
}

// SetServer6Name gets a reference to the given string and assigns it to the Server6Name field.
func (o *DhcpStatic6AddInput) SetServer6Name(v string) {
	o.Server6Name = &v
}

// GetStatic6ClientDuid returns the Static6ClientDuid field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6ClientDuid() string {
	if o == nil || IsNil(o.Static6ClientDuid) {
		var ret string
		return ret
	}
	return *o.Static6ClientDuid
}

// GetStatic6ClientDuidOk returns a tuple with the Static6ClientDuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6ClientDuidOk() (*string, bool) {
	if o == nil || IsNil(o.Static6ClientDuid) {
		return nil, false
	}
	return o.Static6ClientDuid, true
}

// HasStatic6ClientDuid returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6ClientDuid() bool {
	if o != nil && !IsNil(o.Static6ClientDuid) {
		return true
	}

	return false
}

// SetStatic6ClientDuid gets a reference to the given string and assigns it to the Static6ClientDuid field.
func (o *DhcpStatic6AddInput) SetStatic6ClientDuid(v string) {
	o.Static6ClientDuid = &v
}

// GetStatic6MacAddr returns the Static6MacAddr field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6MacAddr() string {
	if o == nil || IsNil(o.Static6MacAddr) {
		var ret string
		return ret
	}
	return *o.Static6MacAddr
}

// GetStatic6MacAddrOk returns a tuple with the Static6MacAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6MacAddrOk() (*string, bool) {
	if o == nil || IsNil(o.Static6MacAddr) {
		return nil, false
	}
	return o.Static6MacAddr, true
}

// HasStatic6MacAddr returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6MacAddr() bool {
	if o != nil && !IsNil(o.Static6MacAddr) {
		return true
	}

	return false
}

// SetStatic6MacAddr gets a reference to the given string and assigns it to the Static6MacAddr field.
func (o *DhcpStatic6AddInput) SetStatic6MacAddr(v string) {
	o.Static6MacAddr = &v
}

// GetStatic6Name returns the Static6Name field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6Name() string {
	if o == nil || IsNil(o.Static6Name) {
		var ret string
		return ret
	}
	return *o.Static6Name
}

// GetStatic6NameOk returns a tuple with the Static6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Static6Name) {
		return nil, false
	}
	return o.Static6Name, true
}

// HasStatic6Name returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6Name() bool {
	if o != nil && !IsNil(o.Static6Name) {
		return true
	}

	return false
}

// SetStatic6Name gets a reference to the given string and assigns it to the Static6Name field.
func (o *DhcpStatic6AddInput) SetStatic6Name(v string) {
	o.Static6Name = &v
}

// GetServer6Hostaddr returns the Server6Hostaddr field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetServer6Hostaddr() string {
	if o == nil || IsNil(o.Server6Hostaddr) {
		var ret string
		return ret
	}
	return *o.Server6Hostaddr
}

// GetServer6HostaddrOk returns a tuple with the Server6Hostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetServer6HostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.Server6Hostaddr) {
		return nil, false
	}
	return o.Server6Hostaddr, true
}

// HasServer6Hostaddr returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasServer6Hostaddr() bool {
	if o != nil && !IsNil(o.Server6Hostaddr) {
		return true
	}

	return false
}

// SetServer6Hostaddr gets a reference to the given string and assigns it to the Server6Hostaddr field.
func (o *DhcpStatic6AddInput) SetServer6Hostaddr(v string) {
	o.Server6Hostaddr = &v
}

// GetGroup6Id returns the Group6Id field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetGroup6Id() int32 {
	if o == nil || IsNil(o.Group6Id) {
		var ret int32
		return ret
	}
	return *o.Group6Id
}

// GetGroup6IdOk returns a tuple with the Group6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetGroup6IdOk() (*int32, bool) {
	if o == nil || IsNil(o.Group6Id) {
		return nil, false
	}
	return o.Group6Id, true
}

// HasGroup6Id returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasGroup6Id() bool {
	if o != nil && !IsNil(o.Group6Id) {
		return true
	}

	return false
}

// SetGroup6Id gets a reference to the given int32 and assigns it to the Group6Id field.
func (o *DhcpStatic6AddInput) SetGroup6Id(v int32) {
	o.Group6Id = &v
}

// GetGroup6Name returns the Group6Name field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetGroup6Name() string {
	if o == nil || IsNil(o.Group6Name) {
		var ret string
		return ret
	}
	return *o.Group6Name
}

// GetGroup6NameOk returns a tuple with the Group6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetGroup6NameOk() (*string, bool) {
	if o == nil || IsNil(o.Group6Name) {
		return nil, false
	}
	return o.Group6Name, true
}

// HasGroup6Name returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasGroup6Name() bool {
	if o != nil && !IsNil(o.Group6Name) {
		return true
	}

	return false
}

// SetGroup6Name gets a reference to the given string and assigns it to the Group6Name field.
func (o *DhcpStatic6AddInput) SetGroup6Name(v string) {
	o.Group6Name = &v
}

// GetStatic6Addr returns the Static6Addr field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6Addr() string {
	if o == nil || IsNil(o.Static6Addr) {
		var ret string
		return ret
	}
	return *o.Static6Addr
}

// GetStatic6AddrOk returns a tuple with the Static6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Static6Addr) {
		return nil, false
	}
	return o.Static6Addr, true
}

// HasStatic6Addr returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6Addr() bool {
	if o != nil && !IsNil(o.Static6Addr) {
		return true
	}

	return false
}

// SetStatic6Addr gets a reference to the given string and assigns it to the Static6Addr field.
func (o *DhcpStatic6AddInput) SetStatic6Addr(v string) {
	o.Static6Addr = &v
}

// GetStatic6Prefix6 returns the Static6Prefix6 field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6Prefix6() string {
	if o == nil || IsNil(o.Static6Prefix6) {
		var ret string
		return ret
	}
	return *o.Static6Prefix6
}

// GetStatic6Prefix6Ok returns a tuple with the Static6Prefix6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6Prefix6Ok() (*string, bool) {
	if o == nil || IsNil(o.Static6Prefix6) {
		return nil, false
	}
	return o.Static6Prefix6, true
}

// HasStatic6Prefix6 returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6Prefix6() bool {
	if o != nil && !IsNil(o.Static6Prefix6) {
		return true
	}

	return false
}

// SetStatic6Prefix6 gets a reference to the given string and assigns it to the Static6Prefix6 field.
func (o *DhcpStatic6AddInput) SetStatic6Prefix6(v string) {
	o.Static6Prefix6 = &v
}

// GetStatic6Prefix6Addr returns the Static6Prefix6Addr field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6Prefix6Addr() string {
	if o == nil || IsNil(o.Static6Prefix6Addr) {
		var ret string
		return ret
	}
	return *o.Static6Prefix6Addr
}

// GetStatic6Prefix6AddrOk returns a tuple with the Static6Prefix6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6Prefix6AddrOk() (*string, bool) {
	if o == nil || IsNil(o.Static6Prefix6Addr) {
		return nil, false
	}
	return o.Static6Prefix6Addr, true
}

// HasStatic6Prefix6Addr returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6Prefix6Addr() bool {
	if o != nil && !IsNil(o.Static6Prefix6Addr) {
		return true
	}

	return false
}

// SetStatic6Prefix6Addr gets a reference to the given string and assigns it to the Static6Prefix6Addr field.
func (o *DhcpStatic6AddInput) SetStatic6Prefix6Addr(v string) {
	o.Static6Prefix6Addr = &v
}

// GetStatic6Prefix6Prefix returns the Static6Prefix6Prefix field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6Prefix6Prefix() int32 {
	if o == nil || IsNil(o.Static6Prefix6Prefix) {
		var ret int32
		return ret
	}
	return *o.Static6Prefix6Prefix
}

// GetStatic6Prefix6PrefixOk returns a tuple with the Static6Prefix6Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6Prefix6PrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.Static6Prefix6Prefix) {
		return nil, false
	}
	return o.Static6Prefix6Prefix, true
}

// HasStatic6Prefix6Prefix returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6Prefix6Prefix() bool {
	if o != nil && !IsNil(o.Static6Prefix6Prefix) {
		return true
	}

	return false
}

// SetStatic6Prefix6Prefix gets a reference to the given int32 and assigns it to the Static6Prefix6Prefix field.
func (o *DhcpStatic6AddInput) SetStatic6Prefix6Prefix(v int32) {
	o.Static6Prefix6Prefix = &v
}

// GetClassParametersToDelete returns the ClassParametersToDelete field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetClassParametersToDelete() []string {
	if o == nil || IsNil(o.ClassParametersToDelete) {
		var ret []string
		return ret
	}
	return o.ClassParametersToDelete
}

// GetClassParametersToDeleteOk returns a tuple with the ClassParametersToDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetClassParametersToDeleteOk() ([]string, bool) {
	if o == nil || IsNil(o.ClassParametersToDelete) {
		return nil, false
	}
	return o.ClassParametersToDelete, true
}

// HasClassParametersToDelete returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasClassParametersToDelete() bool {
	if o != nil && !IsNil(o.ClassParametersToDelete) {
		return true
	}

	return false
}

// SetClassParametersToDelete gets a reference to the given []string and assigns it to the ClassParametersToDelete field.
func (o *DhcpStatic6AddInput) SetClassParametersToDelete(v []string) {
	o.ClassParametersToDelete = v
}

// GetStatic6ClassName returns the Static6ClassName field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6ClassName() string {
	if o == nil || IsNil(o.Static6ClassName) {
		var ret string
		return ret
	}
	return *o.Static6ClassName
}

// GetStatic6ClassNameOk returns a tuple with the Static6ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6ClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.Static6ClassName) {
		return nil, false
	}
	return o.Static6ClassName, true
}

// HasStatic6ClassName returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6ClassName() bool {
	if o != nil && !IsNil(o.Static6ClassName) {
		return true
	}

	return false
}

// SetStatic6ClassName gets a reference to the given string and assigns it to the Static6ClassName field.
func (o *DhcpStatic6AddInput) SetStatic6ClassName(v string) {
	o.Static6ClassName = &v
}

// GetStatic6ClassParameters returns the Static6ClassParameters field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetStatic6ClassParameters() []ApiClassParameterInputEntry {
	if o == nil || IsNil(o.Static6ClassParameters) {
		var ret []ApiClassParameterInputEntry
		return ret
	}
	return o.Static6ClassParameters
}

// GetStatic6ClassParametersOk returns a tuple with the Static6ClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetStatic6ClassParametersOk() ([]ApiClassParameterInputEntry, bool) {
	if o == nil || IsNil(o.Static6ClassParameters) {
		return nil, false
	}
	return o.Static6ClassParameters, true
}

// HasStatic6ClassParameters returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasStatic6ClassParameters() bool {
	if o != nil && !IsNil(o.Static6ClassParameters) {
		return true
	}

	return false
}

// SetStatic6ClassParameters gets a reference to the given []ApiClassParameterInputEntry and assigns it to the Static6ClassParameters field.
func (o *DhcpStatic6AddInput) SetStatic6ClassParameters(v []ApiClassParameterInputEntry) {
	o.Static6ClassParameters = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *DhcpStatic6AddInput) GetWarnings() string {
	if o == nil || IsNil(o.Warnings) {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpStatic6AddInput) GetWarningsOk() (*string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *DhcpStatic6AddInput) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *DhcpStatic6AddInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o DhcpStatic6AddInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DhcpStatic6AddInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server6Id) {
		toSerialize["server6_id"] = o.Server6Id
	}
	if !IsNil(o.Server6Name) {
		toSerialize["server6_name"] = o.Server6Name
	}
	if !IsNil(o.Static6ClientDuid) {
		toSerialize["static6_client_duid"] = o.Static6ClientDuid
	}
	if !IsNil(o.Static6MacAddr) {
		toSerialize["static6_mac_addr"] = o.Static6MacAddr
	}
	if !IsNil(o.Static6Name) {
		toSerialize["static6_name"] = o.Static6Name
	}
	if !IsNil(o.Server6Hostaddr) {
		toSerialize["server6_hostaddr"] = o.Server6Hostaddr
	}
	if !IsNil(o.Group6Id) {
		toSerialize["group6_id"] = o.Group6Id
	}
	if !IsNil(o.Group6Name) {
		toSerialize["group6_name"] = o.Group6Name
	}
	if !IsNil(o.Static6Addr) {
		toSerialize["static6_addr"] = o.Static6Addr
	}
	if !IsNil(o.Static6Prefix6) {
		toSerialize["static6_prefix6"] = o.Static6Prefix6
	}
	if !IsNil(o.Static6Prefix6Addr) {
		toSerialize["static6_prefix6_addr"] = o.Static6Prefix6Addr
	}
	if !IsNil(o.Static6Prefix6Prefix) {
		toSerialize["static6_prefix6_prefix"] = o.Static6Prefix6Prefix
	}
	if !IsNil(o.ClassParametersToDelete) {
		toSerialize["class_parameters_to_delete"] = o.ClassParametersToDelete
	}
	if !IsNil(o.Static6ClassName) {
		toSerialize["static6_class_name"] = o.Static6ClassName
	}
	if !IsNil(o.Static6ClassParameters) {
		toSerialize["static6_class_parameters"] = o.Static6ClassParameters
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableDhcpStatic6AddInput struct {
	value *DhcpStatic6AddInput
	isSet bool
}

func (v NullableDhcpStatic6AddInput) Get() *DhcpStatic6AddInput {
	return v.value
}

func (v *NullableDhcpStatic6AddInput) Set(val *DhcpStatic6AddInput) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpStatic6AddInput) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpStatic6AddInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpStatic6AddInput(val *DhcpStatic6AddInput) *NullableDhcpStatic6AddInput {
	return &NullableDhcpStatic6AddInput{value: val, isSet: true}
}

func (v NullableDhcpStatic6AddInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpStatic6AddInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
