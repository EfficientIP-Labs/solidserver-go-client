/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerIpamAddressData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerIpamAddressData{}

// DataInnerIpamAddressData struct for DataInnerIpamAddressData
type DataInnerIpamAddressData struct {
	// The database identifier (ID) of the DHCP static associated with the IP address.
	StaticId *string `json:"static_id,omitempty"`
	// The expiration time of the lease, if the IP address was imported from the DHCP, in decimal UNIX date format.
	LeaseEndTime *string `json:"lease_end_time,omitempty"`
	// The database identifier (ID) of the DHCP lease associated with the IP address.
	LeaseId *string `json:"lease_id,omitempty"`
	// An IP address in hexadecimal format. For addresses <b>In use</b> (<b>type</b><b>ip</b>), it returns the IP address itself.For free addresses (<b>type</b><b>free</b>), it returns the last IP address of a range of IPv4 addresses that are not assigned yet. The first address in that range is returned in <b>free_start_address_addr</b>.
	FreeEndAddressAddr *string `json:"free_end_address_addr,omitempty"`
	// The number of IP addresses that are not assigned yet (<b>type</b><b>free</b>) between <b>free_start_address_addr</b> and <b>free_end_address_addr</b>.
	FreeScopeSize *string `json:"free_scope_size,omitempty"`
	// An IP address in hexadecimal format. For addresses <b>In use</b> (<b>type</b><b>ip</b>), it returns the IP address itself.For free addresses (<b>type</b><b>free</b>), it returns the first IP address of a range of IPv4 addresses that are not assigned yet. The last address in that range is returned in <b>free_end_address_addr</b>.
	FreeStartAddressAddr *string `json:"free_start_address_addr,omitempty"`
	// The human readable version of the parameter <b>address_addr</b>.
	AddressHostaddr *string `json:"address_hostaddr,omitempty"`
	// The database identifier (ID) of the Device Manager device associated with the IP address.
	DeviceId *string `json:"device_id,omitempty"`
	// The name of the Device Manager device associated with the IP address.
	DeviceName *string `json:"device_name,omitempty"`
	// The database identifier (ID) of the Device Manager interface associated with the IP address.
	InterfaceId *string `json:"interface_id,omitempty"`
	// The name of the Device Manager interface associated with the IP address.
	InterfaceName *string `json:"interface_name,omitempty"`
	// The IPv4 address itself, in hexadecimal format.
	AddressAddr *string `json:"address_addr,omitempty"`
	// The name of the IPv4 alias(es) associated with the IPv4 address.
	AddressAlias *string `json:"address_alias,omitempty"`
	// The name of the class applied to the IPv4 address, it can be preceded by the class directory.
	AddressClassName *string `json:"address_class_name,omitempty"`
	// The class parameters applied to the IPv4 address.
	AddressClassParameters []ApiClassParameterOutputEntry `json:"address_class_parameters,omitempty"`
	// The database identifier (ID) of the IPv4 address.
	AddressId *string `json:"address_id,omitempty"`
	// The database identifier (ID) of the NetChange network device associated with the IP address.
	DevId *string `json:"dev_id,omitempty"`
	// The name of the NetChange network device associated with the IP address.
	DevName *string `json:"dev_name,omitempty"`
	// The VLAN identifier (ID) of the NetChange port, for IP addresses which MAC addresses is imported from NetChange.
	PortIfvlan *string `json:"port_ifvlan,omitempty"`
	// The name of the NetChange port associated with the IP address.
	PortName *string `json:"port_name,omitempty"`
	// The number of the port, for IP addresses which MAC addresses is imported from NetChange.
	PortPortnumber *string `json:"port_portnumber,omitempty"`
	// The slot number of the port, for IP addresses which MAC addresses is imported from NetChange.
	PortSlotnumber *string `json:"port_slotnumber,omitempty"`
	// The last time the MAC address associated with the IP address was seen on the network, in decimal UNIX date format.
	AddressMacLastSeen *string `json:"address_mac_last_seen,omitempty"`
	// A way to prevent <b>(1)</b> users from assigning the broadcast IP address and network IP address of the network the IP address belongs to.
	NetworkLockNetworkBroadcast *string `json:"network_lock_network_broadcast,omitempty"`
	// The MAC address associated with the IPv4 address.
	AddressMacAddr *string `json:"address_mac_addr,omitempty"`
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	AddressMultistatus *string `json:"address_multistatus,omitempty"`
	// The name of the IPv4 address.
	AddressName *string `json:"address_name,omitempty"`
	// The name of the class applied to the parent of the IPv4 network the object belongs to, it can be preceded by the class directory.
	ParentNetworkClassName *string `json:"parent_network_class_name,omitempty"`
	// The human readable version of the parameter <b>parent_network_end_address_addr</b>.
	ParentNetworkEndHostaddr *string `json:"parent_network_end_hostaddr,omitempty"`
	// The last IP address of the parent of the IPv4 network the IP address belongs to.
	ParentNetworkEndAddressAddr *string `json:"parent_network_end_address_addr,omitempty"`
	// The database identifier (ID) of the parent IPv4 network. It identifies the parent of the IPv4 network the object belongs to. <b>0</b> indicates that the network the object belongs to has no parent network.
	ParentNetworkId *string `json:"parent_network_id,omitempty"`
	// The name of the parent IPv4 network:<ul class=dashed ><li> <b>#</b> indicates that the network the object belongs to has no parent network.<br/></li><li> <b>Default</b> indicates that the network the object belongs to is in an orphan network.<br/></li></ul>
	ParentNetworkName *string `json:"parent_network_name,omitempty"`
	// The number of IP addresses of the parent of the network the object belongs to.
	ParentNetworkSize *string `json:"parent_network_size,omitempty"`
	// The human readable version of the parameter <b>parent_network_start_address_addr</b>.
	ParentNetworkStartHostaddr *string `json:"parent_network_start_hostaddr,omitempty"`
	// The first IP address of the parent of the IPv4 network the IP address belongs to.
	ParentNetworkStartAddressAddr *string `json:"parent_network_start_address_addr,omitempty"`
	// The database identifier (ID) of the IPv4 subnet-type network, located in the VLSM parent space, from which the parent of the network the IP address belongs to was duplicated. <b>0</b> indicates that the parent of the network the IP address belongs to is not a VLSM block-type network duplicated from a parent space.
	ParentVlsmNetworkId *string `json:"parent_vlsm_network_id,omitempty"`
	// The name of the class applied to the IPv4 pool the object belongs to, it can be preceded by the class directory.
	PoolClassName *string `json:"pool_class_name,omitempty"`
	// The class parameters applied to the IPv4 pool the object belongs to.
	PoolClassParameters []ApiClassParameterOutputEntry `json:"pool_class_parameters,omitempty"`
	// The last IP address of the IPv4 pool the IP address belongs to.
	PoolEndAddressAddr *string `json:"pool_end_address_addr,omitempty"`
	// The database identifier (ID) of the IPv4 pool the object belongs to.
	PoolId *string `json:"pool_id,omitempty"`
	// The name of the IPv4 pool the object belongs to.
	PoolName *string `json:"pool_name,omitempty"`
	// The reservation status of the pool the IPv4 address belongs to. If set <b>1</b>, the pool is reserved and you cannot assign the IP address.
	PoolReadOnly *string `json:"pool_read_only,omitempty"`
	// The number of IP addresses that contains the pool the IPv4 address belongs to.
	PoolSize *string `json:"pool_size,omitempty"`
	// The first IP address of the IPv4 pool the IP address belongs to.
	PoolStartAddressAddr *string `json:"pool_start_address_addr,omitempty"`
	// The name of the class applied to the space the object belongs to, it can be preceded by the class directory.
	SpaceClassName *string `json:"space_class_name,omitempty"`
	// The class parameters applied to the space the object belongs to.
	SpaceClassParameters []ApiClassParameterOutputEntry `json:"space_class_parameters,omitempty"`
	// The description of the space the object belongs to.
	SpaceDescription *string `json:"space_description,omitempty"`
	// The database identifier (ID) of the space the object belongs to, a unique numeric key value automatically incremented when you add a space.
	SpaceId *string `json:"space_id,omitempty"`
	// The template status of the space the object belongs to. If the space is used as template (1), all the IPv4 networks, pools and IP addresses it contains are also used as template.
	SpaceIsTemplate *string `json:"space_is_template,omitempty"`
	// The name of the space the object belongs to.
	SpaceName *string `json:"space_name,omitempty"`
	// The name of the class applied to the IPv4 network the object belongs to, it can be preceded by the class directory.
	NetworkClassName *string `json:"network_class_name,omitempty"`
	// The class parameters applied to the IPv4 network the object belongs to.
	NetworkClassParameters []ApiClassParameterOutputEntry `json:"network_class_parameters,omitempty"`
	// The human readable version of the parameter <b>network_end_address_addr</b>.
	NetworkEndHostaddr *string `json:"network_end_hostaddr,omitempty"`
	// The last IP address of the IPv4 network the object belongs to.
	NetworkEndAddressAddr *string `json:"network_end_address_addr,omitempty"`
	// The database identifier (ID) of the IPv4 network the object belongs to.
	NetworkId *string `json:"network_id,omitempty"`
	// A way to determine if the network the IP address belongs to is terminal (<b>1</b>) or non-terminal (<b>0</b>).
	NetworkIsTerminal *string `json:"network_is_terminal,omitempty"`
	// The name of the IPv4 network the object belongs to. <b>Default</b> indicates that the network the object belongs to is an orphan network.
	NetworkName *string `json:"network_name,omitempty"`
	// The number of IP addresses the network the object belongs to contains.
	NetworkSize *string `json:"network_size,omitempty"`
	// The human readable version of the parameter <b>network_start_address_addr</b>.
	NetworkStartHostaddr *string `json:"network_start_hostaddr,omitempty"`
	// The first IP address of the IPv4 network the object belongs to.
	NetworkStartAddressAddr *string `json:"network_start_address_addr,omitempty"`
	// A way to determine if the terminal network or pool the IP address belongs to is configured to Add a DHCP static (<b>1</b>) or not (<b>0</b>).
	TagContainerDhcpstatic *string `json:"tag_container_dhcpstatic,omitempty"`
	// A way to determine if the pool the IP address belongs to is configured to Create DHCP range (<b>1</b>) or not (<b>0</b>).
	TagPoolDhcprange *string `json:"tag_pool_dhcprange,omitempty"`
	// The creation date of the IPv4 address, in decimal UNIX date format.
	AddressOperationDetailsAddedOn *string `json:"address_operation_details_added_on,omitempty"`
	// The call stack of the IPv4 address operation details, as follows: <b>&lt;service1&gt;&amp;&lt;service2&gt;&amp;&lt;service3&gt;</b>... .
	AddressOperationDetailsCallStack *string `json:"address_operation_details_call_stack,omitempty"`
	// The name of the module where the IPv4 address addition originated.
	AddressOperationDetailsOriginModule *string `json:"address_operation_details_origin_module,omitempty"`
	// The login of the user who requested the IPv4 address.
	AddressOperationDetailsRequestedBy *string `json:"address_operation_details_requested_by,omitempty"`
	// The login of the user who added the IPv4 address.
	AddressOperationDetailsAddedBy *string `json:"address_operation_details_added_by,omitempty"`
	// The last time the IPv4 address was updated, in decimal UNIX date format.
	AddressOperationDetailsLastUpdatedOn *string `json:"address_operation_details_last_updated_on,omitempty"`
	// A way to determine if you can assign the IP address (<b>free</b>) or if it is In use (<b>ip</b>).
	AddressType *string `json:"address_type,omitempty"`
}

// NewDataInnerIpamAddressData instantiates a new DataInnerIpamAddressData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerIpamAddressData() *DataInnerIpamAddressData {
	this := DataInnerIpamAddressData{}
	return &this
}

// NewDataInnerIpamAddressDataWithDefaults instantiates a new DataInnerIpamAddressData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerIpamAddressDataWithDefaults() *DataInnerIpamAddressData {
	this := DataInnerIpamAddressData{}
	return &this
}

// GetStaticId returns the StaticId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetStaticId() string {
	if o == nil || IsNil(o.StaticId) {
		var ret string
		return ret
	}
	return *o.StaticId
}

// GetStaticIdOk returns a tuple with the StaticId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetStaticIdOk() (*string, bool) {
	if o == nil || IsNil(o.StaticId) {
		return nil, false
	}
	return o.StaticId, true
}

// HasStaticId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasStaticId() bool {
	if o != nil && !IsNil(o.StaticId) {
		return true
	}

	return false
}

// SetStaticId gets a reference to the given string and assigns it to the StaticId field.
func (o *DataInnerIpamAddressData) SetStaticId(v string) {
	o.StaticId = &v
}

// GetLeaseEndTime returns the LeaseEndTime field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetLeaseEndTime() string {
	if o == nil || IsNil(o.LeaseEndTime) {
		var ret string
		return ret
	}
	return *o.LeaseEndTime
}

// GetLeaseEndTimeOk returns a tuple with the LeaseEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetLeaseEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LeaseEndTime) {
		return nil, false
	}
	return o.LeaseEndTime, true
}

// HasLeaseEndTime returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasLeaseEndTime() bool {
	if o != nil && !IsNil(o.LeaseEndTime) {
		return true
	}

	return false
}

// SetLeaseEndTime gets a reference to the given string and assigns it to the LeaseEndTime field.
func (o *DataInnerIpamAddressData) SetLeaseEndTime(v string) {
	o.LeaseEndTime = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetLeaseId() string {
	if o == nil || IsNil(o.LeaseId) {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetLeaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeaseId) {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasLeaseId() bool {
	if o != nil && !IsNil(o.LeaseId) {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *DataInnerIpamAddressData) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetFreeEndAddressAddr returns the FreeEndAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetFreeEndAddressAddr() string {
	if o == nil || IsNil(o.FreeEndAddressAddr) {
		var ret string
		return ret
	}
	return *o.FreeEndAddressAddr
}

// GetFreeEndAddressAddrOk returns a tuple with the FreeEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetFreeEndAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.FreeEndAddressAddr) {
		return nil, false
	}
	return o.FreeEndAddressAddr, true
}

// HasFreeEndAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasFreeEndAddressAddr() bool {
	if o != nil && !IsNil(o.FreeEndAddressAddr) {
		return true
	}

	return false
}

// SetFreeEndAddressAddr gets a reference to the given string and assigns it to the FreeEndAddressAddr field.
func (o *DataInnerIpamAddressData) SetFreeEndAddressAddr(v string) {
	o.FreeEndAddressAddr = &v
}

// GetFreeScopeSize returns the FreeScopeSize field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetFreeScopeSize() string {
	if o == nil || IsNil(o.FreeScopeSize) {
		var ret string
		return ret
	}
	return *o.FreeScopeSize
}

// GetFreeScopeSizeOk returns a tuple with the FreeScopeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetFreeScopeSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FreeScopeSize) {
		return nil, false
	}
	return o.FreeScopeSize, true
}

// HasFreeScopeSize returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasFreeScopeSize() bool {
	if o != nil && !IsNil(o.FreeScopeSize) {
		return true
	}

	return false
}

// SetFreeScopeSize gets a reference to the given string and assigns it to the FreeScopeSize field.
func (o *DataInnerIpamAddressData) SetFreeScopeSize(v string) {
	o.FreeScopeSize = &v
}

// GetFreeStartAddressAddr returns the FreeStartAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetFreeStartAddressAddr() string {
	if o == nil || IsNil(o.FreeStartAddressAddr) {
		var ret string
		return ret
	}
	return *o.FreeStartAddressAddr
}

// GetFreeStartAddressAddrOk returns a tuple with the FreeStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetFreeStartAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.FreeStartAddressAddr) {
		return nil, false
	}
	return o.FreeStartAddressAddr, true
}

// HasFreeStartAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasFreeStartAddressAddr() bool {
	if o != nil && !IsNil(o.FreeStartAddressAddr) {
		return true
	}

	return false
}

// SetFreeStartAddressAddr gets a reference to the given string and assigns it to the FreeStartAddressAddr field.
func (o *DataInnerIpamAddressData) SetFreeStartAddressAddr(v string) {
	o.FreeStartAddressAddr = &v
}

// GetAddressHostaddr returns the AddressHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressHostaddr() string {
	if o == nil || IsNil(o.AddressHostaddr) {
		var ret string
		return ret
	}
	return *o.AddressHostaddr
}

// GetAddressHostaddrOk returns a tuple with the AddressHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.AddressHostaddr) {
		return nil, false
	}
	return o.AddressHostaddr, true
}

// HasAddressHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressHostaddr() bool {
	if o != nil && !IsNil(o.AddressHostaddr) {
		return true
	}

	return false
}

// SetAddressHostaddr gets a reference to the given string and assigns it to the AddressHostaddr field.
func (o *DataInnerIpamAddressData) SetAddressHostaddr(v string) {
	o.AddressHostaddr = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *DataInnerIpamAddressData) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *DataInnerIpamAddressData) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetInterfaceId() string {
	if o == nil || IsNil(o.InterfaceId) {
		var ret string
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetInterfaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given string and assigns it to the InterfaceId field.
func (o *DataInnerIpamAddressData) SetInterfaceId(v string) {
	o.InterfaceId = &v
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetInterfaceName() string {
	if o == nil || IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasInterfaceName() bool {
	if o != nil && !IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *DataInnerIpamAddressData) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

// GetAddressAddr returns the AddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressAddr() string {
	if o == nil || IsNil(o.AddressAddr) {
		var ret string
		return ret
	}
	return *o.AddressAddr
}

// GetAddressAddrOk returns a tuple with the AddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.AddressAddr) {
		return nil, false
	}
	return o.AddressAddr, true
}

// HasAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressAddr() bool {
	if o != nil && !IsNil(o.AddressAddr) {
		return true
	}

	return false
}

// SetAddressAddr gets a reference to the given string and assigns it to the AddressAddr field.
func (o *DataInnerIpamAddressData) SetAddressAddr(v string) {
	o.AddressAddr = &v
}

// GetAddressAlias returns the AddressAlias field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressAlias() string {
	if o == nil || IsNil(o.AddressAlias) {
		var ret string
		return ret
	}
	return *o.AddressAlias
}

// GetAddressAliasOk returns a tuple with the AddressAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressAliasOk() (*string, bool) {
	if o == nil || IsNil(o.AddressAlias) {
		return nil, false
	}
	return o.AddressAlias, true
}

// HasAddressAlias returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressAlias() bool {
	if o != nil && !IsNil(o.AddressAlias) {
		return true
	}

	return false
}

// SetAddressAlias gets a reference to the given string and assigns it to the AddressAlias field.
func (o *DataInnerIpamAddressData) SetAddressAlias(v string) {
	o.AddressAlias = &v
}

// GetAddressClassName returns the AddressClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressClassName() string {
	if o == nil || IsNil(o.AddressClassName) {
		var ret string
		return ret
	}
	return *o.AddressClassName
}

// GetAddressClassNameOk returns a tuple with the AddressClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.AddressClassName) {
		return nil, false
	}
	return o.AddressClassName, true
}

// HasAddressClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressClassName() bool {
	if o != nil && !IsNil(o.AddressClassName) {
		return true
	}

	return false
}

// SetAddressClassName gets a reference to the given string and assigns it to the AddressClassName field.
func (o *DataInnerIpamAddressData) SetAddressClassName(v string) {
	o.AddressClassName = &v
}

// GetAddressClassParameters returns the AddressClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.AddressClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.AddressClassParameters
}

// GetAddressClassParametersOk returns a tuple with the AddressClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.AddressClassParameters) {
		return nil, false
	}
	return o.AddressClassParameters, true
}

// HasAddressClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressClassParameters() bool {
	if o != nil && !IsNil(o.AddressClassParameters) {
		return true
	}

	return false
}

// SetAddressClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the AddressClassParameters field.
func (o *DataInnerIpamAddressData) SetAddressClassParameters(v []ApiClassParameterOutputEntry) {
	o.AddressClassParameters = v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressId() string {
	if o == nil || IsNil(o.AddressId) {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *DataInnerIpamAddressData) SetAddressId(v string) {
	o.AddressId = &v
}

// GetDevId returns the DevId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetDevId() string {
	if o == nil || IsNil(o.DevId) {
		var ret string
		return ret
	}
	return *o.DevId
}

// GetDevIdOk returns a tuple with the DevId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetDevIdOk() (*string, bool) {
	if o == nil || IsNil(o.DevId) {
		return nil, false
	}
	return o.DevId, true
}

// HasDevId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasDevId() bool {
	if o != nil && !IsNil(o.DevId) {
		return true
	}

	return false
}

// SetDevId gets a reference to the given string and assigns it to the DevId field.
func (o *DataInnerIpamAddressData) SetDevId(v string) {
	o.DevId = &v
}

// GetDevName returns the DevName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetDevName() string {
	if o == nil || IsNil(o.DevName) {
		var ret string
		return ret
	}
	return *o.DevName
}

// GetDevNameOk returns a tuple with the DevName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetDevNameOk() (*string, bool) {
	if o == nil || IsNil(o.DevName) {
		return nil, false
	}
	return o.DevName, true
}

// HasDevName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasDevName() bool {
	if o != nil && !IsNil(o.DevName) {
		return true
	}

	return false
}

// SetDevName gets a reference to the given string and assigns it to the DevName field.
func (o *DataInnerIpamAddressData) SetDevName(v string) {
	o.DevName = &v
}

// GetPortIfvlan returns the PortIfvlan field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPortIfvlan() string {
	if o == nil || IsNil(o.PortIfvlan) {
		var ret string
		return ret
	}
	return *o.PortIfvlan
}

// GetPortIfvlanOk returns a tuple with the PortIfvlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPortIfvlanOk() (*string, bool) {
	if o == nil || IsNil(o.PortIfvlan) {
		return nil, false
	}
	return o.PortIfvlan, true
}

// HasPortIfvlan returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPortIfvlan() bool {
	if o != nil && !IsNil(o.PortIfvlan) {
		return true
	}

	return false
}

// SetPortIfvlan gets a reference to the given string and assigns it to the PortIfvlan field.
func (o *DataInnerIpamAddressData) SetPortIfvlan(v string) {
	o.PortIfvlan = &v
}

// GetPortName returns the PortName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPortName() string {
	if o == nil || IsNil(o.PortName) {
		var ret string
		return ret
	}
	return *o.PortName
}

// GetPortNameOk returns a tuple with the PortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPortNameOk() (*string, bool) {
	if o == nil || IsNil(o.PortName) {
		return nil, false
	}
	return o.PortName, true
}

// HasPortName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPortName() bool {
	if o != nil && !IsNil(o.PortName) {
		return true
	}

	return false
}

// SetPortName gets a reference to the given string and assigns it to the PortName field.
func (o *DataInnerIpamAddressData) SetPortName(v string) {
	o.PortName = &v
}

// GetPortPortnumber returns the PortPortnumber field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPortPortnumber() string {
	if o == nil || IsNil(o.PortPortnumber) {
		var ret string
		return ret
	}
	return *o.PortPortnumber
}

// GetPortPortnumberOk returns a tuple with the PortPortnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPortPortnumberOk() (*string, bool) {
	if o == nil || IsNil(o.PortPortnumber) {
		return nil, false
	}
	return o.PortPortnumber, true
}

// HasPortPortnumber returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPortPortnumber() bool {
	if o != nil && !IsNil(o.PortPortnumber) {
		return true
	}

	return false
}

// SetPortPortnumber gets a reference to the given string and assigns it to the PortPortnumber field.
func (o *DataInnerIpamAddressData) SetPortPortnumber(v string) {
	o.PortPortnumber = &v
}

// GetPortSlotnumber returns the PortSlotnumber field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPortSlotnumber() string {
	if o == nil || IsNil(o.PortSlotnumber) {
		var ret string
		return ret
	}
	return *o.PortSlotnumber
}

// GetPortSlotnumberOk returns a tuple with the PortSlotnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPortSlotnumberOk() (*string, bool) {
	if o == nil || IsNil(o.PortSlotnumber) {
		return nil, false
	}
	return o.PortSlotnumber, true
}

// HasPortSlotnumber returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPortSlotnumber() bool {
	if o != nil && !IsNil(o.PortSlotnumber) {
		return true
	}

	return false
}

// SetPortSlotnumber gets a reference to the given string and assigns it to the PortSlotnumber field.
func (o *DataInnerIpamAddressData) SetPortSlotnumber(v string) {
	o.PortSlotnumber = &v
}

// GetAddressMacLastSeen returns the AddressMacLastSeen field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressMacLastSeen() string {
	if o == nil || IsNil(o.AddressMacLastSeen) {
		var ret string
		return ret
	}
	return *o.AddressMacLastSeen
}

// GetAddressMacLastSeenOk returns a tuple with the AddressMacLastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressMacLastSeenOk() (*string, bool) {
	if o == nil || IsNil(o.AddressMacLastSeen) {
		return nil, false
	}
	return o.AddressMacLastSeen, true
}

// HasAddressMacLastSeen returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressMacLastSeen() bool {
	if o != nil && !IsNil(o.AddressMacLastSeen) {
		return true
	}

	return false
}

// SetAddressMacLastSeen gets a reference to the given string and assigns it to the AddressMacLastSeen field.
func (o *DataInnerIpamAddressData) SetAddressMacLastSeen(v string) {
	o.AddressMacLastSeen = &v
}

// GetNetworkLockNetworkBroadcast returns the NetworkLockNetworkBroadcast field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkLockNetworkBroadcast() string {
	if o == nil || IsNil(o.NetworkLockNetworkBroadcast) {
		var ret string
		return ret
	}
	return *o.NetworkLockNetworkBroadcast
}

// GetNetworkLockNetworkBroadcastOk returns a tuple with the NetworkLockNetworkBroadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkLockNetworkBroadcastOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkLockNetworkBroadcast) {
		return nil, false
	}
	return o.NetworkLockNetworkBroadcast, true
}

// HasNetworkLockNetworkBroadcast returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkLockNetworkBroadcast() bool {
	if o != nil && !IsNil(o.NetworkLockNetworkBroadcast) {
		return true
	}

	return false
}

// SetNetworkLockNetworkBroadcast gets a reference to the given string and assigns it to the NetworkLockNetworkBroadcast field.
func (o *DataInnerIpamAddressData) SetNetworkLockNetworkBroadcast(v string) {
	o.NetworkLockNetworkBroadcast = &v
}

// GetAddressMacAddr returns the AddressMacAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressMacAddr() string {
	if o == nil || IsNil(o.AddressMacAddr) {
		var ret string
		return ret
	}
	return *o.AddressMacAddr
}

// GetAddressMacAddrOk returns a tuple with the AddressMacAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressMacAddrOk() (*string, bool) {
	if o == nil || IsNil(o.AddressMacAddr) {
		return nil, false
	}
	return o.AddressMacAddr, true
}

// HasAddressMacAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressMacAddr() bool {
	if o != nil && !IsNil(o.AddressMacAddr) {
		return true
	}

	return false
}

// SetAddressMacAddr gets a reference to the given string and assigns it to the AddressMacAddr field.
func (o *DataInnerIpamAddressData) SetAddressMacAddr(v string) {
	o.AddressMacAddr = &v
}

// GetAddressMultistatus returns the AddressMultistatus field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressMultistatus() string {
	if o == nil || IsNil(o.AddressMultistatus) {
		var ret string
		return ret
	}
	return *o.AddressMultistatus
}

// GetAddressMultistatusOk returns a tuple with the AddressMultistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressMultistatusOk() (*string, bool) {
	if o == nil || IsNil(o.AddressMultistatus) {
		return nil, false
	}
	return o.AddressMultistatus, true
}

// HasAddressMultistatus returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressMultistatus() bool {
	if o != nil && !IsNil(o.AddressMultistatus) {
		return true
	}

	return false
}

// SetAddressMultistatus gets a reference to the given string and assigns it to the AddressMultistatus field.
func (o *DataInnerIpamAddressData) SetAddressMultistatus(v string) {
	o.AddressMultistatus = &v
}

// GetAddressName returns the AddressName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressName() string {
	if o == nil || IsNil(o.AddressName) {
		var ret string
		return ret
	}
	return *o.AddressName
}

// GetAddressNameOk returns a tuple with the AddressName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressNameOk() (*string, bool) {
	if o == nil || IsNil(o.AddressName) {
		return nil, false
	}
	return o.AddressName, true
}

// HasAddressName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressName() bool {
	if o != nil && !IsNil(o.AddressName) {
		return true
	}

	return false
}

// SetAddressName gets a reference to the given string and assigns it to the AddressName field.
func (o *DataInnerIpamAddressData) SetAddressName(v string) {
	o.AddressName = &v
}

// GetParentNetworkClassName returns the ParentNetworkClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkClassName() string {
	if o == nil || IsNil(o.ParentNetworkClassName) {
		var ret string
		return ret
	}
	return *o.ParentNetworkClassName
}

// GetParentNetworkClassNameOk returns a tuple with the ParentNetworkClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkClassName) {
		return nil, false
	}
	return o.ParentNetworkClassName, true
}

// HasParentNetworkClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkClassName() bool {
	if o != nil && !IsNil(o.ParentNetworkClassName) {
		return true
	}

	return false
}

// SetParentNetworkClassName gets a reference to the given string and assigns it to the ParentNetworkClassName field.
func (o *DataInnerIpamAddressData) SetParentNetworkClassName(v string) {
	o.ParentNetworkClassName = &v
}

// GetParentNetworkEndHostaddr returns the ParentNetworkEndHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkEndHostaddr() string {
	if o == nil || IsNil(o.ParentNetworkEndHostaddr) {
		var ret string
		return ret
	}
	return *o.ParentNetworkEndHostaddr
}

// GetParentNetworkEndHostaddrOk returns a tuple with the ParentNetworkEndHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkEndHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkEndHostaddr) {
		return nil, false
	}
	return o.ParentNetworkEndHostaddr, true
}

// HasParentNetworkEndHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkEndHostaddr() bool {
	if o != nil && !IsNil(o.ParentNetworkEndHostaddr) {
		return true
	}

	return false
}

// SetParentNetworkEndHostaddr gets a reference to the given string and assigns it to the ParentNetworkEndHostaddr field.
func (o *DataInnerIpamAddressData) SetParentNetworkEndHostaddr(v string) {
	o.ParentNetworkEndHostaddr = &v
}

// GetParentNetworkEndAddressAddr returns the ParentNetworkEndAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkEndAddressAddr() string {
	if o == nil || IsNil(o.ParentNetworkEndAddressAddr) {
		var ret string
		return ret
	}
	return *o.ParentNetworkEndAddressAddr
}

// GetParentNetworkEndAddressAddrOk returns a tuple with the ParentNetworkEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkEndAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkEndAddressAddr) {
		return nil, false
	}
	return o.ParentNetworkEndAddressAddr, true
}

// HasParentNetworkEndAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkEndAddressAddr() bool {
	if o != nil && !IsNil(o.ParentNetworkEndAddressAddr) {
		return true
	}

	return false
}

// SetParentNetworkEndAddressAddr gets a reference to the given string and assigns it to the ParentNetworkEndAddressAddr field.
func (o *DataInnerIpamAddressData) SetParentNetworkEndAddressAddr(v string) {
	o.ParentNetworkEndAddressAddr = &v
}

// GetParentNetworkId returns the ParentNetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkId() string {
	if o == nil || IsNil(o.ParentNetworkId) {
		var ret string
		return ret
	}
	return *o.ParentNetworkId
}

// GetParentNetworkIdOk returns a tuple with the ParentNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkId) {
		return nil, false
	}
	return o.ParentNetworkId, true
}

// HasParentNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkId() bool {
	if o != nil && !IsNil(o.ParentNetworkId) {
		return true
	}

	return false
}

// SetParentNetworkId gets a reference to the given string and assigns it to the ParentNetworkId field.
func (o *DataInnerIpamAddressData) SetParentNetworkId(v string) {
	o.ParentNetworkId = &v
}

// GetParentNetworkName returns the ParentNetworkName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkName() string {
	if o == nil || IsNil(o.ParentNetworkName) {
		var ret string
		return ret
	}
	return *o.ParentNetworkName
}

// GetParentNetworkNameOk returns a tuple with the ParentNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkName) {
		return nil, false
	}
	return o.ParentNetworkName, true
}

// HasParentNetworkName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkName() bool {
	if o != nil && !IsNil(o.ParentNetworkName) {
		return true
	}

	return false
}

// SetParentNetworkName gets a reference to the given string and assigns it to the ParentNetworkName field.
func (o *DataInnerIpamAddressData) SetParentNetworkName(v string) {
	o.ParentNetworkName = &v
}

// GetParentNetworkSize returns the ParentNetworkSize field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkSize() string {
	if o == nil || IsNil(o.ParentNetworkSize) {
		var ret string
		return ret
	}
	return *o.ParentNetworkSize
}

// GetParentNetworkSizeOk returns a tuple with the ParentNetworkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkSize) {
		return nil, false
	}
	return o.ParentNetworkSize, true
}

// HasParentNetworkSize returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkSize() bool {
	if o != nil && !IsNil(o.ParentNetworkSize) {
		return true
	}

	return false
}

// SetParentNetworkSize gets a reference to the given string and assigns it to the ParentNetworkSize field.
func (o *DataInnerIpamAddressData) SetParentNetworkSize(v string) {
	o.ParentNetworkSize = &v
}

// GetParentNetworkStartHostaddr returns the ParentNetworkStartHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkStartHostaddr() string {
	if o == nil || IsNil(o.ParentNetworkStartHostaddr) {
		var ret string
		return ret
	}
	return *o.ParentNetworkStartHostaddr
}

// GetParentNetworkStartHostaddrOk returns a tuple with the ParentNetworkStartHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkStartHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkStartHostaddr) {
		return nil, false
	}
	return o.ParentNetworkStartHostaddr, true
}

// HasParentNetworkStartHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkStartHostaddr() bool {
	if o != nil && !IsNil(o.ParentNetworkStartHostaddr) {
		return true
	}

	return false
}

// SetParentNetworkStartHostaddr gets a reference to the given string and assigns it to the ParentNetworkStartHostaddr field.
func (o *DataInnerIpamAddressData) SetParentNetworkStartHostaddr(v string) {
	o.ParentNetworkStartHostaddr = &v
}

// GetParentNetworkStartAddressAddr returns the ParentNetworkStartAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentNetworkStartAddressAddr() string {
	if o == nil || IsNil(o.ParentNetworkStartAddressAddr) {
		var ret string
		return ret
	}
	return *o.ParentNetworkStartAddressAddr
}

// GetParentNetworkStartAddressAddrOk returns a tuple with the ParentNetworkStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentNetworkStartAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.ParentNetworkStartAddressAddr) {
		return nil, false
	}
	return o.ParentNetworkStartAddressAddr, true
}

// HasParentNetworkStartAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentNetworkStartAddressAddr() bool {
	if o != nil && !IsNil(o.ParentNetworkStartAddressAddr) {
		return true
	}

	return false
}

// SetParentNetworkStartAddressAddr gets a reference to the given string and assigns it to the ParentNetworkStartAddressAddr field.
func (o *DataInnerIpamAddressData) SetParentNetworkStartAddressAddr(v string) {
	o.ParentNetworkStartAddressAddr = &v
}

// GetParentVlsmNetworkId returns the ParentVlsmNetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetParentVlsmNetworkId() string {
	if o == nil || IsNil(o.ParentVlsmNetworkId) {
		var ret string
		return ret
	}
	return *o.ParentVlsmNetworkId
}

// GetParentVlsmNetworkIdOk returns a tuple with the ParentVlsmNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetParentVlsmNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentVlsmNetworkId) {
		return nil, false
	}
	return o.ParentVlsmNetworkId, true
}

// HasParentVlsmNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasParentVlsmNetworkId() bool {
	if o != nil && !IsNil(o.ParentVlsmNetworkId) {
		return true
	}

	return false
}

// SetParentVlsmNetworkId gets a reference to the given string and assigns it to the ParentVlsmNetworkId field.
func (o *DataInnerIpamAddressData) SetParentVlsmNetworkId(v string) {
	o.ParentVlsmNetworkId = &v
}

// GetPoolClassName returns the PoolClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolClassName() string {
	if o == nil || IsNil(o.PoolClassName) {
		var ret string
		return ret
	}
	return *o.PoolClassName
}

// GetPoolClassNameOk returns a tuple with the PoolClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolClassName) {
		return nil, false
	}
	return o.PoolClassName, true
}

// HasPoolClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolClassName() bool {
	if o != nil && !IsNil(o.PoolClassName) {
		return true
	}

	return false
}

// SetPoolClassName gets a reference to the given string and assigns it to the PoolClassName field.
func (o *DataInnerIpamAddressData) SetPoolClassName(v string) {
	o.PoolClassName = &v
}

// GetPoolClassParameters returns the PoolClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.PoolClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.PoolClassParameters
}

// GetPoolClassParametersOk returns a tuple with the PoolClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.PoolClassParameters) {
		return nil, false
	}
	return o.PoolClassParameters, true
}

// HasPoolClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolClassParameters() bool {
	if o != nil && !IsNil(o.PoolClassParameters) {
		return true
	}

	return false
}

// SetPoolClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the PoolClassParameters field.
func (o *DataInnerIpamAddressData) SetPoolClassParameters(v []ApiClassParameterOutputEntry) {
	o.PoolClassParameters = v
}

// GetPoolEndAddressAddr returns the PoolEndAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolEndAddressAddr() string {
	if o == nil || IsNil(o.PoolEndAddressAddr) {
		var ret string
		return ret
	}
	return *o.PoolEndAddressAddr
}

// GetPoolEndAddressAddrOk returns a tuple with the PoolEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolEndAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolEndAddressAddr) {
		return nil, false
	}
	return o.PoolEndAddressAddr, true
}

// HasPoolEndAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolEndAddressAddr() bool {
	if o != nil && !IsNil(o.PoolEndAddressAddr) {
		return true
	}

	return false
}

// SetPoolEndAddressAddr gets a reference to the given string and assigns it to the PoolEndAddressAddr field.
func (o *DataInnerIpamAddressData) SetPoolEndAddressAddr(v string) {
	o.PoolEndAddressAddr = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolId() string {
	if o == nil || IsNil(o.PoolId) {
		var ret string
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.PoolId) {
		return nil, false
	}
	return o.PoolId, true
}

// HasPoolId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolId() bool {
	if o != nil && !IsNil(o.PoolId) {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given string and assigns it to the PoolId field.
func (o *DataInnerIpamAddressData) SetPoolId(v string) {
	o.PoolId = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolName() string {
	if o == nil || IsNil(o.PoolName) {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolName) {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolName() bool {
	if o != nil && !IsNil(o.PoolName) {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *DataInnerIpamAddressData) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPoolReadOnly returns the PoolReadOnly field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolReadOnly() string {
	if o == nil || IsNil(o.PoolReadOnly) {
		var ret string
		return ret
	}
	return *o.PoolReadOnly
}

// GetPoolReadOnlyOk returns a tuple with the PoolReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolReadOnlyOk() (*string, bool) {
	if o == nil || IsNil(o.PoolReadOnly) {
		return nil, false
	}
	return o.PoolReadOnly, true
}

// HasPoolReadOnly returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolReadOnly() bool {
	if o != nil && !IsNil(o.PoolReadOnly) {
		return true
	}

	return false
}

// SetPoolReadOnly gets a reference to the given string and assigns it to the PoolReadOnly field.
func (o *DataInnerIpamAddressData) SetPoolReadOnly(v string) {
	o.PoolReadOnly = &v
}

// GetPoolSize returns the PoolSize field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolSize() string {
	if o == nil || IsNil(o.PoolSize) {
		var ret string
		return ret
	}
	return *o.PoolSize
}

// GetPoolSizeOk returns a tuple with the PoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolSize) {
		return nil, false
	}
	return o.PoolSize, true
}

// HasPoolSize returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolSize() bool {
	if o != nil && !IsNil(o.PoolSize) {
		return true
	}

	return false
}

// SetPoolSize gets a reference to the given string and assigns it to the PoolSize field.
func (o *DataInnerIpamAddressData) SetPoolSize(v string) {
	o.PoolSize = &v
}

// GetPoolStartAddressAddr returns the PoolStartAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetPoolStartAddressAddr() string {
	if o == nil || IsNil(o.PoolStartAddressAddr) {
		var ret string
		return ret
	}
	return *o.PoolStartAddressAddr
}

// GetPoolStartAddressAddrOk returns a tuple with the PoolStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetPoolStartAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.PoolStartAddressAddr) {
		return nil, false
	}
	return o.PoolStartAddressAddr, true
}

// HasPoolStartAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasPoolStartAddressAddr() bool {
	if o != nil && !IsNil(o.PoolStartAddressAddr) {
		return true
	}

	return false
}

// SetPoolStartAddressAddr gets a reference to the given string and assigns it to the PoolStartAddressAddr field.
func (o *DataInnerIpamAddressData) SetPoolStartAddressAddr(v string) {
	o.PoolStartAddressAddr = &v
}

// GetSpaceClassName returns the SpaceClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetSpaceClassName() string {
	if o == nil || IsNil(o.SpaceClassName) {
		var ret string
		return ret
	}
	return *o.SpaceClassName
}

// GetSpaceClassNameOk returns a tuple with the SpaceClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetSpaceClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceClassName) {
		return nil, false
	}
	return o.SpaceClassName, true
}

// HasSpaceClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasSpaceClassName() bool {
	if o != nil && !IsNil(o.SpaceClassName) {
		return true
	}

	return false
}

// SetSpaceClassName gets a reference to the given string and assigns it to the SpaceClassName field.
func (o *DataInnerIpamAddressData) SetSpaceClassName(v string) {
	o.SpaceClassName = &v
}

// GetSpaceClassParameters returns the SpaceClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetSpaceClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.SpaceClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.SpaceClassParameters
}

// GetSpaceClassParametersOk returns a tuple with the SpaceClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetSpaceClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.SpaceClassParameters) {
		return nil, false
	}
	return o.SpaceClassParameters, true
}

// HasSpaceClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasSpaceClassParameters() bool {
	if o != nil && !IsNil(o.SpaceClassParameters) {
		return true
	}

	return false
}

// SetSpaceClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the SpaceClassParameters field.
func (o *DataInnerIpamAddressData) SetSpaceClassParameters(v []ApiClassParameterOutputEntry) {
	o.SpaceClassParameters = v
}

// GetSpaceDescription returns the SpaceDescription field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetSpaceDescription() string {
	if o == nil || IsNil(o.SpaceDescription) {
		var ret string
		return ret
	}
	return *o.SpaceDescription
}

// GetSpaceDescriptionOk returns a tuple with the SpaceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetSpaceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceDescription) {
		return nil, false
	}
	return o.SpaceDescription, true
}

// HasSpaceDescription returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasSpaceDescription() bool {
	if o != nil && !IsNil(o.SpaceDescription) {
		return true
	}

	return false
}

// SetSpaceDescription gets a reference to the given string and assigns it to the SpaceDescription field.
func (o *DataInnerIpamAddressData) SetSpaceDescription(v string) {
	o.SpaceDescription = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetSpaceId() string {
	if o == nil || IsNil(o.SpaceId) {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *DataInnerIpamAddressData) SetSpaceId(v string) {
	o.SpaceId = &v
}

// GetSpaceIsTemplate returns the SpaceIsTemplate field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetSpaceIsTemplate() string {
	if o == nil || IsNil(o.SpaceIsTemplate) {
		var ret string
		return ret
	}
	return *o.SpaceIsTemplate
}

// GetSpaceIsTemplateOk returns a tuple with the SpaceIsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetSpaceIsTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceIsTemplate) {
		return nil, false
	}
	return o.SpaceIsTemplate, true
}

// HasSpaceIsTemplate returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasSpaceIsTemplate() bool {
	if o != nil && !IsNil(o.SpaceIsTemplate) {
		return true
	}

	return false
}

// SetSpaceIsTemplate gets a reference to the given string and assigns it to the SpaceIsTemplate field.
func (o *DataInnerIpamAddressData) SetSpaceIsTemplate(v string) {
	o.SpaceIsTemplate = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetSpaceName() string {
	if o == nil || IsNil(o.SpaceName) {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceName) {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasSpaceName() bool {
	if o != nil && !IsNil(o.SpaceName) {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *DataInnerIpamAddressData) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetNetworkClassName returns the NetworkClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkClassName() string {
	if o == nil || IsNil(o.NetworkClassName) {
		var ret string
		return ret
	}
	return *o.NetworkClassName
}

// GetNetworkClassNameOk returns a tuple with the NetworkClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkClassName) {
		return nil, false
	}
	return o.NetworkClassName, true
}

// HasNetworkClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkClassName() bool {
	if o != nil && !IsNil(o.NetworkClassName) {
		return true
	}

	return false
}

// SetNetworkClassName gets a reference to the given string and assigns it to the NetworkClassName field.
func (o *DataInnerIpamAddressData) SetNetworkClassName(v string) {
	o.NetworkClassName = &v
}

// GetNetworkClassParameters returns the NetworkClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.NetworkClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.NetworkClassParameters
}

// GetNetworkClassParametersOk returns a tuple with the NetworkClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.NetworkClassParameters) {
		return nil, false
	}
	return o.NetworkClassParameters, true
}

// HasNetworkClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkClassParameters() bool {
	if o != nil && !IsNil(o.NetworkClassParameters) {
		return true
	}

	return false
}

// SetNetworkClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the NetworkClassParameters field.
func (o *DataInnerIpamAddressData) SetNetworkClassParameters(v []ApiClassParameterOutputEntry) {
	o.NetworkClassParameters = v
}

// GetNetworkEndHostaddr returns the NetworkEndHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkEndHostaddr() string {
	if o == nil || IsNil(o.NetworkEndHostaddr) {
		var ret string
		return ret
	}
	return *o.NetworkEndHostaddr
}

// GetNetworkEndHostaddrOk returns a tuple with the NetworkEndHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkEndHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkEndHostaddr) {
		return nil, false
	}
	return o.NetworkEndHostaddr, true
}

// HasNetworkEndHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkEndHostaddr() bool {
	if o != nil && !IsNil(o.NetworkEndHostaddr) {
		return true
	}

	return false
}

// SetNetworkEndHostaddr gets a reference to the given string and assigns it to the NetworkEndHostaddr field.
func (o *DataInnerIpamAddressData) SetNetworkEndHostaddr(v string) {
	o.NetworkEndHostaddr = &v
}

// GetNetworkEndAddressAddr returns the NetworkEndAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkEndAddressAddr() string {
	if o == nil || IsNil(o.NetworkEndAddressAddr) {
		var ret string
		return ret
	}
	return *o.NetworkEndAddressAddr
}

// GetNetworkEndAddressAddrOk returns a tuple with the NetworkEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkEndAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkEndAddressAddr) {
		return nil, false
	}
	return o.NetworkEndAddressAddr, true
}

// HasNetworkEndAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkEndAddressAddr() bool {
	if o != nil && !IsNil(o.NetworkEndAddressAddr) {
		return true
	}

	return false
}

// SetNetworkEndAddressAddr gets a reference to the given string and assigns it to the NetworkEndAddressAddr field.
func (o *DataInnerIpamAddressData) SetNetworkEndAddressAddr(v string) {
	o.NetworkEndAddressAddr = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *DataInnerIpamAddressData) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetNetworkIsTerminal returns the NetworkIsTerminal field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkIsTerminal() string {
	if o == nil || IsNil(o.NetworkIsTerminal) {
		var ret string
		return ret
	}
	return *o.NetworkIsTerminal
}

// GetNetworkIsTerminalOk returns a tuple with the NetworkIsTerminal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkIsTerminalOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIsTerminal) {
		return nil, false
	}
	return o.NetworkIsTerminal, true
}

// HasNetworkIsTerminal returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkIsTerminal() bool {
	if o != nil && !IsNil(o.NetworkIsTerminal) {
		return true
	}

	return false
}

// SetNetworkIsTerminal gets a reference to the given string and assigns it to the NetworkIsTerminal field.
func (o *DataInnerIpamAddressData) SetNetworkIsTerminal(v string) {
	o.NetworkIsTerminal = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkName() string {
	if o == nil || IsNil(o.NetworkName) {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkName) {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkName() bool {
	if o != nil && !IsNil(o.NetworkName) {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *DataInnerIpamAddressData) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetNetworkSize returns the NetworkSize field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkSize() string {
	if o == nil || IsNil(o.NetworkSize) {
		var ret string
		return ret
	}
	return *o.NetworkSize
}

// GetNetworkSizeOk returns a tuple with the NetworkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkSizeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkSize) {
		return nil, false
	}
	return o.NetworkSize, true
}

// HasNetworkSize returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkSize() bool {
	if o != nil && !IsNil(o.NetworkSize) {
		return true
	}

	return false
}

// SetNetworkSize gets a reference to the given string and assigns it to the NetworkSize field.
func (o *DataInnerIpamAddressData) SetNetworkSize(v string) {
	o.NetworkSize = &v
}

// GetNetworkStartHostaddr returns the NetworkStartHostaddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkStartHostaddr() string {
	if o == nil || IsNil(o.NetworkStartHostaddr) {
		var ret string
		return ret
	}
	return *o.NetworkStartHostaddr
}

// GetNetworkStartHostaddrOk returns a tuple with the NetworkStartHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkStartHostaddrOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkStartHostaddr) {
		return nil, false
	}
	return o.NetworkStartHostaddr, true
}

// HasNetworkStartHostaddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkStartHostaddr() bool {
	if o != nil && !IsNil(o.NetworkStartHostaddr) {
		return true
	}

	return false
}

// SetNetworkStartHostaddr gets a reference to the given string and assigns it to the NetworkStartHostaddr field.
func (o *DataInnerIpamAddressData) SetNetworkStartHostaddr(v string) {
	o.NetworkStartHostaddr = &v
}

// GetNetworkStartAddressAddr returns the NetworkStartAddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetNetworkStartAddressAddr() string {
	if o == nil || IsNil(o.NetworkStartAddressAddr) {
		var ret string
		return ret
	}
	return *o.NetworkStartAddressAddr
}

// GetNetworkStartAddressAddrOk returns a tuple with the NetworkStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetNetworkStartAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkStartAddressAddr) {
		return nil, false
	}
	return o.NetworkStartAddressAddr, true
}

// HasNetworkStartAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasNetworkStartAddressAddr() bool {
	if o != nil && !IsNil(o.NetworkStartAddressAddr) {
		return true
	}

	return false
}

// SetNetworkStartAddressAddr gets a reference to the given string and assigns it to the NetworkStartAddressAddr field.
func (o *DataInnerIpamAddressData) SetNetworkStartAddressAddr(v string) {
	o.NetworkStartAddressAddr = &v
}

// GetTagContainerDhcpstatic returns the TagContainerDhcpstatic field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetTagContainerDhcpstatic() string {
	if o == nil || IsNil(o.TagContainerDhcpstatic) {
		var ret string
		return ret
	}
	return *o.TagContainerDhcpstatic
}

// GetTagContainerDhcpstaticOk returns a tuple with the TagContainerDhcpstatic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetTagContainerDhcpstaticOk() (*string, bool) {
	if o == nil || IsNil(o.TagContainerDhcpstatic) {
		return nil, false
	}
	return o.TagContainerDhcpstatic, true
}

// HasTagContainerDhcpstatic returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasTagContainerDhcpstatic() bool {
	if o != nil && !IsNil(o.TagContainerDhcpstatic) {
		return true
	}

	return false
}

// SetTagContainerDhcpstatic gets a reference to the given string and assigns it to the TagContainerDhcpstatic field.
func (o *DataInnerIpamAddressData) SetTagContainerDhcpstatic(v string) {
	o.TagContainerDhcpstatic = &v
}

// GetTagPoolDhcprange returns the TagPoolDhcprange field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetTagPoolDhcprange() string {
	if o == nil || IsNil(o.TagPoolDhcprange) {
		var ret string
		return ret
	}
	return *o.TagPoolDhcprange
}

// GetTagPoolDhcprangeOk returns a tuple with the TagPoolDhcprange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetTagPoolDhcprangeOk() (*string, bool) {
	if o == nil || IsNil(o.TagPoolDhcprange) {
		return nil, false
	}
	return o.TagPoolDhcprange, true
}

// HasTagPoolDhcprange returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasTagPoolDhcprange() bool {
	if o != nil && !IsNil(o.TagPoolDhcprange) {
		return true
	}

	return false
}

// SetTagPoolDhcprange gets a reference to the given string and assigns it to the TagPoolDhcprange field.
func (o *DataInnerIpamAddressData) SetTagPoolDhcprange(v string) {
	o.TagPoolDhcprange = &v
}

// GetAddressOperationDetailsAddedOn returns the AddressOperationDetailsAddedOn field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsAddedOn() string {
	if o == nil || IsNil(o.AddressOperationDetailsAddedOn) {
		var ret string
		return ret
	}
	return *o.AddressOperationDetailsAddedOn
}

// GetAddressOperationDetailsAddedOnOk returns a tuple with the AddressOperationDetailsAddedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsAddedOnOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOperationDetailsAddedOn) {
		return nil, false
	}
	return o.AddressOperationDetailsAddedOn, true
}

// HasAddressOperationDetailsAddedOn returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressOperationDetailsAddedOn() bool {
	if o != nil && !IsNil(o.AddressOperationDetailsAddedOn) {
		return true
	}

	return false
}

// SetAddressOperationDetailsAddedOn gets a reference to the given string and assigns it to the AddressOperationDetailsAddedOn field.
func (o *DataInnerIpamAddressData) SetAddressOperationDetailsAddedOn(v string) {
	o.AddressOperationDetailsAddedOn = &v
}

// GetAddressOperationDetailsCallStack returns the AddressOperationDetailsCallStack field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsCallStack() string {
	if o == nil || IsNil(o.AddressOperationDetailsCallStack) {
		var ret string
		return ret
	}
	return *o.AddressOperationDetailsCallStack
}

// GetAddressOperationDetailsCallStackOk returns a tuple with the AddressOperationDetailsCallStack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsCallStackOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOperationDetailsCallStack) {
		return nil, false
	}
	return o.AddressOperationDetailsCallStack, true
}

// HasAddressOperationDetailsCallStack returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressOperationDetailsCallStack() bool {
	if o != nil && !IsNil(o.AddressOperationDetailsCallStack) {
		return true
	}

	return false
}

// SetAddressOperationDetailsCallStack gets a reference to the given string and assigns it to the AddressOperationDetailsCallStack field.
func (o *DataInnerIpamAddressData) SetAddressOperationDetailsCallStack(v string) {
	o.AddressOperationDetailsCallStack = &v
}

// GetAddressOperationDetailsOriginModule returns the AddressOperationDetailsOriginModule field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsOriginModule() string {
	if o == nil || IsNil(o.AddressOperationDetailsOriginModule) {
		var ret string
		return ret
	}
	return *o.AddressOperationDetailsOriginModule
}

// GetAddressOperationDetailsOriginModuleOk returns a tuple with the AddressOperationDetailsOriginModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsOriginModuleOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOperationDetailsOriginModule) {
		return nil, false
	}
	return o.AddressOperationDetailsOriginModule, true
}

// HasAddressOperationDetailsOriginModule returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressOperationDetailsOriginModule() bool {
	if o != nil && !IsNil(o.AddressOperationDetailsOriginModule) {
		return true
	}

	return false
}

// SetAddressOperationDetailsOriginModule gets a reference to the given string and assigns it to the AddressOperationDetailsOriginModule field.
func (o *DataInnerIpamAddressData) SetAddressOperationDetailsOriginModule(v string) {
	o.AddressOperationDetailsOriginModule = &v
}

// GetAddressOperationDetailsRequestedBy returns the AddressOperationDetailsRequestedBy field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsRequestedBy() string {
	if o == nil || IsNil(o.AddressOperationDetailsRequestedBy) {
		var ret string
		return ret
	}
	return *o.AddressOperationDetailsRequestedBy
}

// GetAddressOperationDetailsRequestedByOk returns a tuple with the AddressOperationDetailsRequestedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsRequestedByOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOperationDetailsRequestedBy) {
		return nil, false
	}
	return o.AddressOperationDetailsRequestedBy, true
}

// HasAddressOperationDetailsRequestedBy returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressOperationDetailsRequestedBy() bool {
	if o != nil && !IsNil(o.AddressOperationDetailsRequestedBy) {
		return true
	}

	return false
}

// SetAddressOperationDetailsRequestedBy gets a reference to the given string and assigns it to the AddressOperationDetailsRequestedBy field.
func (o *DataInnerIpamAddressData) SetAddressOperationDetailsRequestedBy(v string) {
	o.AddressOperationDetailsRequestedBy = &v
}

// GetAddressOperationDetailsAddedBy returns the AddressOperationDetailsAddedBy field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsAddedBy() string {
	if o == nil || IsNil(o.AddressOperationDetailsAddedBy) {
		var ret string
		return ret
	}
	return *o.AddressOperationDetailsAddedBy
}

// GetAddressOperationDetailsAddedByOk returns a tuple with the AddressOperationDetailsAddedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsAddedByOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOperationDetailsAddedBy) {
		return nil, false
	}
	return o.AddressOperationDetailsAddedBy, true
}

// HasAddressOperationDetailsAddedBy returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressOperationDetailsAddedBy() bool {
	if o != nil && !IsNil(o.AddressOperationDetailsAddedBy) {
		return true
	}

	return false
}

// SetAddressOperationDetailsAddedBy gets a reference to the given string and assigns it to the AddressOperationDetailsAddedBy field.
func (o *DataInnerIpamAddressData) SetAddressOperationDetailsAddedBy(v string) {
	o.AddressOperationDetailsAddedBy = &v
}

// GetAddressOperationDetailsLastUpdatedOn returns the AddressOperationDetailsLastUpdatedOn field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsLastUpdatedOn() string {
	if o == nil || IsNil(o.AddressOperationDetailsLastUpdatedOn) {
		var ret string
		return ret
	}
	return *o.AddressOperationDetailsLastUpdatedOn
}

// GetAddressOperationDetailsLastUpdatedOnOk returns a tuple with the AddressOperationDetailsLastUpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressOperationDetailsLastUpdatedOnOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOperationDetailsLastUpdatedOn) {
		return nil, false
	}
	return o.AddressOperationDetailsLastUpdatedOn, true
}

// HasAddressOperationDetailsLastUpdatedOn returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressOperationDetailsLastUpdatedOn() bool {
	if o != nil && !IsNil(o.AddressOperationDetailsLastUpdatedOn) {
		return true
	}

	return false
}

// SetAddressOperationDetailsLastUpdatedOn gets a reference to the given string and assigns it to the AddressOperationDetailsLastUpdatedOn field.
func (o *DataInnerIpamAddressData) SetAddressOperationDetailsLastUpdatedOn(v string) {
	o.AddressOperationDetailsLastUpdatedOn = &v
}

// GetAddressType returns the AddressType field value if set, zero value otherwise.
func (o *DataInnerIpamAddressData) GetAddressType() string {
	if o == nil || IsNil(o.AddressType) {
		var ret string
		return ret
	}
	return *o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAddressData) GetAddressTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressType) {
		return nil, false
	}
	return o.AddressType, true
}

// HasAddressType returns a boolean if a field has been set.
func (o *DataInnerIpamAddressData) HasAddressType() bool {
	if o != nil && !IsNil(o.AddressType) {
		return true
	}

	return false
}

// SetAddressType gets a reference to the given string and assigns it to the AddressType field.
func (o *DataInnerIpamAddressData) SetAddressType(v string) {
	o.AddressType = &v
}

func (o DataInnerIpamAddressData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerIpamAddressData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StaticId) {
		toSerialize["static_id"] = o.StaticId
	}
	if !IsNil(o.LeaseEndTime) {
		toSerialize["lease_end_time"] = o.LeaseEndTime
	}
	if !IsNil(o.LeaseId) {
		toSerialize["lease_id"] = o.LeaseId
	}
	if !IsNil(o.FreeEndAddressAddr) {
		toSerialize["free_end_address_addr"] = o.FreeEndAddressAddr
	}
	if !IsNil(o.FreeScopeSize) {
		toSerialize["free_scope_size"] = o.FreeScopeSize
	}
	if !IsNil(o.FreeStartAddressAddr) {
		toSerialize["free_start_address_addr"] = o.FreeStartAddressAddr
	}
	if !IsNil(o.AddressHostaddr) {
		toSerialize["address_hostaddr"] = o.AddressHostaddr
	}
	if !IsNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !IsNil(o.DeviceName) {
		toSerialize["device_name"] = o.DeviceName
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if !IsNil(o.InterfaceName) {
		toSerialize["interface_name"] = o.InterfaceName
	}
	if !IsNil(o.AddressAddr) {
		toSerialize["address_addr"] = o.AddressAddr
	}
	if !IsNil(o.AddressAlias) {
		toSerialize["address_alias"] = o.AddressAlias
	}
	if !IsNil(o.AddressClassName) {
		toSerialize["address_class_name"] = o.AddressClassName
	}
	if !IsNil(o.AddressClassParameters) {
		toSerialize["address_class_parameters"] = o.AddressClassParameters
	}
	if !IsNil(o.AddressId) {
		toSerialize["address_id"] = o.AddressId
	}
	if !IsNil(o.DevId) {
		toSerialize["dev_id"] = o.DevId
	}
	if !IsNil(o.DevName) {
		toSerialize["dev_name"] = o.DevName
	}
	if !IsNil(o.PortIfvlan) {
		toSerialize["port_ifvlan"] = o.PortIfvlan
	}
	if !IsNil(o.PortName) {
		toSerialize["port_name"] = o.PortName
	}
	if !IsNil(o.PortPortnumber) {
		toSerialize["port_portnumber"] = o.PortPortnumber
	}
	if !IsNil(o.PortSlotnumber) {
		toSerialize["port_slotnumber"] = o.PortSlotnumber
	}
	if !IsNil(o.AddressMacLastSeen) {
		toSerialize["address_mac_last_seen"] = o.AddressMacLastSeen
	}
	if !IsNil(o.NetworkLockNetworkBroadcast) {
		toSerialize["network_lock_network_broadcast"] = o.NetworkLockNetworkBroadcast
	}
	if !IsNil(o.AddressMacAddr) {
		toSerialize["address_mac_addr"] = o.AddressMacAddr
	}
	if !IsNil(o.AddressMultistatus) {
		toSerialize["address_multistatus"] = o.AddressMultistatus
	}
	if !IsNil(o.AddressName) {
		toSerialize["address_name"] = o.AddressName
	}
	if !IsNil(o.ParentNetworkClassName) {
		toSerialize["parent_network_class_name"] = o.ParentNetworkClassName
	}
	if !IsNil(o.ParentNetworkEndHostaddr) {
		toSerialize["parent_network_end_hostaddr"] = o.ParentNetworkEndHostaddr
	}
	if !IsNil(o.ParentNetworkEndAddressAddr) {
		toSerialize["parent_network_end_address_addr"] = o.ParentNetworkEndAddressAddr
	}
	if !IsNil(o.ParentNetworkId) {
		toSerialize["parent_network_id"] = o.ParentNetworkId
	}
	if !IsNil(o.ParentNetworkName) {
		toSerialize["parent_network_name"] = o.ParentNetworkName
	}
	if !IsNil(o.ParentNetworkSize) {
		toSerialize["parent_network_size"] = o.ParentNetworkSize
	}
	if !IsNil(o.ParentNetworkStartHostaddr) {
		toSerialize["parent_network_start_hostaddr"] = o.ParentNetworkStartHostaddr
	}
	if !IsNil(o.ParentNetworkStartAddressAddr) {
		toSerialize["parent_network_start_address_addr"] = o.ParentNetworkStartAddressAddr
	}
	if !IsNil(o.ParentVlsmNetworkId) {
		toSerialize["parent_vlsm_network_id"] = o.ParentVlsmNetworkId
	}
	if !IsNil(o.PoolClassName) {
		toSerialize["pool_class_name"] = o.PoolClassName
	}
	if !IsNil(o.PoolClassParameters) {
		toSerialize["pool_class_parameters"] = o.PoolClassParameters
	}
	if !IsNil(o.PoolEndAddressAddr) {
		toSerialize["pool_end_address_addr"] = o.PoolEndAddressAddr
	}
	if !IsNil(o.PoolId) {
		toSerialize["pool_id"] = o.PoolId
	}
	if !IsNil(o.PoolName) {
		toSerialize["pool_name"] = o.PoolName
	}
	if !IsNil(o.PoolReadOnly) {
		toSerialize["pool_read_only"] = o.PoolReadOnly
	}
	if !IsNil(o.PoolSize) {
		toSerialize["pool_size"] = o.PoolSize
	}
	if !IsNil(o.PoolStartAddressAddr) {
		toSerialize["pool_start_address_addr"] = o.PoolStartAddressAddr
	}
	if !IsNil(o.SpaceClassName) {
		toSerialize["space_class_name"] = o.SpaceClassName
	}
	if !IsNil(o.SpaceClassParameters) {
		toSerialize["space_class_parameters"] = o.SpaceClassParameters
	}
	if !IsNil(o.SpaceDescription) {
		toSerialize["space_description"] = o.SpaceDescription
	}
	if !IsNil(o.SpaceId) {
		toSerialize["space_id"] = o.SpaceId
	}
	if !IsNil(o.SpaceIsTemplate) {
		toSerialize["space_is_template"] = o.SpaceIsTemplate
	}
	if !IsNil(o.SpaceName) {
		toSerialize["space_name"] = o.SpaceName
	}
	if !IsNil(o.NetworkClassName) {
		toSerialize["network_class_name"] = o.NetworkClassName
	}
	if !IsNil(o.NetworkClassParameters) {
		toSerialize["network_class_parameters"] = o.NetworkClassParameters
	}
	if !IsNil(o.NetworkEndHostaddr) {
		toSerialize["network_end_hostaddr"] = o.NetworkEndHostaddr
	}
	if !IsNil(o.NetworkEndAddressAddr) {
		toSerialize["network_end_address_addr"] = o.NetworkEndAddressAddr
	}
	if !IsNil(o.NetworkId) {
		toSerialize["network_id"] = o.NetworkId
	}
	if !IsNil(o.NetworkIsTerminal) {
		toSerialize["network_is_terminal"] = o.NetworkIsTerminal
	}
	if !IsNil(o.NetworkName) {
		toSerialize["network_name"] = o.NetworkName
	}
	if !IsNil(o.NetworkSize) {
		toSerialize["network_size"] = o.NetworkSize
	}
	if !IsNil(o.NetworkStartHostaddr) {
		toSerialize["network_start_hostaddr"] = o.NetworkStartHostaddr
	}
	if !IsNil(o.NetworkStartAddressAddr) {
		toSerialize["network_start_address_addr"] = o.NetworkStartAddressAddr
	}
	if !IsNil(o.TagContainerDhcpstatic) {
		toSerialize["tag_container_dhcpstatic"] = o.TagContainerDhcpstatic
	}
	if !IsNil(o.TagPoolDhcprange) {
		toSerialize["tag_pool_dhcprange"] = o.TagPoolDhcprange
	}
	if !IsNil(o.AddressOperationDetailsAddedOn) {
		toSerialize["address_operation_details_added_on"] = o.AddressOperationDetailsAddedOn
	}
	if !IsNil(o.AddressOperationDetailsCallStack) {
		toSerialize["address_operation_details_call_stack"] = o.AddressOperationDetailsCallStack
	}
	if !IsNil(o.AddressOperationDetailsOriginModule) {
		toSerialize["address_operation_details_origin_module"] = o.AddressOperationDetailsOriginModule
	}
	if !IsNil(o.AddressOperationDetailsRequestedBy) {
		toSerialize["address_operation_details_requested_by"] = o.AddressOperationDetailsRequestedBy
	}
	if !IsNil(o.AddressOperationDetailsAddedBy) {
		toSerialize["address_operation_details_added_by"] = o.AddressOperationDetailsAddedBy
	}
	if !IsNil(o.AddressOperationDetailsLastUpdatedOn) {
		toSerialize["address_operation_details_last_updated_on"] = o.AddressOperationDetailsLastUpdatedOn
	}
	if !IsNil(o.AddressType) {
		toSerialize["address_type"] = o.AddressType
	}
	return toSerialize, nil
}

type NullableDataInnerIpamAddressData struct {
	value *DataInnerIpamAddressData
	isSet bool
}

func (v NullableDataInnerIpamAddressData) Get() *DataInnerIpamAddressData {
	return v.value
}

func (v *NullableDataInnerIpamAddressData) Set(val *DataInnerIpamAddressData) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerIpamAddressData) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerIpamAddressData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerIpamAddressData(val *DataInnerIpamAddressData) *NullableDataInnerIpamAddressData {
	return &NullableDataInnerIpamAddressData{value: val, isSet: true}
}

func (v NullableDataInnerIpamAddressData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerIpamAddressData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
