/*
SOLIDserver API

OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2024 EfficientIP</p><p><em>All specifications and information regarding the products in this document are subject to change without notice and should not be construed as a commitment by EfficientIP. EfficientIP assumes no responsibility or liability for any mistakes or inaccuracies that may appear in this document. All statements and recommendations in this document are believed to be accurate but are presented without warranty. Users must take full responsibility for their application of any product.</em></p><p><em>This document aims at detailing EfficientIP proprietary solutions. As our solutions rely on several third-party products, created by other companies or organizations, it may redirect readers to third-party websites and documentation for further information. In such a case, EfficientIP cannot be liable or expected to provide said information on products they do maintain or created.</em></p><p>Generated (Friday 4th of October 2024 03:41:11 PM)</p>

API version: 2.0
Contact: support-api@efficientip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// checks if the DataInnerIpamAliasData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataInnerIpamAliasData{}

// DataInnerIpamAliasData struct for DataInnerIpamAliasData
type DataInnerIpamAliasData struct {
	// The name of the alias.
	AliasName *string `json:"alias_name,omitempty"`
	// The database identifier (ID) of the DHCP static associated with the IP address.
	StaticId *string `json:"static_id,omitempty"`
	// The database identifier (ID) of the DHCP lease associated with the IP address.
	LeaseId *string `json:"lease_id,omitempty"`
	// The database identifier (ID) of the Device Manager device associated with the IP address.
	DeviceId *string `json:"device_id,omitempty"`
	// The database identifier (ID) of the Device Manager interface associated with the IP address.
	InterfaceId *string `json:"interface_id,omitempty"`
	// The IPv4 alias itself, in hexadecimal format.
	AddressAddr *string `json:"address_addr,omitempty"`
	// The name of the class applied to the object, it can be preceded by the class directory.
	AddressClassName *string `json:"address_class_name,omitempty"`
	// The class parameters applied to the IPv4 alias.
	AddressClassParameters []ApiClassParameterOutputEntry `json:"address_class_parameters,omitempty"`
	// The database identifier (ID) of the IPv4 address associated with the alias.
	AddressId *string `json:"address_id,omitempty"`
	// The database identifier (ID) of the IPv4 alias.
	AliasId *string `json:"alias_id,omitempty"`
	// The type of the alias, either <b>CNAME</b> or <b>A</b>.
	AliasType *string `json:"alias_type,omitempty"`
	// A way to determine if you can assign the IP alias (<b>free</b>) or if it is In use (<b>ip</b>).
	AddressType *string `json:"address_type,omitempty"`
	// The database identifier (ID) of the NetChange port associated with the IP address.
	PortId *string `json:"port_id,omitempty"`
	// The MAC address associated with the IPv4 alias.
	AddressMacAddr *string `json:"address_mac_addr,omitempty"`
	// The name of the IPv4 alias.
	AddressName *string `json:"address_name,omitempty"`
	// The database identifier (ID) of the IPv4 pool the object belongs to.
	PoolId *string `json:"pool_id,omitempty"`
	// The name of the class applied to the space the object belongs to, it can be preceded by the class directory.
	SpaceClassName *string `json:"space_class_name,omitempty"`
	// The database identifier (ID) of the space the object belongs to, a unique numeric key value automatically incremented when you add a space.
	SpaceId *string `json:"space_id,omitempty"`
	// The name of the space the object belongs to.
	SpaceName *string `json:"space_name,omitempty"`
	// The database identifier (ID) of the IPv4 network the object belongs to.
	NetworkId *string `json:"network_id,omitempty"`
}

// NewDataInnerIpamAliasData instantiates a new DataInnerIpamAliasData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataInnerIpamAliasData() *DataInnerIpamAliasData {
	this := DataInnerIpamAliasData{}
	return &this
}

// NewDataInnerIpamAliasDataWithDefaults instantiates a new DataInnerIpamAliasData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataInnerIpamAliasDataWithDefaults() *DataInnerIpamAliasData {
	this := DataInnerIpamAliasData{}
	return &this
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAliasName() string {
	if o == nil || IsNil(o.AliasName) {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAliasNameOk() (*string, bool) {
	if o == nil || IsNil(o.AliasName) {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAliasName() bool {
	if o != nil && !IsNil(o.AliasName) {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *DataInnerIpamAliasData) SetAliasName(v string) {
	o.AliasName = &v
}

// GetStaticId returns the StaticId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetStaticId() string {
	if o == nil || IsNil(o.StaticId) {
		var ret string
		return ret
	}
	return *o.StaticId
}

// GetStaticIdOk returns a tuple with the StaticId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetStaticIdOk() (*string, bool) {
	if o == nil || IsNil(o.StaticId) {
		return nil, false
	}
	return o.StaticId, true
}

// HasStaticId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasStaticId() bool {
	if o != nil && !IsNil(o.StaticId) {
		return true
	}

	return false
}

// SetStaticId gets a reference to the given string and assigns it to the StaticId field.
func (o *DataInnerIpamAliasData) SetStaticId(v string) {
	o.StaticId = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetLeaseId() string {
	if o == nil || IsNil(o.LeaseId) {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetLeaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeaseId) {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasLeaseId() bool {
	if o != nil && !IsNil(o.LeaseId) {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *DataInnerIpamAliasData) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *DataInnerIpamAliasData) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetInterfaceId() string {
	if o == nil || IsNil(o.InterfaceId) {
		var ret string
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetInterfaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given string and assigns it to the InterfaceId field.
func (o *DataInnerIpamAliasData) SetInterfaceId(v string) {
	o.InterfaceId = &v
}

// GetAddressAddr returns the AddressAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressAddr() string {
	if o == nil || IsNil(o.AddressAddr) {
		var ret string
		return ret
	}
	return *o.AddressAddr
}

// GetAddressAddrOk returns a tuple with the AddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressAddrOk() (*string, bool) {
	if o == nil || IsNil(o.AddressAddr) {
		return nil, false
	}
	return o.AddressAddr, true
}

// HasAddressAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressAddr() bool {
	if o != nil && !IsNil(o.AddressAddr) {
		return true
	}

	return false
}

// SetAddressAddr gets a reference to the given string and assigns it to the AddressAddr field.
func (o *DataInnerIpamAliasData) SetAddressAddr(v string) {
	o.AddressAddr = &v
}

// GetAddressClassName returns the AddressClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressClassName() string {
	if o == nil || IsNil(o.AddressClassName) {
		var ret string
		return ret
	}
	return *o.AddressClassName
}

// GetAddressClassNameOk returns a tuple with the AddressClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.AddressClassName) {
		return nil, false
	}
	return o.AddressClassName, true
}

// HasAddressClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressClassName() bool {
	if o != nil && !IsNil(o.AddressClassName) {
		return true
	}

	return false
}

// SetAddressClassName gets a reference to the given string and assigns it to the AddressClassName field.
func (o *DataInnerIpamAliasData) SetAddressClassName(v string) {
	o.AddressClassName = &v
}

// GetAddressClassParameters returns the AddressClassParameters field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || IsNil(o.AddressClassParameters) {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return o.AddressClassParameters
}

// GetAddressClassParametersOk returns a tuple with the AddressClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressClassParametersOk() ([]ApiClassParameterOutputEntry, bool) {
	if o == nil || IsNil(o.AddressClassParameters) {
		return nil, false
	}
	return o.AddressClassParameters, true
}

// HasAddressClassParameters returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressClassParameters() bool {
	if o != nil && !IsNil(o.AddressClassParameters) {
		return true
	}

	return false
}

// SetAddressClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the AddressClassParameters field.
func (o *DataInnerIpamAliasData) SetAddressClassParameters(v []ApiClassParameterOutputEntry) {
	o.AddressClassParameters = v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressId() string {
	if o == nil || IsNil(o.AddressId) {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *DataInnerIpamAliasData) SetAddressId(v string) {
	o.AddressId = &v
}

// GetAliasId returns the AliasId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAliasId() string {
	if o == nil || IsNil(o.AliasId) {
		var ret string
		return ret
	}
	return *o.AliasId
}

// GetAliasIdOk returns a tuple with the AliasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAliasIdOk() (*string, bool) {
	if o == nil || IsNil(o.AliasId) {
		return nil, false
	}
	return o.AliasId, true
}

// HasAliasId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAliasId() bool {
	if o != nil && !IsNil(o.AliasId) {
		return true
	}

	return false
}

// SetAliasId gets a reference to the given string and assigns it to the AliasId field.
func (o *DataInnerIpamAliasData) SetAliasId(v string) {
	o.AliasId = &v
}

// GetAliasType returns the AliasType field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAliasType() string {
	if o == nil || IsNil(o.AliasType) {
		var ret string
		return ret
	}
	return *o.AliasType
}

// GetAliasTypeOk returns a tuple with the AliasType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAliasTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AliasType) {
		return nil, false
	}
	return o.AliasType, true
}

// HasAliasType returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAliasType() bool {
	if o != nil && !IsNil(o.AliasType) {
		return true
	}

	return false
}

// SetAliasType gets a reference to the given string and assigns it to the AliasType field.
func (o *DataInnerIpamAliasData) SetAliasType(v string) {
	o.AliasType = &v
}

// GetAddressType returns the AddressType field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressType() string {
	if o == nil || IsNil(o.AddressType) {
		var ret string
		return ret
	}
	return *o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressType) {
		return nil, false
	}
	return o.AddressType, true
}

// HasAddressType returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressType() bool {
	if o != nil && !IsNil(o.AddressType) {
		return true
	}

	return false
}

// SetAddressType gets a reference to the given string and assigns it to the AddressType field.
func (o *DataInnerIpamAliasData) SetAddressType(v string) {
	o.AddressType = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *DataInnerIpamAliasData) SetPortId(v string) {
	o.PortId = &v
}

// GetAddressMacAddr returns the AddressMacAddr field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressMacAddr() string {
	if o == nil || IsNil(o.AddressMacAddr) {
		var ret string
		return ret
	}
	return *o.AddressMacAddr
}

// GetAddressMacAddrOk returns a tuple with the AddressMacAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressMacAddrOk() (*string, bool) {
	if o == nil || IsNil(o.AddressMacAddr) {
		return nil, false
	}
	return o.AddressMacAddr, true
}

// HasAddressMacAddr returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressMacAddr() bool {
	if o != nil && !IsNil(o.AddressMacAddr) {
		return true
	}

	return false
}

// SetAddressMacAddr gets a reference to the given string and assigns it to the AddressMacAddr field.
func (o *DataInnerIpamAliasData) SetAddressMacAddr(v string) {
	o.AddressMacAddr = &v
}

// GetAddressName returns the AddressName field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetAddressName() string {
	if o == nil || IsNil(o.AddressName) {
		var ret string
		return ret
	}
	return *o.AddressName
}

// GetAddressNameOk returns a tuple with the AddressName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetAddressNameOk() (*string, bool) {
	if o == nil || IsNil(o.AddressName) {
		return nil, false
	}
	return o.AddressName, true
}

// HasAddressName returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasAddressName() bool {
	if o != nil && !IsNil(o.AddressName) {
		return true
	}

	return false
}

// SetAddressName gets a reference to the given string and assigns it to the AddressName field.
func (o *DataInnerIpamAliasData) SetAddressName(v string) {
	o.AddressName = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetPoolId() string {
	if o == nil || IsNil(o.PoolId) {
		var ret string
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetPoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.PoolId) {
		return nil, false
	}
	return o.PoolId, true
}

// HasPoolId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasPoolId() bool {
	if o != nil && !IsNil(o.PoolId) {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given string and assigns it to the PoolId field.
func (o *DataInnerIpamAliasData) SetPoolId(v string) {
	o.PoolId = &v
}

// GetSpaceClassName returns the SpaceClassName field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetSpaceClassName() string {
	if o == nil || IsNil(o.SpaceClassName) {
		var ret string
		return ret
	}
	return *o.SpaceClassName
}

// GetSpaceClassNameOk returns a tuple with the SpaceClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetSpaceClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceClassName) {
		return nil, false
	}
	return o.SpaceClassName, true
}

// HasSpaceClassName returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasSpaceClassName() bool {
	if o != nil && !IsNil(o.SpaceClassName) {
		return true
	}

	return false
}

// SetSpaceClassName gets a reference to the given string and assigns it to the SpaceClassName field.
func (o *DataInnerIpamAliasData) SetSpaceClassName(v string) {
	o.SpaceClassName = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetSpaceId() string {
	if o == nil || IsNil(o.SpaceId) {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *DataInnerIpamAliasData) SetSpaceId(v string) {
	o.SpaceId = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetSpaceName() string {
	if o == nil || IsNil(o.SpaceName) {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceName) {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasSpaceName() bool {
	if o != nil && !IsNil(o.SpaceName) {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *DataInnerIpamAliasData) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *DataInnerIpamAliasData) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataInnerIpamAliasData) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *DataInnerIpamAliasData) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *DataInnerIpamAliasData) SetNetworkId(v string) {
	o.NetworkId = &v
}

func (o DataInnerIpamAliasData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataInnerIpamAliasData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AliasName) {
		toSerialize["alias_name"] = o.AliasName
	}
	if !IsNil(o.StaticId) {
		toSerialize["static_id"] = o.StaticId
	}
	if !IsNil(o.LeaseId) {
		toSerialize["lease_id"] = o.LeaseId
	}
	if !IsNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if !IsNil(o.AddressAddr) {
		toSerialize["address_addr"] = o.AddressAddr
	}
	if !IsNil(o.AddressClassName) {
		toSerialize["address_class_name"] = o.AddressClassName
	}
	if !IsNil(o.AddressClassParameters) {
		toSerialize["address_class_parameters"] = o.AddressClassParameters
	}
	if !IsNil(o.AddressId) {
		toSerialize["address_id"] = o.AddressId
	}
	if !IsNil(o.AliasId) {
		toSerialize["alias_id"] = o.AliasId
	}
	if !IsNil(o.AliasType) {
		toSerialize["alias_type"] = o.AliasType
	}
	if !IsNil(o.AddressType) {
		toSerialize["address_type"] = o.AddressType
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.AddressMacAddr) {
		toSerialize["address_mac_addr"] = o.AddressMacAddr
	}
	if !IsNil(o.AddressName) {
		toSerialize["address_name"] = o.AddressName
	}
	if !IsNil(o.PoolId) {
		toSerialize["pool_id"] = o.PoolId
	}
	if !IsNil(o.SpaceClassName) {
		toSerialize["space_class_name"] = o.SpaceClassName
	}
	if !IsNil(o.SpaceId) {
		toSerialize["space_id"] = o.SpaceId
	}
	if !IsNil(o.SpaceName) {
		toSerialize["space_name"] = o.SpaceName
	}
	if !IsNil(o.NetworkId) {
		toSerialize["network_id"] = o.NetworkId
	}
	return toSerialize, nil
}

type NullableDataInnerIpamAliasData struct {
	value *DataInnerIpamAliasData
	isSet bool
}

func (v NullableDataInnerIpamAliasData) Get() *DataInnerIpamAliasData {
	return v.value
}

func (v *NullableDataInnerIpamAliasData) Set(val *DataInnerIpamAliasData) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInnerIpamAliasData) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInnerIpamAliasData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInnerIpamAliasData(val *DataInnerIpamAliasData) *NullableDataInnerIpamAliasData {
	return &NullableDataInnerIpamAliasData{value: val, isSet: true}
}

func (v NullableDataInnerIpamAliasData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInnerIpamAliasData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
