/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// IpamAlias6AddInput struct for IpamAlias6AddInput
type IpamAlias6AddInput struct {
	// todo(here) :ipam.alias6.add.input.address6_hostaddr. : IPv6 address
	Address6Hostaddr *string `json:"address6_hostaddr,omitempty"`
	// The database identifier (ID) of the IPv6 address, a unique numeric key value automatically incremented when you add an IPv6 address. Use the ID to specify the IPv6 address of your choice.
	Address6Id *int32 `json:"address6_id,omitempty"`
	// todo(here) :ipam.alias6.add.input.alias6_name. : String
	Alias6Name *string `json:"alias6_name,omitempty"`
	// The database identifier (ID) of the space, a unique numeric key value automatically incremented when you add a space. Use the ID to specify the space of your choice.
	SpaceId *int32 `json:"space_id,omitempty"`
	// The name of the space.
	SpaceName *string `json:"space_name,omitempty"`
	// The type of the alias.
	Alias6Type *string `json:"alias6_type,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewIpamAlias6AddInput instantiates a new IpamAlias6AddInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamAlias6AddInput() *IpamAlias6AddInput {
	this := IpamAlias6AddInput{}
	return &this
}

// NewIpamAlias6AddInputWithDefaults instantiates a new IpamAlias6AddInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamAlias6AddInputWithDefaults() *IpamAlias6AddInput {
	this := IpamAlias6AddInput{}
	return &this
}

// GetAddress6Hostaddr returns the Address6Hostaddr field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetAddress6Hostaddr() string {
	if o == nil || o.Address6Hostaddr == nil {
		var ret string
		return ret
	}
	return *o.Address6Hostaddr
}

// GetAddress6HostaddrOk returns a tuple with the Address6Hostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetAddress6HostaddrOk() (*string, bool) {
	if o == nil || o.Address6Hostaddr == nil {
		return nil, false
	}
	return o.Address6Hostaddr, true
}

// HasAddress6Hostaddr returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasAddress6Hostaddr() bool {
	if o != nil && o.Address6Hostaddr != nil {
		return true
	}

	return false
}

// SetAddress6Hostaddr gets a reference to the given string and assigns it to the Address6Hostaddr field.
func (o *IpamAlias6AddInput) SetAddress6Hostaddr(v string) {
	o.Address6Hostaddr = &v
}

// GetAddress6Id returns the Address6Id field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetAddress6Id() int32 {
	if o == nil || o.Address6Id == nil {
		var ret int32
		return ret
	}
	return *o.Address6Id
}

// GetAddress6IdOk returns a tuple with the Address6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetAddress6IdOk() (*int32, bool) {
	if o == nil || o.Address6Id == nil {
		return nil, false
	}
	return o.Address6Id, true
}

// HasAddress6Id returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasAddress6Id() bool {
	if o != nil && o.Address6Id != nil {
		return true
	}

	return false
}

// SetAddress6Id gets a reference to the given int32 and assigns it to the Address6Id field.
func (o *IpamAlias6AddInput) SetAddress6Id(v int32) {
	o.Address6Id = &v
}

// GetAlias6Name returns the Alias6Name field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetAlias6Name() string {
	if o == nil || o.Alias6Name == nil {
		var ret string
		return ret
	}
	return *o.Alias6Name
}

// GetAlias6NameOk returns a tuple with the Alias6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetAlias6NameOk() (*string, bool) {
	if o == nil || o.Alias6Name == nil {
		return nil, false
	}
	return o.Alias6Name, true
}

// HasAlias6Name returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasAlias6Name() bool {
	if o != nil && o.Alias6Name != nil {
		return true
	}

	return false
}

// SetAlias6Name gets a reference to the given string and assigns it to the Alias6Name field.
func (o *IpamAlias6AddInput) SetAlias6Name(v string) {
	o.Alias6Name = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetSpaceId() int32 {
	if o == nil || o.SpaceId == nil {
		var ret int32
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetSpaceIdOk() (*int32, bool) {
	if o == nil || o.SpaceId == nil {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasSpaceId() bool {
	if o != nil && o.SpaceId != nil {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given int32 and assigns it to the SpaceId field.
func (o *IpamAlias6AddInput) SetSpaceId(v int32) {
	o.SpaceId = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetSpaceName() string {
	if o == nil || o.SpaceName == nil {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetSpaceNameOk() (*string, bool) {
	if o == nil || o.SpaceName == nil {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasSpaceName() bool {
	if o != nil && o.SpaceName != nil {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *IpamAlias6AddInput) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetAlias6Type returns the Alias6Type field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetAlias6Type() string {
	if o == nil || o.Alias6Type == nil {
		var ret string
		return ret
	}
	return *o.Alias6Type
}

// GetAlias6TypeOk returns a tuple with the Alias6Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetAlias6TypeOk() (*string, bool) {
	if o == nil || o.Alias6Type == nil {
		return nil, false
	}
	return o.Alias6Type, true
}

// HasAlias6Type returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasAlias6Type() bool {
	if o != nil && o.Alias6Type != nil {
		return true
	}

	return false
}

// SetAlias6Type gets a reference to the given string and assigns it to the Alias6Type field.
func (o *IpamAlias6AddInput) SetAlias6Type(v string) {
	o.Alias6Type = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *IpamAlias6AddInput) GetWarnings() string {
	if o == nil || o.Warnings == nil {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamAlias6AddInput) GetWarningsOk() (*string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *IpamAlias6AddInput) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *IpamAlias6AddInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o IpamAlias6AddInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address6Hostaddr != nil {
		toSerialize["address6_hostaddr"] = o.Address6Hostaddr
	}
	if o.Address6Id != nil {
		toSerialize["address6_id"] = o.Address6Id
	}
	if o.Alias6Name != nil {
		toSerialize["alias6_name"] = o.Alias6Name
	}
	if o.SpaceId != nil {
		toSerialize["space_id"] = o.SpaceId
	}
	if o.SpaceName != nil {
		toSerialize["space_name"] = o.SpaceName
	}
	if o.Alias6Type != nil {
		toSerialize["alias6_type"] = o.Alias6Type
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableIpamAlias6AddInput struct {
	value *IpamAlias6AddInput
	isSet bool
}

func (v NullableIpamAlias6AddInput) Get() *IpamAlias6AddInput {
	return v.value
}

func (v *NullableIpamAlias6AddInput) Set(val *IpamAlias6AddInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamAlias6AddInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamAlias6AddInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamAlias6AddInput(val *IpamAlias6AddInput) *NullableIpamAlias6AddInput {
	return &NullableIpamAlias6AddInput{value: val, isSet: true}
}

func (v NullableIpamAlias6AddInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamAlias6AddInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


