/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// IpamPool6AddInput struct for IpamPool6AddInput
type IpamPool6AddInput struct {
	// todo(here) :ipam.pool6.add.input.pool6_end_address_addr. : IPv6 address
	Pool6EndAddressAddr *string `json:"pool6_end_address_addr,omitempty"`
	// The database identifier (ID) of the space, a unique numeric key value automatically incremented when you add a space. Use the ID to specify the space of your choice.
	SpaceId *int32 `json:"space_id,omitempty"`
	// The name of the space.
	SpaceName *string `json:"space_name,omitempty"`
	// todo(here) :ipam.pool6.add.input.pool6_start_address_addr. : IPv6 address
	Pool6StartAddressAddr *string `json:"pool6_start_address_addr,omitempty"`
	// The database identifier (ID) of the IPv6 network, a unique numeric key value automatically incremented when you add an IPv6 network. Use the ID to specify the IPv6 network of your choice.
	Network6Id *int32 `json:"network6_id,omitempty"`
	// The name of the IPv6 pool, each IPv6 pool must have a unique name.
	Pool6Name *string `json:"pool6_name,omitempty"`
	// The reservation status of the IPv6 pool. If set 1, the IP addresses it contains cannot be assigned.
	Pool6ReadOnly *int32 `json:"pool6_read_only,omitempty"`
	// class parameters you want to delete from the object
	ClassParametersToDelete *[]string `json:"class_parameters_to_delete,omitempty"`
	// The name of the class to apply to the object you are adding. You must specify the class file directory, e.g. <b>my_directory/my_class.class</b> . You cannot use the classes <b>global</b> and <b>default</b>, they are reserved by the system.
	Pool6ClassName *string `json:"pool6_class_name,omitempty"`
	// class parameters in json format
	Pool6ClassParameters *[]ApiClassParameterInputEntry `json:"pool6_class_parameters,omitempty"`
	// A way to bypass <b>(accept) </b>any enabled rule that would return warning messages. If the service returns an error message, you cannot bypass the enabled rules.
	Warnings *string `json:"warnings,omitempty"`
}

// NewIpamPool6AddInput instantiates a new IpamPool6AddInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamPool6AddInput() *IpamPool6AddInput {
	this := IpamPool6AddInput{}
	return &this
}

// NewIpamPool6AddInputWithDefaults instantiates a new IpamPool6AddInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamPool6AddInputWithDefaults() *IpamPool6AddInput {
	this := IpamPool6AddInput{}
	return &this
}

// GetPool6EndAddressAddr returns the Pool6EndAddressAddr field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetPool6EndAddressAddr() string {
	if o == nil || o.Pool6EndAddressAddr == nil {
		var ret string
		return ret
	}
	return *o.Pool6EndAddressAddr
}

// GetPool6EndAddressAddrOk returns a tuple with the Pool6EndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetPool6EndAddressAddrOk() (*string, bool) {
	if o == nil || o.Pool6EndAddressAddr == nil {
		return nil, false
	}
	return o.Pool6EndAddressAddr, true
}

// HasPool6EndAddressAddr returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasPool6EndAddressAddr() bool {
	if o != nil && o.Pool6EndAddressAddr != nil {
		return true
	}

	return false
}

// SetPool6EndAddressAddr gets a reference to the given string and assigns it to the Pool6EndAddressAddr field.
func (o *IpamPool6AddInput) SetPool6EndAddressAddr(v string) {
	o.Pool6EndAddressAddr = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetSpaceId() int32 {
	if o == nil || o.SpaceId == nil {
		var ret int32
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetSpaceIdOk() (*int32, bool) {
	if o == nil || o.SpaceId == nil {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasSpaceId() bool {
	if o != nil && o.SpaceId != nil {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given int32 and assigns it to the SpaceId field.
func (o *IpamPool6AddInput) SetSpaceId(v int32) {
	o.SpaceId = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetSpaceName() string {
	if o == nil || o.SpaceName == nil {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetSpaceNameOk() (*string, bool) {
	if o == nil || o.SpaceName == nil {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasSpaceName() bool {
	if o != nil && o.SpaceName != nil {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *IpamPool6AddInput) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetPool6StartAddressAddr returns the Pool6StartAddressAddr field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetPool6StartAddressAddr() string {
	if o == nil || o.Pool6StartAddressAddr == nil {
		var ret string
		return ret
	}
	return *o.Pool6StartAddressAddr
}

// GetPool6StartAddressAddrOk returns a tuple with the Pool6StartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetPool6StartAddressAddrOk() (*string, bool) {
	if o == nil || o.Pool6StartAddressAddr == nil {
		return nil, false
	}
	return o.Pool6StartAddressAddr, true
}

// HasPool6StartAddressAddr returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasPool6StartAddressAddr() bool {
	if o != nil && o.Pool6StartAddressAddr != nil {
		return true
	}

	return false
}

// SetPool6StartAddressAddr gets a reference to the given string and assigns it to the Pool6StartAddressAddr field.
func (o *IpamPool6AddInput) SetPool6StartAddressAddr(v string) {
	o.Pool6StartAddressAddr = &v
}

// GetNetwork6Id returns the Network6Id field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetNetwork6Id() int32 {
	if o == nil || o.Network6Id == nil {
		var ret int32
		return ret
	}
	return *o.Network6Id
}

// GetNetwork6IdOk returns a tuple with the Network6Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetNetwork6IdOk() (*int32, bool) {
	if o == nil || o.Network6Id == nil {
		return nil, false
	}
	return o.Network6Id, true
}

// HasNetwork6Id returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasNetwork6Id() bool {
	if o != nil && o.Network6Id != nil {
		return true
	}

	return false
}

// SetNetwork6Id gets a reference to the given int32 and assigns it to the Network6Id field.
func (o *IpamPool6AddInput) SetNetwork6Id(v int32) {
	o.Network6Id = &v
}

// GetPool6Name returns the Pool6Name field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetPool6Name() string {
	if o == nil || o.Pool6Name == nil {
		var ret string
		return ret
	}
	return *o.Pool6Name
}

// GetPool6NameOk returns a tuple with the Pool6Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetPool6NameOk() (*string, bool) {
	if o == nil || o.Pool6Name == nil {
		return nil, false
	}
	return o.Pool6Name, true
}

// HasPool6Name returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasPool6Name() bool {
	if o != nil && o.Pool6Name != nil {
		return true
	}

	return false
}

// SetPool6Name gets a reference to the given string and assigns it to the Pool6Name field.
func (o *IpamPool6AddInput) SetPool6Name(v string) {
	o.Pool6Name = &v
}

// GetPool6ReadOnly returns the Pool6ReadOnly field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetPool6ReadOnly() int32 {
	if o == nil || o.Pool6ReadOnly == nil {
		var ret int32
		return ret
	}
	return *o.Pool6ReadOnly
}

// GetPool6ReadOnlyOk returns a tuple with the Pool6ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetPool6ReadOnlyOk() (*int32, bool) {
	if o == nil || o.Pool6ReadOnly == nil {
		return nil, false
	}
	return o.Pool6ReadOnly, true
}

// HasPool6ReadOnly returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasPool6ReadOnly() bool {
	if o != nil && o.Pool6ReadOnly != nil {
		return true
	}

	return false
}

// SetPool6ReadOnly gets a reference to the given int32 and assigns it to the Pool6ReadOnly field.
func (o *IpamPool6AddInput) SetPool6ReadOnly(v int32) {
	o.Pool6ReadOnly = &v
}

// GetClassParametersToDelete returns the ClassParametersToDelete field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetClassParametersToDelete() []string {
	if o == nil || o.ClassParametersToDelete == nil {
		var ret []string
		return ret
	}
	return *o.ClassParametersToDelete
}

// GetClassParametersToDeleteOk returns a tuple with the ClassParametersToDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetClassParametersToDeleteOk() (*[]string, bool) {
	if o == nil || o.ClassParametersToDelete == nil {
		return nil, false
	}
	return o.ClassParametersToDelete, true
}

// HasClassParametersToDelete returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasClassParametersToDelete() bool {
	if o != nil && o.ClassParametersToDelete != nil {
		return true
	}

	return false
}

// SetClassParametersToDelete gets a reference to the given []string and assigns it to the ClassParametersToDelete field.
func (o *IpamPool6AddInput) SetClassParametersToDelete(v []string) {
	o.ClassParametersToDelete = &v
}

// GetPool6ClassName returns the Pool6ClassName field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetPool6ClassName() string {
	if o == nil || o.Pool6ClassName == nil {
		var ret string
		return ret
	}
	return *o.Pool6ClassName
}

// GetPool6ClassNameOk returns a tuple with the Pool6ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetPool6ClassNameOk() (*string, bool) {
	if o == nil || o.Pool6ClassName == nil {
		return nil, false
	}
	return o.Pool6ClassName, true
}

// HasPool6ClassName returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasPool6ClassName() bool {
	if o != nil && o.Pool6ClassName != nil {
		return true
	}

	return false
}

// SetPool6ClassName gets a reference to the given string and assigns it to the Pool6ClassName field.
func (o *IpamPool6AddInput) SetPool6ClassName(v string) {
	o.Pool6ClassName = &v
}

// GetPool6ClassParameters returns the Pool6ClassParameters field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetPool6ClassParameters() []ApiClassParameterInputEntry {
	if o == nil || o.Pool6ClassParameters == nil {
		var ret []ApiClassParameterInputEntry
		return ret
	}
	return *o.Pool6ClassParameters
}

// GetPool6ClassParametersOk returns a tuple with the Pool6ClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetPool6ClassParametersOk() (*[]ApiClassParameterInputEntry, bool) {
	if o == nil || o.Pool6ClassParameters == nil {
		return nil, false
	}
	return o.Pool6ClassParameters, true
}

// HasPool6ClassParameters returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasPool6ClassParameters() bool {
	if o != nil && o.Pool6ClassParameters != nil {
		return true
	}

	return false
}

// SetPool6ClassParameters gets a reference to the given []ApiClassParameterInputEntry and assigns it to the Pool6ClassParameters field.
func (o *IpamPool6AddInput) SetPool6ClassParameters(v []ApiClassParameterInputEntry) {
	o.Pool6ClassParameters = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *IpamPool6AddInput) GetWarnings() string {
	if o == nil || o.Warnings == nil {
		var ret string
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamPool6AddInput) GetWarningsOk() (*string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *IpamPool6AddInput) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given string and assigns it to the Warnings field.
func (o *IpamPool6AddInput) SetWarnings(v string) {
	o.Warnings = &v
}

func (o IpamPool6AddInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pool6EndAddressAddr != nil {
		toSerialize["pool6_end_address_addr"] = o.Pool6EndAddressAddr
	}
	if o.SpaceId != nil {
		toSerialize["space_id"] = o.SpaceId
	}
	if o.SpaceName != nil {
		toSerialize["space_name"] = o.SpaceName
	}
	if o.Pool6StartAddressAddr != nil {
		toSerialize["pool6_start_address_addr"] = o.Pool6StartAddressAddr
	}
	if o.Network6Id != nil {
		toSerialize["network6_id"] = o.Network6Id
	}
	if o.Pool6Name != nil {
		toSerialize["pool6_name"] = o.Pool6Name
	}
	if o.Pool6ReadOnly != nil {
		toSerialize["pool6_read_only"] = o.Pool6ReadOnly
	}
	if o.ClassParametersToDelete != nil {
		toSerialize["class_parameters_to_delete"] = o.ClassParametersToDelete
	}
	if o.Pool6ClassName != nil {
		toSerialize["pool6_class_name"] = o.Pool6ClassName
	}
	if o.Pool6ClassParameters != nil {
		toSerialize["pool6_class_parameters"] = o.Pool6ClassParameters
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableIpamPool6AddInput struct {
	value *IpamPool6AddInput
	isSet bool
}

func (v NullableIpamPool6AddInput) Get() *IpamPool6AddInput {
	return v.value
}

func (v *NullableIpamPool6AddInput) Set(val *IpamPool6AddInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamPool6AddInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamPool6AddInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamPool6AddInput(val *IpamPool6AddInput) *NullableIpamPool6AddInput {
	return &NullableIpamPool6AddInput{value: val, isSet: true}
}

func (v NullableIpamPool6AddInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamPool6AddInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


