/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// IpamNetworkDataData struct for IpamNetworkDataData
type IpamNetworkDataData struct {
	// The human readable version of the parameter <b>end_ip_addr</b>.
	NetworkEndHostaddr *string `json:"network_end_hostaddr,omitempty"`
	// todo(here) :ipam.network.list.output.network_end_address_addr. : 
	NetworkEndAddressAddr *string `json:"network_end_address_addr,omitempty"`
	// A way to determine if the network has a parent (<b>0</b>) or if it belongs to a container <b>Orphan networks</b> (<b>1</b>).
	NetworkIsInOrphan *string `json:"network_is_in_orphan,omitempty"`
	// A way to determine if a network can contain other networks. If set to <b>1</b>, the network is terminal and cannot contain other subnet-type networks. Block-type networks are always set to <b>0</b>.
	NetworkIsTerminal *string `json:"network_is_terminal,omitempty"`
	// A way to prevent <b>(1)</b> users from assigning the broadcast IP address and network IP address of the network.
	NetworkLockNetworkBroadcast *string `json:"network_lock_network_broadcast,omitempty"`
	// The Multi-status information is displayed as follows: <i>&lt;number-of-instances&gt;@&lt;message-number&gt;@&lt;multi-status-severity&gt;@&lt;module&gt;</i>. The different severity levels are:<br><b>Multi-status severity levels</b>    <table border=1>        <thead>        <tr >            <td><b>Message number</b></td>            <td><b>Severity</b></td>            <td><b>Description</b></td>        </tr>        </thead>        <tbody>        <tr  valign=middle>            <td>0 - 16</td>            <td>Emergency</td>            <td>The object configuration prevents the system from running properly. Action is required.</td>        </tr>        <tr  valign=middle>            <td>17 - 33</td>            <td>Critical</td>            <td>The object configuration is in critical conditions. Immediate action is recommended.</td>        </tr>        <tr  valign=middle>            <td>34 - 50</td>            <td>Error</td>            <td>The object configuration failed at some level. Action is recommended.</td>        </tr>        <tr  valign=middle>            <td>51 - 66</td>            <td>Warning</td>            <td>The object configuration triggers error messages if no action is taken. Action to be taken at your discretion.</td>        </tr>        <tr  valign=middle>            <td>67 - 83</td>            <td>Notice</td>            <td>The object configuration is normal but undergoing events that might trigger errors. No immediate action required.</td>        </tr>        <tr  valign=middle>            <td>84 - 100</td>            <td>Informational</td>            <td>The object configuration is normal, operational messages (might inform you about potential incompatibilities with other modules, etc). No action required.</td>        </tr>        </tbody></table>
	NetworkMultistatus *string `json:"network_multistatus,omitempty"`
	// todo(here) :ipam.network.list.output.parent_network_end_address_addr. : 
	ParentNetworkEndAddressAddr *string `json:"parent_network_end_address_addr,omitempty"`
	// A way to determine if the parent network is terminal (<b>1</b>) or non-terminal (<b>0</b>).
	ParentNetworkIsTerminal *string `json:"parent_network_is_terminal,omitempty"`
	// The database identifier (ID) of the space where is located the parent network. <b>0</b> indicates that the network has no parent network.
	ParentSpaceId *string `json:"parent_space_id,omitempty"`
	// The name of the space where is located the parent network. <b>#</b> indicates that the network has no parent network.
	ParentSpaceName *string `json:"parent_space_name,omitempty"`
	// todo(here) :ipam.network.list.output.parent_network_start_address_addr. : 
	ParentNetworkStartAddressAddr *string `json:"parent_network_start_address_addr,omitempty"`
	// The name of the class applied to the parent IPv4 network, it can be preceded by the class directory.
	ParentNetworkClassName *string `json:"parent_network_class_name,omitempty"`
	// The class parameters applied to the parent IPv4 network and their value: <b>&lt;class-parameter1&gt;=&lt;value1&gt;&amp;&lt;class-parameter2&gt;=&lt;value2&gt;&amp;...</b> .
	ParentNetworkClassParameters *[]ApiClassParameterOutputEntry `json:"parent_network_class_parameters,omitempty"`
	// The database identifier (ID) of the parent IPv4 network. <b>0</b> indicates that the network has no parent network.
	ParentNetworkId *string `json:"parent_network_id,omitempty"`
	// The level of the parent network within the space. It returns values between <b>0</b> (block-type network) and <b>n</b> (subnet-type network). A value higher than <b>1</b> indicates a VLSM organization where a block-type network can belong to another subnet-type network.
	ParentNetworkLevel *string `json:"parent_network_level,omitempty"`
	// The name of the parent IPv4 network:<ul class=dashed ><li><b>#</b> indicates that the network has no parent network.<br/>                                            </li><li><b>Default</b> indicates that the network belongs to an orphan network.<br/>                                            </li></ul>
	ParentNetworkName *string `json:"parent_network_name,omitempty"`
	// The path toward the parent network in the database. <b>#</b> indicates the network has no parent network.
	ParentNetworkPath *string `json:"parent_network_path,omitempty"`
	// The number of IP addresses of the network parent.
	ParentNetworkSize *string `json:"parent_network_size,omitempty"`
	// The database identifier (ID) of the IPv4 subnet-type network, located in the VLSM parent space, from which the parent network was duplicated. <b>0</b> indicates that the parent network is not a VLSM block-type network duplicated from a parent space.
	ParentVlsmNetworkId *string `json:"parent_vlsm_network_id,omitempty"`
	// The name of the class applied to the space the object belongs to, it can be preceded by the class directory.
	SpaceClassName *string `json:"space_class_name,omitempty"`
	// #general.output.class_parameters#
	SpaceClassParameters *[]ApiClassParameterOutputEntry `json:"space_class_parameters,omitempty"`
	// The description of the space the object belongs to.
	SpaceDescription *string `json:"space_description,omitempty"`
	// The database identifier (ID) of the space the object belongs to, a unique numeric key value automatically incremented when you add a space.
	SpaceId *string `json:"space_id,omitempty"`
	// The template status of the space the object belongs to. If the space is used as template (1), all the IPv4 networks, pools and IP addresses it contains are also used as template.
	SpaceIsTemplate *string `json:"space_is_template,omitempty"`
	// The name of the space the object belongs to.
	SpaceName *string `json:"space_name,omitempty"`
	// The database identifier (ID) of the VLSM parent of the space where is located the network. <b>0</b> indicates that the space where is located the network has no parent space.
	SpaceParentSpaceId *string `json:"space_parent_space_id,omitempty"`
	// The human readable version of the parameter <b>start_ip_addr</b>.
	NetworkStartHostaddr *string `json:"network_start_hostaddr,omitempty"`
	// todo(here) :ipam.network.list.output.network_start_address_addr. : 
	NetworkStartAddressAddr *string `json:"network_start_address_addr,omitempty"`
	// The percentage of subnet-type networks the non-terminal network contains.
	NetworkAllocatedPercent *string `json:"network_allocated_percent,omitempty"`
	// The sum of the size of all the subnet-type networks that belong to the block-type network.
	NetworkAllocatedSize *string `json:"network_allocated_size,omitempty"`
	// The name of the class applied to the IPv4 network, it can be preceded by the class directory.
	NetworkClassName *string `json:"network_class_name,omitempty"`
	// #general.output.class_parameters#
	NetworkClassParameters *[]ApiClassParameterOutputEntry `json:"network_class_parameters,omitempty"`
	// The database identifier (ID) of the IPv4 network.
	NetworkId *string `json:"network_id,omitempty"`
	// The total number of free addresses, for terminal networks only. It excludes the network and broadcast IP address.
	NetworkAddressFreeSize *string `json:"network_address_free_size,omitempty"`
	// The percentage of IP addresses <b>In use</b> in terminal networks.
	NetworkAddressUsedPercent *string `json:"network_address_used_percent,omitempty"`
	// The number of IP addresses <b>In use</b> in terminal networks.
	NetworkAddressUsedSize *string `json:"network_address_used_size,omitempty"`
	// The network validity. A valid network (<b>1</b>) has a size, prefix and/or netmask that match.
	NetworkIsValid *string `json:"network_is_valid,omitempty"`
	// The level of the network within the space. It returns values between <b>0</b> (block-type network) and <b>n</b> (subnet-type network). A value higher than <b>1</b> indicates a VLSM organization where a block-type network can belong to another subnet-type network.
	NetworkLevel *string `json:"network_level,omitempty"`
	// The name of the IPv4 network. <b>Default</b> indicates that the network is an orphan network.
	NetworkName *string `json:"network_name,omitempty"`
	// The number of IP addresses the IPv4 network contains.
	NetworkSize *string `json:"network_size,omitempty"`
	// The percentage of terminal networks the non-terminal network contains.
	NetworkUsedPercent *string `json:"network_used_percent,omitempty"`
	// The sum of the size of all the terminal networks within the block-type network. This sum includes the terminal networks that might belong to non-terminal subnet-type networks.
	NetworkUsedSize *string `json:"network_used_size,omitempty"`
	// The database identifier (ID) of the VLAN domain associated with the network.
	DomainId *string `json:"domain_id,omitempty"`
	// The name of the VLAN domain associated with the network.
	DomainName *string `json:"domain_name,omitempty"`
	// The database identifier (ID) of the VLAN range associated with the network.
	RangeId *string `json:"range_id,omitempty"`
	// The name of the VLAN range associated with the network.
	RangeName *string `json:"range_name,omitempty"`
	// The database identifier (ID) of the VLAN associated with the network.
	VlanId *string `json:"vlan_id,omitempty"`
	// The name of the VLAN associated with the network.
	VlanName *string `json:"vlan_name,omitempty"`
	// The VLAN identifier (ID) of the VLAN associated with the network.
	VlanVlanId *string `json:"vlan_vlan_id,omitempty"`
	// The database identifier (ID) of the IPv4 VLSM block-type network duplicated, in a VLSM child space, from the network. <b>0</b> indicates that the network is not duplicated as a VLSM block-type network in a child space.
	VlsmBlockId *string `json:"vlsm_block_id,omitempty"`
	// The database identifier (ID) of the VLSM child space where the network is duplicated as a VLSM block-type network. <b>0</b> indicates that the network is not duplicated as a VLSM block-type network in a child space.
	VlsmSpaceId *string `json:"vlsm_space_id,omitempty"`
	// The name of the VLSM child space where the network is duplicated as a VLSM block-type network. <b>0</b> indicates that the network is not duplicated as a VLSM block-type network in a child space.
	VlsmSpaceName *string `json:"vlsm_space_name,omitempty"`
	// The database identifier (ID) of the IPv4 subnet-type network, located in the VLSM parent space, from which the network was duplicated. <b>0</b> indicates that the network is not a VLSM block-type network duplicated from a parent space.
	VlsmNetworkId *string `json:"vlsm_network_id,omitempty"`
	// The state of the exchange between SOLIDserver and the RIPE for the assigned network: <table><caption>waiting_state possible values</caption><br/><thead><tr><th>Status</th><th>Description</th></tr><br/></thead><br/><tbody><tr><td >must_send_mail_add</td><td >An email must be sent to the RIPE to notify them of a subnet-type network creation.</td></tr><tr><td >wait_mail_add</td><td >A network creation email was sent to the RIPE, no reply has been received yet.</td></tr><tr><td >must_send_mail_del</td><td >An email must be sent to the RIPE to notify them of a subnet-type network deletion.</td></tr><tr><td >wait_mail_del</td><td >A network deletion email was sent to the RIPE, no reply has been received yet.</td></tr><tr><td >wait_aw_confirm</td><td >The number of IP addresses of the assigned network exceeds the Assignment Window declared during your RIPE configuration.</td></tr></tbody></table></p><br/>
	NetworkRipeWaitingState *string `json:"network_ripe_waiting_state,omitempty"`
	// The status of a RIPE assigned network within SOLIDserver until it is confirmed that you can create or delete it. If set to <b>1</b>, it is about to be created. If set to <b>2</b>, it is about to be deleted.
	NetworkRipeWaitingStatus *string `json:"network_ripe_waiting_status,omitempty"`
}

// NewIpamNetworkDataData instantiates a new IpamNetworkDataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamNetworkDataData() *IpamNetworkDataData {
	this := IpamNetworkDataData{}
	return &this
}

// NewIpamNetworkDataDataWithDefaults instantiates a new IpamNetworkDataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamNetworkDataDataWithDefaults() *IpamNetworkDataData {
	this := IpamNetworkDataData{}
	return &this
}

// GetNetworkEndHostaddr returns the NetworkEndHostaddr field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkEndHostaddr() string {
	if o == nil || o.NetworkEndHostaddr == nil {
		var ret string
		return ret
	}
	return *o.NetworkEndHostaddr
}

// GetNetworkEndHostaddrOk returns a tuple with the NetworkEndHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkEndHostaddrOk() (*string, bool) {
	if o == nil || o.NetworkEndHostaddr == nil {
		return nil, false
	}
	return o.NetworkEndHostaddr, true
}

// HasNetworkEndHostaddr returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkEndHostaddr() bool {
	if o != nil && o.NetworkEndHostaddr != nil {
		return true
	}

	return false
}

// SetNetworkEndHostaddr gets a reference to the given string and assigns it to the NetworkEndHostaddr field.
func (o *IpamNetworkDataData) SetNetworkEndHostaddr(v string) {
	o.NetworkEndHostaddr = &v
}

// GetNetworkEndAddressAddr returns the NetworkEndAddressAddr field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkEndAddressAddr() string {
	if o == nil || o.NetworkEndAddressAddr == nil {
		var ret string
		return ret
	}
	return *o.NetworkEndAddressAddr
}

// GetNetworkEndAddressAddrOk returns a tuple with the NetworkEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkEndAddressAddrOk() (*string, bool) {
	if o == nil || o.NetworkEndAddressAddr == nil {
		return nil, false
	}
	return o.NetworkEndAddressAddr, true
}

// HasNetworkEndAddressAddr returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkEndAddressAddr() bool {
	if o != nil && o.NetworkEndAddressAddr != nil {
		return true
	}

	return false
}

// SetNetworkEndAddressAddr gets a reference to the given string and assigns it to the NetworkEndAddressAddr field.
func (o *IpamNetworkDataData) SetNetworkEndAddressAddr(v string) {
	o.NetworkEndAddressAddr = &v
}

// GetNetworkIsInOrphan returns the NetworkIsInOrphan field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkIsInOrphan() string {
	if o == nil || o.NetworkIsInOrphan == nil {
		var ret string
		return ret
	}
	return *o.NetworkIsInOrphan
}

// GetNetworkIsInOrphanOk returns a tuple with the NetworkIsInOrphan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkIsInOrphanOk() (*string, bool) {
	if o == nil || o.NetworkIsInOrphan == nil {
		return nil, false
	}
	return o.NetworkIsInOrphan, true
}

// HasNetworkIsInOrphan returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkIsInOrphan() bool {
	if o != nil && o.NetworkIsInOrphan != nil {
		return true
	}

	return false
}

// SetNetworkIsInOrphan gets a reference to the given string and assigns it to the NetworkIsInOrphan field.
func (o *IpamNetworkDataData) SetNetworkIsInOrphan(v string) {
	o.NetworkIsInOrphan = &v
}

// GetNetworkIsTerminal returns the NetworkIsTerminal field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkIsTerminal() string {
	if o == nil || o.NetworkIsTerminal == nil {
		var ret string
		return ret
	}
	return *o.NetworkIsTerminal
}

// GetNetworkIsTerminalOk returns a tuple with the NetworkIsTerminal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkIsTerminalOk() (*string, bool) {
	if o == nil || o.NetworkIsTerminal == nil {
		return nil, false
	}
	return o.NetworkIsTerminal, true
}

// HasNetworkIsTerminal returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkIsTerminal() bool {
	if o != nil && o.NetworkIsTerminal != nil {
		return true
	}

	return false
}

// SetNetworkIsTerminal gets a reference to the given string and assigns it to the NetworkIsTerminal field.
func (o *IpamNetworkDataData) SetNetworkIsTerminal(v string) {
	o.NetworkIsTerminal = &v
}

// GetNetworkLockNetworkBroadcast returns the NetworkLockNetworkBroadcast field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkLockNetworkBroadcast() string {
	if o == nil || o.NetworkLockNetworkBroadcast == nil {
		var ret string
		return ret
	}
	return *o.NetworkLockNetworkBroadcast
}

// GetNetworkLockNetworkBroadcastOk returns a tuple with the NetworkLockNetworkBroadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkLockNetworkBroadcastOk() (*string, bool) {
	if o == nil || o.NetworkLockNetworkBroadcast == nil {
		return nil, false
	}
	return o.NetworkLockNetworkBroadcast, true
}

// HasNetworkLockNetworkBroadcast returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkLockNetworkBroadcast() bool {
	if o != nil && o.NetworkLockNetworkBroadcast != nil {
		return true
	}

	return false
}

// SetNetworkLockNetworkBroadcast gets a reference to the given string and assigns it to the NetworkLockNetworkBroadcast field.
func (o *IpamNetworkDataData) SetNetworkLockNetworkBroadcast(v string) {
	o.NetworkLockNetworkBroadcast = &v
}

// GetNetworkMultistatus returns the NetworkMultistatus field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkMultistatus() string {
	if o == nil || o.NetworkMultistatus == nil {
		var ret string
		return ret
	}
	return *o.NetworkMultistatus
}

// GetNetworkMultistatusOk returns a tuple with the NetworkMultistatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkMultistatusOk() (*string, bool) {
	if o == nil || o.NetworkMultistatus == nil {
		return nil, false
	}
	return o.NetworkMultistatus, true
}

// HasNetworkMultistatus returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkMultistatus() bool {
	if o != nil && o.NetworkMultistatus != nil {
		return true
	}

	return false
}

// SetNetworkMultistatus gets a reference to the given string and assigns it to the NetworkMultistatus field.
func (o *IpamNetworkDataData) SetNetworkMultistatus(v string) {
	o.NetworkMultistatus = &v
}

// GetParentNetworkEndAddressAddr returns the ParentNetworkEndAddressAddr field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkEndAddressAddr() string {
	if o == nil || o.ParentNetworkEndAddressAddr == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkEndAddressAddr
}

// GetParentNetworkEndAddressAddrOk returns a tuple with the ParentNetworkEndAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkEndAddressAddrOk() (*string, bool) {
	if o == nil || o.ParentNetworkEndAddressAddr == nil {
		return nil, false
	}
	return o.ParentNetworkEndAddressAddr, true
}

// HasParentNetworkEndAddressAddr returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkEndAddressAddr() bool {
	if o != nil && o.ParentNetworkEndAddressAddr != nil {
		return true
	}

	return false
}

// SetParentNetworkEndAddressAddr gets a reference to the given string and assigns it to the ParentNetworkEndAddressAddr field.
func (o *IpamNetworkDataData) SetParentNetworkEndAddressAddr(v string) {
	o.ParentNetworkEndAddressAddr = &v
}

// GetParentNetworkIsTerminal returns the ParentNetworkIsTerminal field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkIsTerminal() string {
	if o == nil || o.ParentNetworkIsTerminal == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkIsTerminal
}

// GetParentNetworkIsTerminalOk returns a tuple with the ParentNetworkIsTerminal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkIsTerminalOk() (*string, bool) {
	if o == nil || o.ParentNetworkIsTerminal == nil {
		return nil, false
	}
	return o.ParentNetworkIsTerminal, true
}

// HasParentNetworkIsTerminal returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkIsTerminal() bool {
	if o != nil && o.ParentNetworkIsTerminal != nil {
		return true
	}

	return false
}

// SetParentNetworkIsTerminal gets a reference to the given string and assigns it to the ParentNetworkIsTerminal field.
func (o *IpamNetworkDataData) SetParentNetworkIsTerminal(v string) {
	o.ParentNetworkIsTerminal = &v
}

// GetParentSpaceId returns the ParentSpaceId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentSpaceId() string {
	if o == nil || o.ParentSpaceId == nil {
		var ret string
		return ret
	}
	return *o.ParentSpaceId
}

// GetParentSpaceIdOk returns a tuple with the ParentSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentSpaceIdOk() (*string, bool) {
	if o == nil || o.ParentSpaceId == nil {
		return nil, false
	}
	return o.ParentSpaceId, true
}

// HasParentSpaceId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentSpaceId() bool {
	if o != nil && o.ParentSpaceId != nil {
		return true
	}

	return false
}

// SetParentSpaceId gets a reference to the given string and assigns it to the ParentSpaceId field.
func (o *IpamNetworkDataData) SetParentSpaceId(v string) {
	o.ParentSpaceId = &v
}

// GetParentSpaceName returns the ParentSpaceName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentSpaceName() string {
	if o == nil || o.ParentSpaceName == nil {
		var ret string
		return ret
	}
	return *o.ParentSpaceName
}

// GetParentSpaceNameOk returns a tuple with the ParentSpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentSpaceNameOk() (*string, bool) {
	if o == nil || o.ParentSpaceName == nil {
		return nil, false
	}
	return o.ParentSpaceName, true
}

// HasParentSpaceName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentSpaceName() bool {
	if o != nil && o.ParentSpaceName != nil {
		return true
	}

	return false
}

// SetParentSpaceName gets a reference to the given string and assigns it to the ParentSpaceName field.
func (o *IpamNetworkDataData) SetParentSpaceName(v string) {
	o.ParentSpaceName = &v
}

// GetParentNetworkStartAddressAddr returns the ParentNetworkStartAddressAddr field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkStartAddressAddr() string {
	if o == nil || o.ParentNetworkStartAddressAddr == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkStartAddressAddr
}

// GetParentNetworkStartAddressAddrOk returns a tuple with the ParentNetworkStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkStartAddressAddrOk() (*string, bool) {
	if o == nil || o.ParentNetworkStartAddressAddr == nil {
		return nil, false
	}
	return o.ParentNetworkStartAddressAddr, true
}

// HasParentNetworkStartAddressAddr returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkStartAddressAddr() bool {
	if o != nil && o.ParentNetworkStartAddressAddr != nil {
		return true
	}

	return false
}

// SetParentNetworkStartAddressAddr gets a reference to the given string and assigns it to the ParentNetworkStartAddressAddr field.
func (o *IpamNetworkDataData) SetParentNetworkStartAddressAddr(v string) {
	o.ParentNetworkStartAddressAddr = &v
}

// GetParentNetworkClassName returns the ParentNetworkClassName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkClassName() string {
	if o == nil || o.ParentNetworkClassName == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkClassName
}

// GetParentNetworkClassNameOk returns a tuple with the ParentNetworkClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkClassNameOk() (*string, bool) {
	if o == nil || o.ParentNetworkClassName == nil {
		return nil, false
	}
	return o.ParentNetworkClassName, true
}

// HasParentNetworkClassName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkClassName() bool {
	if o != nil && o.ParentNetworkClassName != nil {
		return true
	}

	return false
}

// SetParentNetworkClassName gets a reference to the given string and assigns it to the ParentNetworkClassName field.
func (o *IpamNetworkDataData) SetParentNetworkClassName(v string) {
	o.ParentNetworkClassName = &v
}

// GetParentNetworkClassParameters returns the ParentNetworkClassParameters field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || o.ParentNetworkClassParameters == nil {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return *o.ParentNetworkClassParameters
}

// GetParentNetworkClassParametersOk returns a tuple with the ParentNetworkClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkClassParametersOk() (*[]ApiClassParameterOutputEntry, bool) {
	if o == nil || o.ParentNetworkClassParameters == nil {
		return nil, false
	}
	return o.ParentNetworkClassParameters, true
}

// HasParentNetworkClassParameters returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkClassParameters() bool {
	if o != nil && o.ParentNetworkClassParameters != nil {
		return true
	}

	return false
}

// SetParentNetworkClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the ParentNetworkClassParameters field.
func (o *IpamNetworkDataData) SetParentNetworkClassParameters(v []ApiClassParameterOutputEntry) {
	o.ParentNetworkClassParameters = &v
}

// GetParentNetworkId returns the ParentNetworkId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkId() string {
	if o == nil || o.ParentNetworkId == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkId
}

// GetParentNetworkIdOk returns a tuple with the ParentNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkIdOk() (*string, bool) {
	if o == nil || o.ParentNetworkId == nil {
		return nil, false
	}
	return o.ParentNetworkId, true
}

// HasParentNetworkId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkId() bool {
	if o != nil && o.ParentNetworkId != nil {
		return true
	}

	return false
}

// SetParentNetworkId gets a reference to the given string and assigns it to the ParentNetworkId field.
func (o *IpamNetworkDataData) SetParentNetworkId(v string) {
	o.ParentNetworkId = &v
}

// GetParentNetworkLevel returns the ParentNetworkLevel field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkLevel() string {
	if o == nil || o.ParentNetworkLevel == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkLevel
}

// GetParentNetworkLevelOk returns a tuple with the ParentNetworkLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkLevelOk() (*string, bool) {
	if o == nil || o.ParentNetworkLevel == nil {
		return nil, false
	}
	return o.ParentNetworkLevel, true
}

// HasParentNetworkLevel returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkLevel() bool {
	if o != nil && o.ParentNetworkLevel != nil {
		return true
	}

	return false
}

// SetParentNetworkLevel gets a reference to the given string and assigns it to the ParentNetworkLevel field.
func (o *IpamNetworkDataData) SetParentNetworkLevel(v string) {
	o.ParentNetworkLevel = &v
}

// GetParentNetworkName returns the ParentNetworkName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkName() string {
	if o == nil || o.ParentNetworkName == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkName
}

// GetParentNetworkNameOk returns a tuple with the ParentNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkNameOk() (*string, bool) {
	if o == nil || o.ParentNetworkName == nil {
		return nil, false
	}
	return o.ParentNetworkName, true
}

// HasParentNetworkName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkName() bool {
	if o != nil && o.ParentNetworkName != nil {
		return true
	}

	return false
}

// SetParentNetworkName gets a reference to the given string and assigns it to the ParentNetworkName field.
func (o *IpamNetworkDataData) SetParentNetworkName(v string) {
	o.ParentNetworkName = &v
}

// GetParentNetworkPath returns the ParentNetworkPath field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkPath() string {
	if o == nil || o.ParentNetworkPath == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkPath
}

// GetParentNetworkPathOk returns a tuple with the ParentNetworkPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkPathOk() (*string, bool) {
	if o == nil || o.ParentNetworkPath == nil {
		return nil, false
	}
	return o.ParentNetworkPath, true
}

// HasParentNetworkPath returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkPath() bool {
	if o != nil && o.ParentNetworkPath != nil {
		return true
	}

	return false
}

// SetParentNetworkPath gets a reference to the given string and assigns it to the ParentNetworkPath field.
func (o *IpamNetworkDataData) SetParentNetworkPath(v string) {
	o.ParentNetworkPath = &v
}

// GetParentNetworkSize returns the ParentNetworkSize field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentNetworkSize() string {
	if o == nil || o.ParentNetworkSize == nil {
		var ret string
		return ret
	}
	return *o.ParentNetworkSize
}

// GetParentNetworkSizeOk returns a tuple with the ParentNetworkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentNetworkSizeOk() (*string, bool) {
	if o == nil || o.ParentNetworkSize == nil {
		return nil, false
	}
	return o.ParentNetworkSize, true
}

// HasParentNetworkSize returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentNetworkSize() bool {
	if o != nil && o.ParentNetworkSize != nil {
		return true
	}

	return false
}

// SetParentNetworkSize gets a reference to the given string and assigns it to the ParentNetworkSize field.
func (o *IpamNetworkDataData) SetParentNetworkSize(v string) {
	o.ParentNetworkSize = &v
}

// GetParentVlsmNetworkId returns the ParentVlsmNetworkId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetParentVlsmNetworkId() string {
	if o == nil || o.ParentVlsmNetworkId == nil {
		var ret string
		return ret
	}
	return *o.ParentVlsmNetworkId
}

// GetParentVlsmNetworkIdOk returns a tuple with the ParentVlsmNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetParentVlsmNetworkIdOk() (*string, bool) {
	if o == nil || o.ParentVlsmNetworkId == nil {
		return nil, false
	}
	return o.ParentVlsmNetworkId, true
}

// HasParentVlsmNetworkId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasParentVlsmNetworkId() bool {
	if o != nil && o.ParentVlsmNetworkId != nil {
		return true
	}

	return false
}

// SetParentVlsmNetworkId gets a reference to the given string and assigns it to the ParentVlsmNetworkId field.
func (o *IpamNetworkDataData) SetParentVlsmNetworkId(v string) {
	o.ParentVlsmNetworkId = &v
}

// GetSpaceClassName returns the SpaceClassName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceClassName() string {
	if o == nil || o.SpaceClassName == nil {
		var ret string
		return ret
	}
	return *o.SpaceClassName
}

// GetSpaceClassNameOk returns a tuple with the SpaceClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceClassNameOk() (*string, bool) {
	if o == nil || o.SpaceClassName == nil {
		return nil, false
	}
	return o.SpaceClassName, true
}

// HasSpaceClassName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceClassName() bool {
	if o != nil && o.SpaceClassName != nil {
		return true
	}

	return false
}

// SetSpaceClassName gets a reference to the given string and assigns it to the SpaceClassName field.
func (o *IpamNetworkDataData) SetSpaceClassName(v string) {
	o.SpaceClassName = &v
}

// GetSpaceClassParameters returns the SpaceClassParameters field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || o.SpaceClassParameters == nil {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return *o.SpaceClassParameters
}

// GetSpaceClassParametersOk returns a tuple with the SpaceClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceClassParametersOk() (*[]ApiClassParameterOutputEntry, bool) {
	if o == nil || o.SpaceClassParameters == nil {
		return nil, false
	}
	return o.SpaceClassParameters, true
}

// HasSpaceClassParameters returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceClassParameters() bool {
	if o != nil && o.SpaceClassParameters != nil {
		return true
	}

	return false
}

// SetSpaceClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the SpaceClassParameters field.
func (o *IpamNetworkDataData) SetSpaceClassParameters(v []ApiClassParameterOutputEntry) {
	o.SpaceClassParameters = &v
}

// GetSpaceDescription returns the SpaceDescription field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceDescription() string {
	if o == nil || o.SpaceDescription == nil {
		var ret string
		return ret
	}
	return *o.SpaceDescription
}

// GetSpaceDescriptionOk returns a tuple with the SpaceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceDescriptionOk() (*string, bool) {
	if o == nil || o.SpaceDescription == nil {
		return nil, false
	}
	return o.SpaceDescription, true
}

// HasSpaceDescription returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceDescription() bool {
	if o != nil && o.SpaceDescription != nil {
		return true
	}

	return false
}

// SetSpaceDescription gets a reference to the given string and assigns it to the SpaceDescription field.
func (o *IpamNetworkDataData) SetSpaceDescription(v string) {
	o.SpaceDescription = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceId() string {
	if o == nil || o.SpaceId == nil {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceIdOk() (*string, bool) {
	if o == nil || o.SpaceId == nil {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceId() bool {
	if o != nil && o.SpaceId != nil {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *IpamNetworkDataData) SetSpaceId(v string) {
	o.SpaceId = &v
}

// GetSpaceIsTemplate returns the SpaceIsTemplate field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceIsTemplate() string {
	if o == nil || o.SpaceIsTemplate == nil {
		var ret string
		return ret
	}
	return *o.SpaceIsTemplate
}

// GetSpaceIsTemplateOk returns a tuple with the SpaceIsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceIsTemplateOk() (*string, bool) {
	if o == nil || o.SpaceIsTemplate == nil {
		return nil, false
	}
	return o.SpaceIsTemplate, true
}

// HasSpaceIsTemplate returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceIsTemplate() bool {
	if o != nil && o.SpaceIsTemplate != nil {
		return true
	}

	return false
}

// SetSpaceIsTemplate gets a reference to the given string and assigns it to the SpaceIsTemplate field.
func (o *IpamNetworkDataData) SetSpaceIsTemplate(v string) {
	o.SpaceIsTemplate = &v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceName() string {
	if o == nil || o.SpaceName == nil {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceNameOk() (*string, bool) {
	if o == nil || o.SpaceName == nil {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceName() bool {
	if o != nil && o.SpaceName != nil {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *IpamNetworkDataData) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetSpaceParentSpaceId returns the SpaceParentSpaceId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetSpaceParentSpaceId() string {
	if o == nil || o.SpaceParentSpaceId == nil {
		var ret string
		return ret
	}
	return *o.SpaceParentSpaceId
}

// GetSpaceParentSpaceIdOk returns a tuple with the SpaceParentSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetSpaceParentSpaceIdOk() (*string, bool) {
	if o == nil || o.SpaceParentSpaceId == nil {
		return nil, false
	}
	return o.SpaceParentSpaceId, true
}

// HasSpaceParentSpaceId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasSpaceParentSpaceId() bool {
	if o != nil && o.SpaceParentSpaceId != nil {
		return true
	}

	return false
}

// SetSpaceParentSpaceId gets a reference to the given string and assigns it to the SpaceParentSpaceId field.
func (o *IpamNetworkDataData) SetSpaceParentSpaceId(v string) {
	o.SpaceParentSpaceId = &v
}

// GetNetworkStartHostaddr returns the NetworkStartHostaddr field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkStartHostaddr() string {
	if o == nil || o.NetworkStartHostaddr == nil {
		var ret string
		return ret
	}
	return *o.NetworkStartHostaddr
}

// GetNetworkStartHostaddrOk returns a tuple with the NetworkStartHostaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkStartHostaddrOk() (*string, bool) {
	if o == nil || o.NetworkStartHostaddr == nil {
		return nil, false
	}
	return o.NetworkStartHostaddr, true
}

// HasNetworkStartHostaddr returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkStartHostaddr() bool {
	if o != nil && o.NetworkStartHostaddr != nil {
		return true
	}

	return false
}

// SetNetworkStartHostaddr gets a reference to the given string and assigns it to the NetworkStartHostaddr field.
func (o *IpamNetworkDataData) SetNetworkStartHostaddr(v string) {
	o.NetworkStartHostaddr = &v
}

// GetNetworkStartAddressAddr returns the NetworkStartAddressAddr field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkStartAddressAddr() string {
	if o == nil || o.NetworkStartAddressAddr == nil {
		var ret string
		return ret
	}
	return *o.NetworkStartAddressAddr
}

// GetNetworkStartAddressAddrOk returns a tuple with the NetworkStartAddressAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkStartAddressAddrOk() (*string, bool) {
	if o == nil || o.NetworkStartAddressAddr == nil {
		return nil, false
	}
	return o.NetworkStartAddressAddr, true
}

// HasNetworkStartAddressAddr returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkStartAddressAddr() bool {
	if o != nil && o.NetworkStartAddressAddr != nil {
		return true
	}

	return false
}

// SetNetworkStartAddressAddr gets a reference to the given string and assigns it to the NetworkStartAddressAddr field.
func (o *IpamNetworkDataData) SetNetworkStartAddressAddr(v string) {
	o.NetworkStartAddressAddr = &v
}

// GetNetworkAllocatedPercent returns the NetworkAllocatedPercent field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkAllocatedPercent() string {
	if o == nil || o.NetworkAllocatedPercent == nil {
		var ret string
		return ret
	}
	return *o.NetworkAllocatedPercent
}

// GetNetworkAllocatedPercentOk returns a tuple with the NetworkAllocatedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkAllocatedPercentOk() (*string, bool) {
	if o == nil || o.NetworkAllocatedPercent == nil {
		return nil, false
	}
	return o.NetworkAllocatedPercent, true
}

// HasNetworkAllocatedPercent returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkAllocatedPercent() bool {
	if o != nil && o.NetworkAllocatedPercent != nil {
		return true
	}

	return false
}

// SetNetworkAllocatedPercent gets a reference to the given string and assigns it to the NetworkAllocatedPercent field.
func (o *IpamNetworkDataData) SetNetworkAllocatedPercent(v string) {
	o.NetworkAllocatedPercent = &v
}

// GetNetworkAllocatedSize returns the NetworkAllocatedSize field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkAllocatedSize() string {
	if o == nil || o.NetworkAllocatedSize == nil {
		var ret string
		return ret
	}
	return *o.NetworkAllocatedSize
}

// GetNetworkAllocatedSizeOk returns a tuple with the NetworkAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkAllocatedSizeOk() (*string, bool) {
	if o == nil || o.NetworkAllocatedSize == nil {
		return nil, false
	}
	return o.NetworkAllocatedSize, true
}

// HasNetworkAllocatedSize returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkAllocatedSize() bool {
	if o != nil && o.NetworkAllocatedSize != nil {
		return true
	}

	return false
}

// SetNetworkAllocatedSize gets a reference to the given string and assigns it to the NetworkAllocatedSize field.
func (o *IpamNetworkDataData) SetNetworkAllocatedSize(v string) {
	o.NetworkAllocatedSize = &v
}

// GetNetworkClassName returns the NetworkClassName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkClassName() string {
	if o == nil || o.NetworkClassName == nil {
		var ret string
		return ret
	}
	return *o.NetworkClassName
}

// GetNetworkClassNameOk returns a tuple with the NetworkClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkClassNameOk() (*string, bool) {
	if o == nil || o.NetworkClassName == nil {
		return nil, false
	}
	return o.NetworkClassName, true
}

// HasNetworkClassName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkClassName() bool {
	if o != nil && o.NetworkClassName != nil {
		return true
	}

	return false
}

// SetNetworkClassName gets a reference to the given string and assigns it to the NetworkClassName field.
func (o *IpamNetworkDataData) SetNetworkClassName(v string) {
	o.NetworkClassName = &v
}

// GetNetworkClassParameters returns the NetworkClassParameters field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkClassParameters() []ApiClassParameterOutputEntry {
	if o == nil || o.NetworkClassParameters == nil {
		var ret []ApiClassParameterOutputEntry
		return ret
	}
	return *o.NetworkClassParameters
}

// GetNetworkClassParametersOk returns a tuple with the NetworkClassParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkClassParametersOk() (*[]ApiClassParameterOutputEntry, bool) {
	if o == nil || o.NetworkClassParameters == nil {
		return nil, false
	}
	return o.NetworkClassParameters, true
}

// HasNetworkClassParameters returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkClassParameters() bool {
	if o != nil && o.NetworkClassParameters != nil {
		return true
	}

	return false
}

// SetNetworkClassParameters gets a reference to the given []ApiClassParameterOutputEntry and assigns it to the NetworkClassParameters field.
func (o *IpamNetworkDataData) SetNetworkClassParameters(v []ApiClassParameterOutputEntry) {
	o.NetworkClassParameters = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkId() string {
	if o == nil || o.NetworkId == nil {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkIdOk() (*string, bool) {
	if o == nil || o.NetworkId == nil {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkId() bool {
	if o != nil && o.NetworkId != nil {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *IpamNetworkDataData) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetNetworkAddressFreeSize returns the NetworkAddressFreeSize field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkAddressFreeSize() string {
	if o == nil || o.NetworkAddressFreeSize == nil {
		var ret string
		return ret
	}
	return *o.NetworkAddressFreeSize
}

// GetNetworkAddressFreeSizeOk returns a tuple with the NetworkAddressFreeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkAddressFreeSizeOk() (*string, bool) {
	if o == nil || o.NetworkAddressFreeSize == nil {
		return nil, false
	}
	return o.NetworkAddressFreeSize, true
}

// HasNetworkAddressFreeSize returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkAddressFreeSize() bool {
	if o != nil && o.NetworkAddressFreeSize != nil {
		return true
	}

	return false
}

// SetNetworkAddressFreeSize gets a reference to the given string and assigns it to the NetworkAddressFreeSize field.
func (o *IpamNetworkDataData) SetNetworkAddressFreeSize(v string) {
	o.NetworkAddressFreeSize = &v
}

// GetNetworkAddressUsedPercent returns the NetworkAddressUsedPercent field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkAddressUsedPercent() string {
	if o == nil || o.NetworkAddressUsedPercent == nil {
		var ret string
		return ret
	}
	return *o.NetworkAddressUsedPercent
}

// GetNetworkAddressUsedPercentOk returns a tuple with the NetworkAddressUsedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkAddressUsedPercentOk() (*string, bool) {
	if o == nil || o.NetworkAddressUsedPercent == nil {
		return nil, false
	}
	return o.NetworkAddressUsedPercent, true
}

// HasNetworkAddressUsedPercent returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkAddressUsedPercent() bool {
	if o != nil && o.NetworkAddressUsedPercent != nil {
		return true
	}

	return false
}

// SetNetworkAddressUsedPercent gets a reference to the given string and assigns it to the NetworkAddressUsedPercent field.
func (o *IpamNetworkDataData) SetNetworkAddressUsedPercent(v string) {
	o.NetworkAddressUsedPercent = &v
}

// GetNetworkAddressUsedSize returns the NetworkAddressUsedSize field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkAddressUsedSize() string {
	if o == nil || o.NetworkAddressUsedSize == nil {
		var ret string
		return ret
	}
	return *o.NetworkAddressUsedSize
}

// GetNetworkAddressUsedSizeOk returns a tuple with the NetworkAddressUsedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkAddressUsedSizeOk() (*string, bool) {
	if o == nil || o.NetworkAddressUsedSize == nil {
		return nil, false
	}
	return o.NetworkAddressUsedSize, true
}

// HasNetworkAddressUsedSize returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkAddressUsedSize() bool {
	if o != nil && o.NetworkAddressUsedSize != nil {
		return true
	}

	return false
}

// SetNetworkAddressUsedSize gets a reference to the given string and assigns it to the NetworkAddressUsedSize field.
func (o *IpamNetworkDataData) SetNetworkAddressUsedSize(v string) {
	o.NetworkAddressUsedSize = &v
}

// GetNetworkIsValid returns the NetworkIsValid field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkIsValid() string {
	if o == nil || o.NetworkIsValid == nil {
		var ret string
		return ret
	}
	return *o.NetworkIsValid
}

// GetNetworkIsValidOk returns a tuple with the NetworkIsValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkIsValidOk() (*string, bool) {
	if o == nil || o.NetworkIsValid == nil {
		return nil, false
	}
	return o.NetworkIsValid, true
}

// HasNetworkIsValid returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkIsValid() bool {
	if o != nil && o.NetworkIsValid != nil {
		return true
	}

	return false
}

// SetNetworkIsValid gets a reference to the given string and assigns it to the NetworkIsValid field.
func (o *IpamNetworkDataData) SetNetworkIsValid(v string) {
	o.NetworkIsValid = &v
}

// GetNetworkLevel returns the NetworkLevel field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkLevel() string {
	if o == nil || o.NetworkLevel == nil {
		var ret string
		return ret
	}
	return *o.NetworkLevel
}

// GetNetworkLevelOk returns a tuple with the NetworkLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkLevelOk() (*string, bool) {
	if o == nil || o.NetworkLevel == nil {
		return nil, false
	}
	return o.NetworkLevel, true
}

// HasNetworkLevel returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkLevel() bool {
	if o != nil && o.NetworkLevel != nil {
		return true
	}

	return false
}

// SetNetworkLevel gets a reference to the given string and assigns it to the NetworkLevel field.
func (o *IpamNetworkDataData) SetNetworkLevel(v string) {
	o.NetworkLevel = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkName() string {
	if o == nil || o.NetworkName == nil {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkNameOk() (*string, bool) {
	if o == nil || o.NetworkName == nil {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkName() bool {
	if o != nil && o.NetworkName != nil {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *IpamNetworkDataData) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetNetworkSize returns the NetworkSize field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkSize() string {
	if o == nil || o.NetworkSize == nil {
		var ret string
		return ret
	}
	return *o.NetworkSize
}

// GetNetworkSizeOk returns a tuple with the NetworkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkSizeOk() (*string, bool) {
	if o == nil || o.NetworkSize == nil {
		return nil, false
	}
	return o.NetworkSize, true
}

// HasNetworkSize returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkSize() bool {
	if o != nil && o.NetworkSize != nil {
		return true
	}

	return false
}

// SetNetworkSize gets a reference to the given string and assigns it to the NetworkSize field.
func (o *IpamNetworkDataData) SetNetworkSize(v string) {
	o.NetworkSize = &v
}

// GetNetworkUsedPercent returns the NetworkUsedPercent field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkUsedPercent() string {
	if o == nil || o.NetworkUsedPercent == nil {
		var ret string
		return ret
	}
	return *o.NetworkUsedPercent
}

// GetNetworkUsedPercentOk returns a tuple with the NetworkUsedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkUsedPercentOk() (*string, bool) {
	if o == nil || o.NetworkUsedPercent == nil {
		return nil, false
	}
	return o.NetworkUsedPercent, true
}

// HasNetworkUsedPercent returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkUsedPercent() bool {
	if o != nil && o.NetworkUsedPercent != nil {
		return true
	}

	return false
}

// SetNetworkUsedPercent gets a reference to the given string and assigns it to the NetworkUsedPercent field.
func (o *IpamNetworkDataData) SetNetworkUsedPercent(v string) {
	o.NetworkUsedPercent = &v
}

// GetNetworkUsedSize returns the NetworkUsedSize field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkUsedSize() string {
	if o == nil || o.NetworkUsedSize == nil {
		var ret string
		return ret
	}
	return *o.NetworkUsedSize
}

// GetNetworkUsedSizeOk returns a tuple with the NetworkUsedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkUsedSizeOk() (*string, bool) {
	if o == nil || o.NetworkUsedSize == nil {
		return nil, false
	}
	return o.NetworkUsedSize, true
}

// HasNetworkUsedSize returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkUsedSize() bool {
	if o != nil && o.NetworkUsedSize != nil {
		return true
	}

	return false
}

// SetNetworkUsedSize gets a reference to the given string and assigns it to the NetworkUsedSize field.
func (o *IpamNetworkDataData) SetNetworkUsedSize(v string) {
	o.NetworkUsedSize = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetDomainId() string {
	if o == nil || o.DomainId == nil {
		var ret string
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetDomainIdOk() (*string, bool) {
	if o == nil || o.DomainId == nil {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasDomainId() bool {
	if o != nil && o.DomainId != nil {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given string and assigns it to the DomainId field.
func (o *IpamNetworkDataData) SetDomainId(v string) {
	o.DomainId = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *IpamNetworkDataData) SetDomainName(v string) {
	o.DomainName = &v
}

// GetRangeId returns the RangeId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetRangeId() string {
	if o == nil || o.RangeId == nil {
		var ret string
		return ret
	}
	return *o.RangeId
}

// GetRangeIdOk returns a tuple with the RangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetRangeIdOk() (*string, bool) {
	if o == nil || o.RangeId == nil {
		return nil, false
	}
	return o.RangeId, true
}

// HasRangeId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasRangeId() bool {
	if o != nil && o.RangeId != nil {
		return true
	}

	return false
}

// SetRangeId gets a reference to the given string and assigns it to the RangeId field.
func (o *IpamNetworkDataData) SetRangeId(v string) {
	o.RangeId = &v
}

// GetRangeName returns the RangeName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetRangeName() string {
	if o == nil || o.RangeName == nil {
		var ret string
		return ret
	}
	return *o.RangeName
}

// GetRangeNameOk returns a tuple with the RangeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetRangeNameOk() (*string, bool) {
	if o == nil || o.RangeName == nil {
		return nil, false
	}
	return o.RangeName, true
}

// HasRangeName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasRangeName() bool {
	if o != nil && o.RangeName != nil {
		return true
	}

	return false
}

// SetRangeName gets a reference to the given string and assigns it to the RangeName field.
func (o *IpamNetworkDataData) SetRangeName(v string) {
	o.RangeName = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlanId() string {
	if o == nil || o.VlanId == nil {
		var ret string
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlanIdOk() (*string, bool) {
	if o == nil || o.VlanId == nil {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlanId() bool {
	if o != nil && o.VlanId != nil {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given string and assigns it to the VlanId field.
func (o *IpamNetworkDataData) SetVlanId(v string) {
	o.VlanId = &v
}

// GetVlanName returns the VlanName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlanName() string {
	if o == nil || o.VlanName == nil {
		var ret string
		return ret
	}
	return *o.VlanName
}

// GetVlanNameOk returns a tuple with the VlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlanNameOk() (*string, bool) {
	if o == nil || o.VlanName == nil {
		return nil, false
	}
	return o.VlanName, true
}

// HasVlanName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlanName() bool {
	if o != nil && o.VlanName != nil {
		return true
	}

	return false
}

// SetVlanName gets a reference to the given string and assigns it to the VlanName field.
func (o *IpamNetworkDataData) SetVlanName(v string) {
	o.VlanName = &v
}

// GetVlanVlanId returns the VlanVlanId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlanVlanId() string {
	if o == nil || o.VlanVlanId == nil {
		var ret string
		return ret
	}
	return *o.VlanVlanId
}

// GetVlanVlanIdOk returns a tuple with the VlanVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlanVlanIdOk() (*string, bool) {
	if o == nil || o.VlanVlanId == nil {
		return nil, false
	}
	return o.VlanVlanId, true
}

// HasVlanVlanId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlanVlanId() bool {
	if o != nil && o.VlanVlanId != nil {
		return true
	}

	return false
}

// SetVlanVlanId gets a reference to the given string and assigns it to the VlanVlanId field.
func (o *IpamNetworkDataData) SetVlanVlanId(v string) {
	o.VlanVlanId = &v
}

// GetVlsmBlockId returns the VlsmBlockId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlsmBlockId() string {
	if o == nil || o.VlsmBlockId == nil {
		var ret string
		return ret
	}
	return *o.VlsmBlockId
}

// GetVlsmBlockIdOk returns a tuple with the VlsmBlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlsmBlockIdOk() (*string, bool) {
	if o == nil || o.VlsmBlockId == nil {
		return nil, false
	}
	return o.VlsmBlockId, true
}

// HasVlsmBlockId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlsmBlockId() bool {
	if o != nil && o.VlsmBlockId != nil {
		return true
	}

	return false
}

// SetVlsmBlockId gets a reference to the given string and assigns it to the VlsmBlockId field.
func (o *IpamNetworkDataData) SetVlsmBlockId(v string) {
	o.VlsmBlockId = &v
}

// GetVlsmSpaceId returns the VlsmSpaceId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlsmSpaceId() string {
	if o == nil || o.VlsmSpaceId == nil {
		var ret string
		return ret
	}
	return *o.VlsmSpaceId
}

// GetVlsmSpaceIdOk returns a tuple with the VlsmSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlsmSpaceIdOk() (*string, bool) {
	if o == nil || o.VlsmSpaceId == nil {
		return nil, false
	}
	return o.VlsmSpaceId, true
}

// HasVlsmSpaceId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlsmSpaceId() bool {
	if o != nil && o.VlsmSpaceId != nil {
		return true
	}

	return false
}

// SetVlsmSpaceId gets a reference to the given string and assigns it to the VlsmSpaceId field.
func (o *IpamNetworkDataData) SetVlsmSpaceId(v string) {
	o.VlsmSpaceId = &v
}

// GetVlsmSpaceName returns the VlsmSpaceName field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlsmSpaceName() string {
	if o == nil || o.VlsmSpaceName == nil {
		var ret string
		return ret
	}
	return *o.VlsmSpaceName
}

// GetVlsmSpaceNameOk returns a tuple with the VlsmSpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlsmSpaceNameOk() (*string, bool) {
	if o == nil || o.VlsmSpaceName == nil {
		return nil, false
	}
	return o.VlsmSpaceName, true
}

// HasVlsmSpaceName returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlsmSpaceName() bool {
	if o != nil && o.VlsmSpaceName != nil {
		return true
	}

	return false
}

// SetVlsmSpaceName gets a reference to the given string and assigns it to the VlsmSpaceName field.
func (o *IpamNetworkDataData) SetVlsmSpaceName(v string) {
	o.VlsmSpaceName = &v
}

// GetVlsmNetworkId returns the VlsmNetworkId field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetVlsmNetworkId() string {
	if o == nil || o.VlsmNetworkId == nil {
		var ret string
		return ret
	}
	return *o.VlsmNetworkId
}

// GetVlsmNetworkIdOk returns a tuple with the VlsmNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetVlsmNetworkIdOk() (*string, bool) {
	if o == nil || o.VlsmNetworkId == nil {
		return nil, false
	}
	return o.VlsmNetworkId, true
}

// HasVlsmNetworkId returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasVlsmNetworkId() bool {
	if o != nil && o.VlsmNetworkId != nil {
		return true
	}

	return false
}

// SetVlsmNetworkId gets a reference to the given string and assigns it to the VlsmNetworkId field.
func (o *IpamNetworkDataData) SetVlsmNetworkId(v string) {
	o.VlsmNetworkId = &v
}

// GetNetworkRipeWaitingState returns the NetworkRipeWaitingState field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkRipeWaitingState() string {
	if o == nil || o.NetworkRipeWaitingState == nil {
		var ret string
		return ret
	}
	return *o.NetworkRipeWaitingState
}

// GetNetworkRipeWaitingStateOk returns a tuple with the NetworkRipeWaitingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkRipeWaitingStateOk() (*string, bool) {
	if o == nil || o.NetworkRipeWaitingState == nil {
		return nil, false
	}
	return o.NetworkRipeWaitingState, true
}

// HasNetworkRipeWaitingState returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkRipeWaitingState() bool {
	if o != nil && o.NetworkRipeWaitingState != nil {
		return true
	}

	return false
}

// SetNetworkRipeWaitingState gets a reference to the given string and assigns it to the NetworkRipeWaitingState field.
func (o *IpamNetworkDataData) SetNetworkRipeWaitingState(v string) {
	o.NetworkRipeWaitingState = &v
}

// GetNetworkRipeWaitingStatus returns the NetworkRipeWaitingStatus field value if set, zero value otherwise.
func (o *IpamNetworkDataData) GetNetworkRipeWaitingStatus() string {
	if o == nil || o.NetworkRipeWaitingStatus == nil {
		var ret string
		return ret
	}
	return *o.NetworkRipeWaitingStatus
}

// GetNetworkRipeWaitingStatusOk returns a tuple with the NetworkRipeWaitingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamNetworkDataData) GetNetworkRipeWaitingStatusOk() (*string, bool) {
	if o == nil || o.NetworkRipeWaitingStatus == nil {
		return nil, false
	}
	return o.NetworkRipeWaitingStatus, true
}

// HasNetworkRipeWaitingStatus returns a boolean if a field has been set.
func (o *IpamNetworkDataData) HasNetworkRipeWaitingStatus() bool {
	if o != nil && o.NetworkRipeWaitingStatus != nil {
		return true
	}

	return false
}

// SetNetworkRipeWaitingStatus gets a reference to the given string and assigns it to the NetworkRipeWaitingStatus field.
func (o *IpamNetworkDataData) SetNetworkRipeWaitingStatus(v string) {
	o.NetworkRipeWaitingStatus = &v
}

func (o IpamNetworkDataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkEndHostaddr != nil {
		toSerialize["network_end_hostaddr"] = o.NetworkEndHostaddr
	}
	if o.NetworkEndAddressAddr != nil {
		toSerialize["network_end_address_addr"] = o.NetworkEndAddressAddr
	}
	if o.NetworkIsInOrphan != nil {
		toSerialize["network_is_in_orphan"] = o.NetworkIsInOrphan
	}
	if o.NetworkIsTerminal != nil {
		toSerialize["network_is_terminal"] = o.NetworkIsTerminal
	}
	if o.NetworkLockNetworkBroadcast != nil {
		toSerialize["network_lock_network_broadcast"] = o.NetworkLockNetworkBroadcast
	}
	if o.NetworkMultistatus != nil {
		toSerialize["network_multistatus"] = o.NetworkMultistatus
	}
	if o.ParentNetworkEndAddressAddr != nil {
		toSerialize["parent_network_end_address_addr"] = o.ParentNetworkEndAddressAddr
	}
	if o.ParentNetworkIsTerminal != nil {
		toSerialize["parent_network_is_terminal"] = o.ParentNetworkIsTerminal
	}
	if o.ParentSpaceId != nil {
		toSerialize["parent_space_id"] = o.ParentSpaceId
	}
	if o.ParentSpaceName != nil {
		toSerialize["parent_space_name"] = o.ParentSpaceName
	}
	if o.ParentNetworkStartAddressAddr != nil {
		toSerialize["parent_network_start_address_addr"] = o.ParentNetworkStartAddressAddr
	}
	if o.ParentNetworkClassName != nil {
		toSerialize["parent_network_class_name"] = o.ParentNetworkClassName
	}
	if o.ParentNetworkClassParameters != nil {
		toSerialize["parent_network_class_parameters"] = o.ParentNetworkClassParameters
	}
	if o.ParentNetworkId != nil {
		toSerialize["parent_network_id"] = o.ParentNetworkId
	}
	if o.ParentNetworkLevel != nil {
		toSerialize["parent_network_level"] = o.ParentNetworkLevel
	}
	if o.ParentNetworkName != nil {
		toSerialize["parent_network_name"] = o.ParentNetworkName
	}
	if o.ParentNetworkPath != nil {
		toSerialize["parent_network_path"] = o.ParentNetworkPath
	}
	if o.ParentNetworkSize != nil {
		toSerialize["parent_network_size"] = o.ParentNetworkSize
	}
	if o.ParentVlsmNetworkId != nil {
		toSerialize["parent_vlsm_network_id"] = o.ParentVlsmNetworkId
	}
	if o.SpaceClassName != nil {
		toSerialize["space_class_name"] = o.SpaceClassName
	}
	if o.SpaceClassParameters != nil {
		toSerialize["space_class_parameters"] = o.SpaceClassParameters
	}
	if o.SpaceDescription != nil {
		toSerialize["space_description"] = o.SpaceDescription
	}
	if o.SpaceId != nil {
		toSerialize["space_id"] = o.SpaceId
	}
	if o.SpaceIsTemplate != nil {
		toSerialize["space_is_template"] = o.SpaceIsTemplate
	}
	if o.SpaceName != nil {
		toSerialize["space_name"] = o.SpaceName
	}
	if o.SpaceParentSpaceId != nil {
		toSerialize["space_parent_space_id"] = o.SpaceParentSpaceId
	}
	if o.NetworkStartHostaddr != nil {
		toSerialize["network_start_hostaddr"] = o.NetworkStartHostaddr
	}
	if o.NetworkStartAddressAddr != nil {
		toSerialize["network_start_address_addr"] = o.NetworkStartAddressAddr
	}
	if o.NetworkAllocatedPercent != nil {
		toSerialize["network_allocated_percent"] = o.NetworkAllocatedPercent
	}
	if o.NetworkAllocatedSize != nil {
		toSerialize["network_allocated_size"] = o.NetworkAllocatedSize
	}
	if o.NetworkClassName != nil {
		toSerialize["network_class_name"] = o.NetworkClassName
	}
	if o.NetworkClassParameters != nil {
		toSerialize["network_class_parameters"] = o.NetworkClassParameters
	}
	if o.NetworkId != nil {
		toSerialize["network_id"] = o.NetworkId
	}
	if o.NetworkAddressFreeSize != nil {
		toSerialize["network_address_free_size"] = o.NetworkAddressFreeSize
	}
	if o.NetworkAddressUsedPercent != nil {
		toSerialize["network_address_used_percent"] = o.NetworkAddressUsedPercent
	}
	if o.NetworkAddressUsedSize != nil {
		toSerialize["network_address_used_size"] = o.NetworkAddressUsedSize
	}
	if o.NetworkIsValid != nil {
		toSerialize["network_is_valid"] = o.NetworkIsValid
	}
	if o.NetworkLevel != nil {
		toSerialize["network_level"] = o.NetworkLevel
	}
	if o.NetworkName != nil {
		toSerialize["network_name"] = o.NetworkName
	}
	if o.NetworkSize != nil {
		toSerialize["network_size"] = o.NetworkSize
	}
	if o.NetworkUsedPercent != nil {
		toSerialize["network_used_percent"] = o.NetworkUsedPercent
	}
	if o.NetworkUsedSize != nil {
		toSerialize["network_used_size"] = o.NetworkUsedSize
	}
	if o.DomainId != nil {
		toSerialize["domain_id"] = o.DomainId
	}
	if o.DomainName != nil {
		toSerialize["domain_name"] = o.DomainName
	}
	if o.RangeId != nil {
		toSerialize["range_id"] = o.RangeId
	}
	if o.RangeName != nil {
		toSerialize["range_name"] = o.RangeName
	}
	if o.VlanId != nil {
		toSerialize["vlan_id"] = o.VlanId
	}
	if o.VlanName != nil {
		toSerialize["vlan_name"] = o.VlanName
	}
	if o.VlanVlanId != nil {
		toSerialize["vlan_vlan_id"] = o.VlanVlanId
	}
	if o.VlsmBlockId != nil {
		toSerialize["vlsm_block_id"] = o.VlsmBlockId
	}
	if o.VlsmSpaceId != nil {
		toSerialize["vlsm_space_id"] = o.VlsmSpaceId
	}
	if o.VlsmSpaceName != nil {
		toSerialize["vlsm_space_name"] = o.VlsmSpaceName
	}
	if o.VlsmNetworkId != nil {
		toSerialize["vlsm_network_id"] = o.VlsmNetworkId
	}
	if o.NetworkRipeWaitingState != nil {
		toSerialize["network_ripe_waiting_state"] = o.NetworkRipeWaitingState
	}
	if o.NetworkRipeWaitingStatus != nil {
		toSerialize["network_ripe_waiting_status"] = o.NetworkRipeWaitingStatus
	}
	return json.Marshal(toSerialize)
}

type NullableIpamNetworkDataData struct {
	value *IpamNetworkDataData
	isSet bool
}

func (v NullableIpamNetworkDataData) Get() *IpamNetworkDataData {
	return v.value
}

func (v *NullableIpamNetworkDataData) Set(val *IpamNetworkDataData) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamNetworkDataData) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamNetworkDataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamNetworkDataData(val *IpamNetworkDataData) *NullableIpamNetworkDataData {
	return &NullableIpamNetworkDataData{value: val, isSet: true}
}

func (v NullableIpamNetworkDataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamNetworkDataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


