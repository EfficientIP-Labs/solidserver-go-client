/*
 * SOLIDserver API
 *
 * OpenAPI 3.0.2 API definition for SOLIDserver service from EfficientIP.<p>Copyright Â© 2000-2021 EfficientIP</p><p><em>All specifications and information regarding the products in  this document are subject to change without notice and should not be  construed as a commitment by EfficientIP. EfficientIP assumes no  responsibility or liability for any mistakes or inaccuracies that may appear  in this document. All statements and recommendations in this document are  believed to be accurate but are presented without warranty. Users must take  full responsibility for their application of any product.</em></p><p>Generated (Monday 14th of June 2021 12:30:34 PM)</p>
 *
 * API version: 2.0
 * Contact: support-api@efficientip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdsclient

import (
	"encoding/json"
)

// DnsViewparamDataData struct for DnsViewparamDataData
type DnsViewparamDataData struct {
	// The value of the DNS option set on the view.
	ViewparamValue *string `json:"viewparam_value,omitempty"`
	// The delay of creation status. <b>1</b> indicates that the object is not created yet.
	ViewparamDelayedCreateTime *string `json:"viewparam_delayed_create_time,omitempty"`
	// The delay of deletion status. <b>1</b> indicates that the object is not deleted yet.
	ViewparamDelayedDeleteTime *string `json:"viewparam_delayed_delete_time,omitempty"`
	// The database identifier (ID) of the DNS server the object belongs to.
	ServerId *string `json:"server_id,omitempty"`
	// The name of the DNS server the object belongs to.
	ServerName *string `json:"server_name,omitempty"`
	// The database identifier (ID) of the DNS view.
	ViewId *string `json:"view_id,omitempty"`
	// The name of the DNS view.
	ViewName *string `json:"view_name,omitempty"`
	// The database identifier (ID) of the DNS view param the object belongs to.
	Oid *string `json:"oid,omitempty"`
	// The name of the DNS option set on the view.
	ViewparamKey *string `json:"viewparam_key,omitempty"`
}

// NewDnsViewparamDataData instantiates a new DnsViewparamDataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsViewparamDataData() *DnsViewparamDataData {
	this := DnsViewparamDataData{}
	return &this
}

// NewDnsViewparamDataDataWithDefaults instantiates a new DnsViewparamDataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsViewparamDataDataWithDefaults() *DnsViewparamDataData {
	this := DnsViewparamDataData{}
	return &this
}

// GetViewparamValue returns the ViewparamValue field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetViewparamValue() string {
	if o == nil || o.ViewparamValue == nil {
		var ret string
		return ret
	}
	return *o.ViewparamValue
}

// GetViewparamValueOk returns a tuple with the ViewparamValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetViewparamValueOk() (*string, bool) {
	if o == nil || o.ViewparamValue == nil {
		return nil, false
	}
	return o.ViewparamValue, true
}

// HasViewparamValue returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasViewparamValue() bool {
	if o != nil && o.ViewparamValue != nil {
		return true
	}

	return false
}

// SetViewparamValue gets a reference to the given string and assigns it to the ViewparamValue field.
func (o *DnsViewparamDataData) SetViewparamValue(v string) {
	o.ViewparamValue = &v
}

// GetViewparamDelayedCreateTime returns the ViewparamDelayedCreateTime field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetViewparamDelayedCreateTime() string {
	if o == nil || o.ViewparamDelayedCreateTime == nil {
		var ret string
		return ret
	}
	return *o.ViewparamDelayedCreateTime
}

// GetViewparamDelayedCreateTimeOk returns a tuple with the ViewparamDelayedCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetViewparamDelayedCreateTimeOk() (*string, bool) {
	if o == nil || o.ViewparamDelayedCreateTime == nil {
		return nil, false
	}
	return o.ViewparamDelayedCreateTime, true
}

// HasViewparamDelayedCreateTime returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasViewparamDelayedCreateTime() bool {
	if o != nil && o.ViewparamDelayedCreateTime != nil {
		return true
	}

	return false
}

// SetViewparamDelayedCreateTime gets a reference to the given string and assigns it to the ViewparamDelayedCreateTime field.
func (o *DnsViewparamDataData) SetViewparamDelayedCreateTime(v string) {
	o.ViewparamDelayedCreateTime = &v
}

// GetViewparamDelayedDeleteTime returns the ViewparamDelayedDeleteTime field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetViewparamDelayedDeleteTime() string {
	if o == nil || o.ViewparamDelayedDeleteTime == nil {
		var ret string
		return ret
	}
	return *o.ViewparamDelayedDeleteTime
}

// GetViewparamDelayedDeleteTimeOk returns a tuple with the ViewparamDelayedDeleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetViewparamDelayedDeleteTimeOk() (*string, bool) {
	if o == nil || o.ViewparamDelayedDeleteTime == nil {
		return nil, false
	}
	return o.ViewparamDelayedDeleteTime, true
}

// HasViewparamDelayedDeleteTime returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasViewparamDelayedDeleteTime() bool {
	if o != nil && o.ViewparamDelayedDeleteTime != nil {
		return true
	}

	return false
}

// SetViewparamDelayedDeleteTime gets a reference to the given string and assigns it to the ViewparamDelayedDeleteTime field.
func (o *DnsViewparamDataData) SetViewparamDelayedDeleteTime(v string) {
	o.ViewparamDelayedDeleteTime = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetServerId() string {
	if o == nil || o.ServerId == nil {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetServerIdOk() (*string, bool) {
	if o == nil || o.ServerId == nil {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasServerId() bool {
	if o != nil && o.ServerId != nil {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *DnsViewparamDataData) SetServerId(v string) {
	o.ServerId = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetServerName() string {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetServerNameOk() (*string, bool) {
	if o == nil || o.ServerName == nil {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasServerName() bool {
	if o != nil && o.ServerName != nil {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *DnsViewparamDataData) SetServerName(v string) {
	o.ServerName = &v
}

// GetViewId returns the ViewId field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetViewId() string {
	if o == nil || o.ViewId == nil {
		var ret string
		return ret
	}
	return *o.ViewId
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetViewIdOk() (*string, bool) {
	if o == nil || o.ViewId == nil {
		return nil, false
	}
	return o.ViewId, true
}

// HasViewId returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasViewId() bool {
	if o != nil && o.ViewId != nil {
		return true
	}

	return false
}

// SetViewId gets a reference to the given string and assigns it to the ViewId field.
func (o *DnsViewparamDataData) SetViewId(v string) {
	o.ViewId = &v
}

// GetViewName returns the ViewName field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetViewName() string {
	if o == nil || o.ViewName == nil {
		var ret string
		return ret
	}
	return *o.ViewName
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetViewNameOk() (*string, bool) {
	if o == nil || o.ViewName == nil {
		return nil, false
	}
	return o.ViewName, true
}

// HasViewName returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasViewName() bool {
	if o != nil && o.ViewName != nil {
		return true
	}

	return false
}

// SetViewName gets a reference to the given string and assigns it to the ViewName field.
func (o *DnsViewparamDataData) SetViewName(v string) {
	o.ViewName = &v
}

// GetOid returns the Oid field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetOid() string {
	if o == nil || o.Oid == nil {
		var ret string
		return ret
	}
	return *o.Oid
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetOidOk() (*string, bool) {
	if o == nil || o.Oid == nil {
		return nil, false
	}
	return o.Oid, true
}

// HasOid returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasOid() bool {
	if o != nil && o.Oid != nil {
		return true
	}

	return false
}

// SetOid gets a reference to the given string and assigns it to the Oid field.
func (o *DnsViewparamDataData) SetOid(v string) {
	o.Oid = &v
}

// GetViewparamKey returns the ViewparamKey field value if set, zero value otherwise.
func (o *DnsViewparamDataData) GetViewparamKey() string {
	if o == nil || o.ViewparamKey == nil {
		var ret string
		return ret
	}
	return *o.ViewparamKey
}

// GetViewparamKeyOk returns a tuple with the ViewparamKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsViewparamDataData) GetViewparamKeyOk() (*string, bool) {
	if o == nil || o.ViewparamKey == nil {
		return nil, false
	}
	return o.ViewparamKey, true
}

// HasViewparamKey returns a boolean if a field has been set.
func (o *DnsViewparamDataData) HasViewparamKey() bool {
	if o != nil && o.ViewparamKey != nil {
		return true
	}

	return false
}

// SetViewparamKey gets a reference to the given string and assigns it to the ViewparamKey field.
func (o *DnsViewparamDataData) SetViewparamKey(v string) {
	o.ViewparamKey = &v
}

func (o DnsViewparamDataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewparamValue != nil {
		toSerialize["viewparam_value"] = o.ViewparamValue
	}
	if o.ViewparamDelayedCreateTime != nil {
		toSerialize["viewparam_delayed_create_time"] = o.ViewparamDelayedCreateTime
	}
	if o.ViewparamDelayedDeleteTime != nil {
		toSerialize["viewparam_delayed_delete_time"] = o.ViewparamDelayedDeleteTime
	}
	if o.ServerId != nil {
		toSerialize["server_id"] = o.ServerId
	}
	if o.ServerName != nil {
		toSerialize["server_name"] = o.ServerName
	}
	if o.ViewId != nil {
		toSerialize["view_id"] = o.ViewId
	}
	if o.ViewName != nil {
		toSerialize["view_name"] = o.ViewName
	}
	if o.Oid != nil {
		toSerialize["oid"] = o.Oid
	}
	if o.ViewparamKey != nil {
		toSerialize["viewparam_key"] = o.ViewparamKey
	}
	return json.Marshal(toSerialize)
}

type NullableDnsViewparamDataData struct {
	value *DnsViewparamDataData
	isSet bool
}

func (v NullableDnsViewparamDataData) Get() *DnsViewparamDataData {
	return v.value
}

func (v *NullableDnsViewparamDataData) Set(val *DnsViewparamDataData) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsViewparamDataData) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsViewparamDataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsViewparamDataData(val *DnsViewparamDataData) *NullableDnsViewparamDataData {
	return &NullableDnsViewparamDataData{value: val, isSet: true}
}

func (v NullableDnsViewparamDataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsViewparamDataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


